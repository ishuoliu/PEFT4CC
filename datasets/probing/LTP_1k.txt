tr	del	<mask>rules/DiffRuleKeysScriptIntegrationTest.java<add>rules/DiffRuleKeysScriptIntegrationTest.java<add>private int lastPositionInLog;<add>lastPositionInLog = 0;<del>workspace.copyFile(LOG_FILE_PATH.toString(), logOut);<del>workspace.writeContentsToPath("", LOG_FILE_PATH.toString());<add>String fullLogContents = workspace.getFileContents(LOG_FILE_PATH.toString());<add>String logContentsForThisInvocation = fullLogContents.substring(lastPositionInLog);<add>lastPositionInLog += logContentsForThisInvocation.length();<add>workspace.writeContentsToPath(logContentsForThisInvocation, logOut);
tr	add	<del>paros/Constant.java<mask>paros/Constant.java<add>if (path.startsWith("/") && path.indexOf(":") > 0) {<add>// This is likely to be a Windows path, remove to initial slash or it will fail<add>path = path.substring(1);<add>}
tr	add	<del>solo/RobotiumUtils.java<add>solo/RobotiumUtils.java<del>* Checks if a check box with a given index is checked<del>*<del>* @param index of the check box to check<del>* @return true if check box is checked and false if it is not checked<add>* Checks if a {@link CheckBox} with a given index is checked.<add>*<add>* @param index of the {@code CheckBox} to check. {@code 0} if only one is available<mask>* @return {@code true} if {@code CheckBox} is checked and {@code false} if it is not checked
tr	add	<del>model/Leg.java<add>model/Leg.java<add>* For transit legs, the ID of the trip.<mask>* For non-transit legs, null.<add>*/<add>@XmlAttribute<add>public String tripId = null;<add><add>/**
tr	add	<del>completion/JetCompletionContributor.java<add>completion/JetCompletionContributor.java<del>JavaCompletionSorting.addJavaSorting(parameters, tempResult),<mask>JavaCompletionSorting.addJavaSorting(parameters, tempResult).getPrefixMatcher(),
tr	add	<del>integrationtests/InformationSchemaQueryTest.java<add>integrationtests/InformationSchemaQueryTest.java<del>client().admin().indices().close(new CloseIndexRequest("t3"));<del>ensureGreen();<add>ensureYellow();<mask>client().admin().indices().close(new CloseIndexRequest("t3")).actionGet();
tr	del	<del>dsl/DisruptorTest.java<add>dsl/DisruptorTest.java<mask>disruptor.handleEventsWith(processor);<del>disruptor.after(processor).handleEventsWith(handlerWithBarrier);<add><add>disruptor.handleEventsWith(processor).then(handlerWithBarrier);
tr	add	<del>net/Client.java<add>net/Client.java<add>* Return a byte array of anything that's in the serial buffer<add>* up to the specified maximum number of bytes.<add>* Not particularly memory/speed efficient, because it creates<add>* a byte array on each read, but it's easier to use than<add>* readBytes(byte b[]) (see below).<add>*<add>* @param max the maximum number of bytes to read<add>*/<add>public byte[] readBytes(int max) {<add>if (bufferIndex == bufferLast) return null;<add><add>synchronized (buffer) {<add>int length = bufferLast - bufferIndex;<add>if (length > max) length = max;<add>byte outgoing[] = new byte[length];<add>System.arraycopy(buffer, bufferIndex, outgoing, 0, length);<add><add>bufferIndex += length;<add>if (bufferIndex == bufferLast) {<add>bufferIndex = 0;  // rewind<add>bufferLast = 0;<add>}<add><add>return outgoing;<add>}<add>}<add><mask><add>/**<add>* 
tr	del	<mask>aws/AWSClient.java<add>aws/AWSClient.java<add>request.setInstanceId(instanceId);
tr	del	<mask>jackson/JacksonBindingTest.java<add>jackson/JacksonBindingTest.java<del>import org.apache.camel.processor.binding.DataFormatBinding;<add>import org.apache.camel.processor.binding.DataFormatBinding;
tr	del	<del>MissionHandlers/DiscreteMovementCommandsImplementation.java<add>MissionHandlers/DiscreteMovementCommandsImplementation.java<del>MinecraftServer.getServer().getEntityWorld().setBlockState( pos, blockType );<add>player.worldObj.setBlockState( pos, blockType );<mask>MinecraftServer.getServer().getEntityWorld().destroyBlock( hitPos, dropBlock );<add>EntityPlayerMP player = ctx.getServerHandler().playerEntity;<add>player.worldObj.destroyBlock( hitPos, dropBlock );
tr	add	<del>runtime/DefaultGroovyMethods.java<add>runtime/DefaultGroovyMethods.java<add>* Convenience method to capitalize the first letter of a string<add>* (typically the first letter of a word). Example usage:<add>* <add>* assert 'h'.capitalize() == 'H'<add>* assert 'hello'.capitalize() == 'Hello'<add>* assert 'hello world'.capitalize() == 'Hello world'<add>* assert 'Hello World' ==<add>*     'hello world'.split(' ').collect{ it.capitalize() }.join(' ')<add>* <add>*<mask>* @param self The string to capitalize<add>* @return String The capitalized String result of split<add>* @since 1.7.3<add>*/<add>public static String capitalize(String self) {<add>if (self == null || self.length() == 0) return self;<add>return Character.toUpperCase(self.charAt(0)) + self.substring(1);<add>}<add><add>/**
tr	add	<del>sample1/MultiTouchSupport.java<mask>sample1/MultiTouchSupport.java<add>// Keep zoom center fixed or flexible<add>//centerPoint = new PointF((x1 + x2) / 2, (y1 + y2) / 2);
tr	add	<del>pool/HikariPool.java<add>pool/HikariPool.java<del>logPoolState("Before cleanup\t");<mask>logPoolState("Before cleanup\t");<add>logPoolState("After cleanup\t");<del>logPoolState("After cleanup\t");
tr	add	<del>wm/WindowManagerService.java<mask>wm/WindowManagerService.java<add>if ((win.mAttrs.softInputMode & SOFT_INPUT_MASK_ADJUST)<add>== SOFT_INPUT_ADJUST_RESIZE) {<add>win.mLayoutNeeded = true;<add>}
tr	add	<del>types/GPath.java<add>types/GPath.java<add>} else if (this.root instanceof Var) {<add>// re-caching root variable<mask>this.persistentRoot = this.root.getValue();
tr	add	<del>client/SPDYConnection.java<add>client/SPDYConnection.java<del>// Since SPDY is multiplexed, onFillable() must never block<del>// while calling application code. In fact, onFillable()<del>// always dispatches to a new thread when calling application<del>// code, so here we can safely pass false as last parameter,<del>// and avoid to dispatch to onFillable().<mask>// Since SPDY is multiplexed, onFillable() must never block while calling application code. In fact,<add>// the SPDY code always dispatches to a new thread when calling application code,<add>// so here we can safely pass false as last parameter, and avoid to dispatch to onFillable(). The IO<add>// operation (read, parse, etc.) will not block and will be fast in almost all cases. Big uploads to a server<add>// however might block the Selector thread for a long time and therefore block other connections to be read.<add>// This might be a good reason to set executeOnFillable to true.<add>//<add>// Due to a jvm bug we've had a Selector thread being stuck at<add>// sun.nio.ch.FileDispatcherImpl.preClose0(Native Method). That's why we now default executeOnFillable to<add>// true even if for most use cases it is faster to not dispatch the IO events.
tr	add	<del>grizzly/GrizzlyConnectionsPool.java<add>grizzly/GrizzlyConnectionsPool.java<mask>import org.glassfish.grizzly.CloseType;<del>listener = new Connection.CloseListener() {<add>listener = new CloseListener<del>public void onClosed(Connection connection, Connection.CloseType closeType) throws IOException {<del>if (closeType == Connection.CloseType.REMOTELY) {<add>public void onClosed(Connection connection, CloseType closeType) throws IOException {<add>if (closeType == CloseType.REMOTELY) {
tr	add	<del>widget/RecyclerView.java<mask>widget/RecyclerView.java<add>// Clear the nested offsets<add>mNestedOffsets[0] = mNestedOffsets[1] = 0;<add>
tr	add	<del>impl/CaretImpl.java<add>impl/CaretImpl.java<add>VisualPosition oldVisualPosition = myVisibleCaret;<del>if (!oldCaretPosition.toVisualPosition().equals(myLogicalCaret.toVisualPosition())) {<mask>if (myEditor.myUseNewRendering ? !oldVisualPosition.equals(myVisibleCaret) :<add>!oldCaretPosition.toVisualPosition().equals(myLogicalCaret.toVisualPosition())) {
tr	add	<del>database/SQLConnectionDelegate.java<add>database/SQLConnectionDelegate.java<del>import liquibase.log.LogFactory;<del><del>con.rollback();<add>rollback();<del>con.rollback();<mask>if (!con.getAutoCommit()) {<add>con.rollback();<add>}<del>con.rollback(savepoint);<add>if (!con.getAutoCommit()) {<add>con.rollback(savepoint);<add>}
tr	add	<del>net/ConnectivityManager.java<add>net/ConnectivityManager.java<add>/**<add>* Bluetooth data connection.<add>* @hide<add>*/<add>public static final int TYPE_BLUETOOTH   = 7;<add>/** {@hide} */<add>public static final int TYPE_DUMMY       = 8;<add>/** {@hide} */<mask>public static final int TYPE_ETHERNET    = 9;
tr	add	<del>replicatedmap/ReplicatedMapTest.java<add>replicatedmap/ReplicatedMapTest.java<mask>@Test
tr	add	<del>phonegap/GeoTuple.java<add>phonegap/GeoTuple.java<add><mask>
tr	del	<mask>operations/SynchronizeFolderOperation.java<add>operations/SynchronizeFolderOperation.java<add>// Needed in case that cancellation occurs before starting any download.<add>// If not, yellow arrow continues being shown.<add>sendBroadcastForNotifyingUIUpdate(result.isSuccess());<add>
tr	del	<del>metadata/DatabaseShardManager.java<add>metadata/DatabaseShardManager.java<mask>dao.insertPartitionKey(tableId, partition, partitionKey.getName(), partitionKey.getType().toString(), partitionKey.getValue());<add>dao.insertPartitionKey(tableId, partition, partitionKey.getName(), partitionKey.getType().getName(), partitionKey.getValue());
tr	add	<del>assignment/GrMethodCallInfo.java<add>assignment/GrMethodCallInfo.java<mask>import org.jetbrains.plugins.groovy.lang.psi.api.statements.arguments.GrArgumentList;<del>return getCall().getArgumentList();<add>GrArgumentList argList = getCall().getArgumentList();<add>if (argList.getTextLength() == 0) {<add>return getCall();<add>}<add>return argList;
tr	add	<del>python/PyOptimizeImportsTest.java<add>python/PyOptimizeImportsTest.java<add><add>@Override<add>protected void setUp() throws Exception {<add>super.setUp();<mask>// importsFromTypingUnusedInTypeComments depends on registered TokenSetContributors<add>PythonDialectsTokenSetProvider.reset();<add>}<add>
tr	add	<del>base/Intention.java<mask>base/Intention.java<del>protected static void addStatementBefore(String newStatementText, PsiReturnStatement anchor) {<del>final Project project = anchor.getProject();<del>final PsiElementFactory factory = JavaPsiFacade.getElementFactory(project);<del>final PsiStatement newStatement = factory.createStatementFromText(newStatementText, anchor);<del>final PsiElement addedStatement = anchor.getParent().addBefore(newStatement, anchor);<del>CodeStyleManager.getInstance(project).reformat(addedStatement);<del>}<del>
tr	del	<mask>plugins/ShaderNodeLoaderDelegate.java<add>plugins/ShaderNodeLoaderDelegate.java<del>import jogamp.common.os.elf.Shdr;
tr	del	<del>analysis/GenericsHighlightUtil.java<add>analysis/GenericsHighlightUtil.java<mask>if (lClass instanceof PsiTypeParameter || rClass instanceof PsiTypeParameter) return true;<add>if (lClass instanceof PsiTypeParameter && !lClass.equals(rClass)) return true;
tr	add	<del>newpipe/MediaFormat.java<add>newpipe/MediaFormat.java<del>* Created by scc on 08/11/15.<add>* Created by Adam Howard on 08/11/15.<add>*<add>* Copyright (c) Christian Schabesberger <add>*     and Adam Howard <mask>*<add>* VideoListAdapter.java is part of NewPipe.<add>*<add>* NewPipe is free software: you can redistribute it and/or modify<add>* it under the terms of the GNU General Public License as published by<add>* the Free Software Foundation, either version 3 of the License, or<add>* (at your option) any later version.<add>*<add>* NewPipe is distributed in the hope that it will be useful,<add>* but WITHOUT ANY WARRANTY; without even the implied warranty of<add>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<add>* GNU General Public License for more details.<add>*<add>* You should have received a copy of the GNU General Public License<add>* along with NewPipe.  If not, see 
tr	del	<del>animation/BezierPath3D.java<add>animation/BezierPath3D.java<mask>import rajawali.util.RajLog;
tr	del	<mask>util/WPImageGetter.java<add>util/WPImageGetter.java<del>private static class RemoteDrawable extends BitmapDrawable {<add>public static class RemoteDrawable extends BitmapDrawable {
tr	add	<del>compoundbutton/OnCheckedChangeAttributes.java<add>compoundbutton/OnCheckedChangeAttributes.java<mask><add>view.setOnCheckedChangeListener(onCheckedChangeListeners);
tr	add	<del>start/StartArgs.java<add>start/StartArgs.java<add>StartLog.debug("rawlibref = " + rawlibref);<add>StartLog.debug("expanded = " + libref);<add>StartLog.debug("regex = " + regex);<del>for (File libfile : baseHome.listFiles(relativePath,filter))<add>List<mask>StartLog.debug("found " + libs.size() + " libs");<add>for (File libfile : libs)
tr	add	<del>jstests/CustomParallelIT.java<add>jstests/CustomParallelIT.java<del>import static com.torodb.integration.TestCategory.CATASTROPHIC;<add>import static com.torodb.integration.TestCategory.NOT_IMPLEMENTED;<mask>import com.torodb.integration.TestCategory;<del>.addScripts(MONGO, POSTGRES, WORKING, asScriptSet("updaterace.js", 8))<add>.addScripts(MONGO, POSTGRES, NOT_IMPLEMENTED, asScriptSet("updaterace.js", 8))<del>.addScripts(MONGO, DERBY, CATASTROPHIC, asScriptSet("updaterace.js", 4))<add>.addScripts(MONGO, DERBY, NOT_IMPLEMENTED, asScriptSet("updaterace.js", 4))<del>.addScripts(MONGO_REPL_SET, POSTGRES, CATASTROPHIC, asScriptSet("updaterace.js", 8))<add>.addScripts(MONGO_REPL_SET, POSTGRES, NOT_IMPLEMENTED, asScriptSet("updaterace.js", 8))
tr	add	<del>routing/VoiceRouter.java<mask>routing/VoiceRouter.java<add>//See Issue 2377: Announce destination again - after some motorway tolls roads split shortly after the toll<add>if (type == AlarmInfoType.TOLL_BOOTH) {<add>suppressDest = false;<add>}
tr	del	<mask>pool/HikariPool.java<add>pool/HikariPool.java<del>private void logPoolState(String... prefix)<add>public void logPoolState(String... prefix)
tr	add	<del>wm/WindowState.java<add>wm/WindowState.java<del>mService.mDisplayFreezeTime);<add>// We are assuming the hosting process is dead or in a zombie state.<add>Slog.w(TAG, "Failed to report 'resized' to the client of " + this<mask>+ ", removing this window.");<add>mService.mPendingRemove.add(this);<add>mService.requestTraversalLocked();
tr	del	<del>nodes/RefractiveReflectiveBlocksNode.java<add>nodes/RefractiveReflectiveBlocksNode.java<del>READ_ONLY_GBUFFER.bind(); // TODO: remove and replace with a state change<mask>READ_ONLY_GBUFFER.setRenderBufferMask(true, true, true);<del>
tr	del	<mask>processors/EjbIIOPDeploymentUnitProcessor.java<add>processors/EjbIIOPDeploymentUnitProcessor.java<del>logger.debug("    " + op.getJavaName() + "\n                " + op.getIDLName());<add>logger.debug("    " + setop.getJavaName() + "\n                " + setop.getIDLName());<del>beanMethodMap.put(op.getIDLName(), new SkeletonStrategy(realSetmethod));<add>beanMethodMap.put(setop.getIDLName(), new SkeletonStrategy(realSetmethod));
tr	add	<del>app/ExitTransitionCoordinator.java<add>app/ExitTransitionCoordinator.java<del>for (int i = 0; i <del>overlay.add(mSharedElementSnapshots.get(i));<mask>if (mSharedElementSnapshots != null) {<add>for (int i = 0; i <add>overlay.add(mSharedElementSnapshots.get(i));<add>}
tr	add	<del>api/CordovaInterface.java<add>api/CordovaInterface.java<add>* Launch an activity for which you would not like a result when it finished.<add>*<add>* @param intent            The intent to start<add>*/<mask>abstract public void startActivity(Intent intent);<add><add>/**
tr	add	<del>core/TSDB.java<mask>core/TSDB.java<add>/** @return The data point column family name */<add>public static byte[] FAMILY() {<add>return FAMILY;<add>}<add>
tr	del	<mask>webrender/WebViewRenderer.java<add>webrender/WebViewRenderer.java<add>webSettings.setDomStorageEnabled(true);
tr	del	<del>transforms/ABaseTransformer.java<add>transforms/ABaseTransformer.java<del>preTransform(view, position);<add>onPreTransform(view, position);<mask>postTransform(view, position);<add>onPostTransform(view, position);<del>protected void preTransform(View view, float position) {<add>protected void onPreTransform(View view, float position) {<del>protected void postTransform(View view, float position) {<add>protected void onPostTransform(View view, float position) {
tr	add	<del>keymaster/KeymasterDefs.java<add>keymaster/KeymasterDefs.java<add>public static final int KM_ERROR_MISSING_NONCE = -51;<add>public static final int KM_ERROR_INVALID_NONCE = -52;<mask>sErrorCodeToString.put(KM_ERROR_MISSING_NONCE, "Required IV missing");<add>sErrorCodeToString.put(KM_ERROR_INVALID_NONCE, "Invalid IV");
tr	del	<mask>storage/BuildDataManager.java<add>storage/BuildDataManager.java<add>saveVersion();
tr	del	<del>rules/SkylarkModules.java<add>rules/SkylarkModules.java<del>import com.google.common.annotations.VisibleForTesting;<del>import com.google.devtools.build.lib.events.EventHandler;<del><del><del>/**<del>* Create an {@link Environment} in which to load a Skylark file.<del>* @param eventHandler an EventHandler for warnings, errors, etc.<del>* @param astFileContentHashCode a hash code identifying the file being evaluated<del>* @param mutability the Mutability for the current evaluation context<del>* @return a new Environment with the elements of the Skylark modules.<del>*/<del>public static Environment getNewEnvironment(<del>EventHandler eventHandler, String astFileContentHashCode, Mutability mutability) {<del>return Environment.builder(mutability)<del>.setSkylark()<del>.setGlobals(GLOBALS)<del>.setEventHandler(eventHandler)<del>.setFileContentHashCode(astFileContentHashCode)<del>.build();<del>}<del><del>@VisibleForTesting<mask>public static Environment getNewEnvironment(<del>EventHandler eventHandler, Mutability mutability) {<del>return getNewEnvironment(eventHandler, null, mutability);<del>}
tr	add	<del>ui/Window.java<add>ui/Window.java<mask>mContext.onResize(id, this, this, event);
tr	add	<del>internal/Marker.java<add>internal/Marker.java<del>import org.adw.library.widgets.discreteseekbar.internal.drawable.ThumbDrawable;<add>//as we're reading the parent DiscreteSeekBar attributes, it may wrongly set this view's visibility.<add>setVisibility(View.VISIBLE);<mask><del>mSeparation = separation; //<add>mSeparation = separation;
tr	add	<del>sql/RowReceiverToResultReceiver.java<mask>sql/RowReceiverToResultReceiver.java<del>private RowReceiver.Result nextRowResult = Result.CONTINUE;<del>return nextRowResult;<add>return Result.CONTINUE;<del>nextRowResult = Result.STOP;
tr	add	<del>bridge/DHNSDataBridge.java<add>bridge/DHNSDataBridge.java<add>if(graphModel==null) {<add>engine.worldUpdated(cacheMarker);<add>return;<mask>}
tr	add	<del>formatting/FormatProcessor.java<mask>formatting/FormatProcessor.java<del>myLastWhiteSpace = new WhiteSpace(getLastBlock().getEndOffset(), false);<del>myLastWhiteSpace.append(myWrapper.getEndOffset(), myModel, myDefaultIndentOption);<add>int lastBlockOffset = getLastBlock().getEndOffset();<add>myLastWhiteSpace = new WhiteSpace(lastBlockOffset, false);<add>myLastWhiteSpace.append(Math.max(lastBlockOffset, myWrapper.getEndOffset()), myModel, myDefaultIndentOption);
tr	del	<del>main/MySiteFragment.java<add>main/MySiteFragment.java<mask>ActivityLauncher.viewBlogStats(getActivity(), mBlog.getLocalTableBlogId());<add>// if the blog is empty, fail silently<add>if (mBlog != null) {<add>ActivityLauncher.viewBlogStats(getActivity(), mBlog.getLocalTableBlogId());<add>}
tr	add	<del>internal/FS20CommandHelper.java<mask>internal/FS20CommandHelper.java<add>import org.openhab.core.types.UnDefType;<del>return null;<add>return UnDefType.UNDEF;
tr	add	<del>config/ConfigMemorySize.java<mask>config/ConfigMemorySize.java<add>public String toString() {<add>return "ConfigMemorySize(" + bytes + ")";<add>}<add><add>@Override
tr	add	<del>scene/Mesh.java<add>scene/Mesh.java<mask>tri.setNormal(null);
tr	add	<del>renderers/RendererAdapterTest.java<add>renderers/RendererAdapterTest.java<add>@Test<add>public void shouldClearElementsFromAdapteeCollection(){<add>rendererAdapter.clear();<mask><add>verify(mockedCollection).clear();<add>}<add>
tr	add	<del>content/SyncManager.java<add>content/SyncManager.java<del>NetworkInfo info = getConnectivityManager().getActiveNetworkInfo();<del>mDataConnectionIsConnected = (info != null) && info.isConnected();<mask>NetworkInfo networkInfo = getConnectivityManager().getActiveNetworkInfo();<add>mDataConnectionIsConnected = (networkInfo != null) && networkInfo.isConnected();
tr	del	<del>expert/NeuralNetMnist.java<add>expert/NeuralNetMnist.java<mask>* Runs a neural network on the MNIST dataset.<add>* Runs a neural network (deprecated - use Deep Learning instead) on the MNIST dataset.
tr	add	<del>models/Node.java<mask>models/Node.java<del>/* for initial set up in test */<del>/*public Node(NodeSummaryResponse r) {<del>this(null, null, null, r);<del>}*/<del>
tr	add	<del>console/ConsolePane.java<add>console/ConsolePane.java<del>toolbar.addRightWidget(consoleInterruptButton_);<del>profilerInterruptButton_= new ToolbarButton(profilerIcon, commands_.stopProfiler());<add>profilerInterruptButton_ = new ToolbarButton(profilerIcon, commands_.stopProfiler());<add>profilerInterruptButton_.setVisible(false);<mask>toolbar.addRightWidget(consoleInterruptButton_);
tr	add	<del>network/NetworkManager.java<add>network/NetworkManager.java<add>/**<add>* Retrieves the image of the given url and stores the content as the file.<add>* Throws an ImageNotFound exception when the url could not be resolved.<add>*<add>* @param url URL of the image to be downloaded.<add>* @param f File where the image should be stored.<add>*/<add>/**<mask>* Returns the input stream for the given url<add>* Throws an ImageNotFound exception when the url could not be resolved.<add>*<add>*<add>* @param url URL of the image to be downloaded<add>* @return input stream of the image or null on error.<add>*/
tr	add	<del>internal/ParcelTransactionWorker.java<mask>internal/ParcelTransactionWorker.java<del>Parcel parcelAnnotation = value.getAnnotation(Parcel.class);
tr	del	<del>health/ClusterHealthResponse.java<add>health/ClusterHealthResponse.java<del>import org.elasticsearch.ElasticsearchIllegalArgumentException;<del>public ClusterHealthResponse(String clusterName, List<mask>this.clusterName = clusterName;<del>this.validationFailures = validationFailures;<add>/** needed for plugins BWC */<add>public ClusterHealthResponse(String clusterName, String[] concreteIndices, ClusterState clusterState) {<add>this(clusterName, concreteIndices, clusterState, -1);<del>if (numberOfPendingTasks <del>throw new ElasticsearchIllegalArgumentException("pending task should be non-negative. got [" + numberOfPendingTasks + "]");<del>}
tr	del	<mask>sourcemap/SourceMapSection.java<add>sourcemap/SourceMapSection.java<del>static SourceMapSection forMap(String value, int line, int column) {<add>public static SourceMapSection forMap(String value, int line, int column) {<del>static SourceMapSection forURL(String value, int line, int column) {<add>public static SourceMapSection forURL(String value, int line, int column) {
tr	add	<del>alert/ExtensionAlert.java<mask>alert/ExtensionAlert.java<del>if (!View.isInitialised() || Constant.isLowMemoryOptionSet()) {<add>if (Constant.isLowMemoryOptionSet()) {<del>if (EventQueue.isDispatchThread()) {<add>if (!View.isInitialised() || EventQueue.isDispatchThread()) {
tr	add	<del>text/StaticLayout.java<mask>text/StaticLayout.java<del>boolean isSpaceOrTab = c == CHAR_SPACE || c == CHAR_TAB;<add>boolean isSpaceOrTab = c == CHAR_SPACE || c == CHAR_TAB || c == CHAR_ZWSP;<add>private static final char CHAR_ZWSP = '\u200B';
tr	add	<del>json/LazyStatus.java<add>json/LazyStatus.java<del><add>/**<add>* Indicates approximately how many times this Tweet has been "favorited" by Twitter users.<mask>* @return the favorite count<add>*/<add>public long getFavoriteCount() {<add>return getTarget().getFavoriteCount();<add>}<add>
tr	del	<del>exceptions/Reporter.java<add>exceptions/Reporter.java<add>import static org.mockito.internal.reporting.Pluralizer.pluralize;<add>import static org.mockito.internal.util.StringJoiner.join;<add>import java.lang.reflect.Field;<add>import java.util.ArrayList;<add>import java.util.Collection;<add>import java.util.List;<del>import org.mockito.exceptions.verification.*;<add>import org.mockito.exceptions.verification.ArgumentsAreDifferent;<add>import org.mockito.exceptions.verification.NeverWantedButInvoked;<add>import org.mockito.exceptions.verification.NoInteractionsWanted;<add>import org.mockito.exceptions.verification.SmartNullPointerException;<add>import org.mockito.exceptions.verification.TooLittleActualInvocations;<add>import org.mockito.exceptions.verification.TooManyActualInvocations;<add>import org.mockito.exceptions.verification.VerificationInOrderFailure;<add>import org.mockito.exceptions.verification.WantedButNotInvoked;<del>import java.lang.reflect.Field;<del>import java.util.ArrayList;<mask>import java.util.Collection;<del>import java.util.List;<del><del>import static org.mockito.internal.reporting.Pluralizer.pluralize;<del>import static org.mockito.internal.util.StringJoiner.join;<del><add>" 3: you are stubbing the behaviour of another mock inside before 'thenReturn' instruction if completed",
tr	add	<del>layout/LayoutControllerImpl.java<add>layout/LayoutControllerImpl.java<del>if (model.getSelectedLayout() != null) {<mask>if (model != null && model.getSelectedLayout() != null) {
tr	add	<del>core/DefaultEventsStream.java<add>core/DefaultEventsStream.java<del>currentBlockingStatePerService.get(blockingState.getService()).getEffectiveDate().isBefore(blockingState.getEffectiveDate())) {<mask>!currentBlockingStatePerService.get(blockingState.getService()).getEffectiveDate().isAfter(blockingState.getEffectiveDate())) {
tr	del	<del>client/HttpClient.java<add>client/HttpClient.java<add>import java.nio.channels.SocketChannel;<del>* httpClient.GET("http://localhost:8080/").get().status();<add>* httpClient.GET("http://localhost:8080/").getStatus();<mask>* Response response = httpClient.newRequest("http://localhost:8080").send().get(5, TimeUnit.SECONDS);<add>* ContentResponse response = httpClient.newRequest("http://localhost:8080")<add>*         .timeout(5, TimeUnit.SECONDS)<add>*         .send();
tr	del	<mask>hint/GroovyExpressionTypeProvider.java<add>hint/GroovyExpressionTypeProvider.java<del>return StringUtil.escapeXml(type == null ? "<add>return StringUtil.escapeXml(type == null ? "
tr	del	<del>indexing/FileBasedIndexImpl.java<add>indexing/FileBasedIndexImpl.java<del>if (fileType instanceof InternalFileType) return true;<del>VirtualFile parent = file.isDirectory() ? file: file.getParent();<del>while (parent != null) {<del>if (Comparing.equal(parent.getNameSequence(), ProjectCoreUtil.DIRECTORY_BASED_PROJECT_DIR, SystemInfoRt.isFileSystemCaseSensitive)) return true;<del>parent = parent.getParent();<mask>}<del>return false;<add>return ProjectCoreUtil.isProjectOrWorkspaceFile(file, fileType);
tr	del	<del>hdmi/HdmiControlService.java<add>hdmi/HdmiControlService.java<del>// TODO: Remove this as soon as OEM's HAL implementation is corrected.<del>mCecController.setOption(OPTION_CEC_ENABLE, ENABLED);<del><mask>// TODO: load value for mHdmiControlEnabled from preference.
tr	del	<del>exoplayer/MediaCodecTrackRenderer.java<add>exoplayer/MediaCodecTrackRenderer.java<add>* @throws ExoPlaybackException If an error occurs on output format change.<mask>protected void onOutputFormatChanged(android.media.MediaFormat outputFormat) {<add>protected void onOutputFormatChanged(android.media.MediaFormat outputFormat)<add>throws ExoPlaybackException {
tr	add	<del>com/ResourcePoolTest.java<add>com/ResourcePoolTest.java<add>import static org.hamcrest.Matchers.greaterThanOrEqualTo;<mask>import static org.junit.Assert.assertThat;<del><del>assertEquals( poolMaxSize - afterPeekPoolSize + 1, stateMonitor.disposed.get() );<add>assertThat( stateMonitor.disposed.get(), greaterThanOrEqualTo( poolMaxSize - afterPeekPoolSize + 1 )  );
tr	add	<del>synthetic/GroovyScriptClass.java<mask>synthetic/GroovyScriptClass.java<del>
tr	add	<del>util/DefaultEdgeFilter.java<add>util/DefaultEdgeFilter.java<add>public boolean acceptsIn()<add>{<add>return in;<add>}<add><add>public boolean acceptsOut()<add>{<mask>return out;<add>}<add>
tr	del	<del>client/ReactiveClientHttpResponse.java<add>client/ReactiveClientHttpResponse.java<del>import java.io.IOException;<del>* @throws IOException in case of I/O errors<del>HttpStatus getStatusCode() throws IOException;<add>HttpStatus getStatusCode();<del>* @throws IOException in case of I/O errors<mask>int getRawStatusCode() throws IOException;<add>int getRawStatusCode();<del>* @throws IOException in case of I/O errors<del>String getStatusText() throws IOException;<add>String getStatusText();
tr	del	<mask>kits/WalletAppKit.java<add>kits/WalletAppKit.java<del>import java.net.InetAddress;<del>* Utility class that wraps the boilerplate needed to set up a new SPV bitcoinj app. Instantiate it with a directory<add>* <del>* go ahead and add the listeners you need to the underlying objects.<add>* go ahead and add the listeners you need to the underlying objects.<add>*<add>* <add>* if anything goes wrong during startup - you should probably handle it and use {@link Exception#getCause()} to figure<add>* out what went wrong more precisely. Same thing if you use the async start() method.<add>// Runs in a separate thread.
tr	add	<del>util/SingleConsumerNonblockingProducerDelayQueueTest.java<add>util/SingleConsumerNonblockingProducerDelayQueueTest.java<add>import co.paralleluniverse.common.util.Debug;<add>import co.paralleluniverse.vtime.ScaledClock;<add>import co.paralleluniverse.vtime.SystemClock;<add>import co.paralleluniverse.vtime.VirtualClock;<add>import org.junit.BeforeClass;<add>@BeforeClass<add>public static void setupClass() {<add>VirtualClock.setForCurrentThreadAndChildren(Debug.isCI() ? new ScaledClock(0.3) : SystemClock.instance());<add>System.out.println("Using clock: " + VirtualClock.get());<add>}<mask>
tr	add	<del>editor/ResourceBundleEditor.java<mask>editor/ResourceBundleEditor.java<add>import com.intellij.openapi.command.undo.UndoConstants;<add>editor.getDocument().putUserData(UndoConstants.DONT_RECORD_UNDO, Boolean.TRUE);
tr	add	<del>www/BasicAuthenticationEntryPoint.java<add>www/BasicAuthenticationEntryPoint.java<del>throws IOException, ServletException {<del>HttpServletResponse httpResponse = (HttpServletResponse) response;<del>httpResponse.addHeader("WWW-Authenticate", "Basic realm=\"" + realmName + "\"");<del>httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED, authException.getMessage());<add>throws IOException, ServletException {<mask>response.addHeader("WWW-Authenticate", "Basic realm=\"" + realmName + "\"");<add>response.sendError(HttpServletResponse.SC_UNAUTHORIZED, authException.getMessage());
tr	del	<mask>search/BaseIndexTest.java<add>search/BaseIndexTest.java<del>properties.setProperty("sonar.path.data", temp.getRoot().getAbsolutePath());<del>properties.setProperty("sonar.path.logs", temp.getRoot().getAbsolutePath());<del>properties.setProperty("sonar.path.temp", temp.getRoot().getAbsolutePath());<add>properties.setProperty(SearchServer.SONAR_PATH_HOME, temp.getRoot().getAbsolutePath());
tr	del	<del>common/StreetUtils.java<add>common/StreetUtils.java<del>TurnVertex tv_in = getTurnVertexForEdge(graph, turnVertices, pse_in);<del>TurnVertex tv_out = getTurnVertexForEdge(graph, turnVertices, pse_out);<mask>}<add>}<add>TurnVertex tv_in = getTurnVertexForEdge(graph, turnVertices, pse_in);<add>TurnVertex tv_out = getTurnVertexForEdge(graph, turnVertices, pse_out);
tr	del	<del>internal/DefaultRatpackServer.java<add>internal/DefaultRatpackServer.java<mask>import com.google.common.collect.Lists;
tr	add	<del>net/RouteInfo.java<add>net/RouteInfo.java<add>/**<add>* The IPv4 default route.<add>*/<add>public static final RouteInfo IPV4_DEFAULT = new RouteInfo(<add>new LinkAddress(Inet4Address.ANY, 0));<add><add>/**<mask>* The IPv6 default route.<add>*/<add>public static final RouteInfo IPV6_DEFAULT = new RouteInfo(<add>new LinkAddress(Inet6Address.ANY, 0));<add>
tr	del	<del>semantics/StdLibTestSupport.java<add>semantics/StdLibTestSupport.java<del>/**<del>*/<mask>public class StdLibTestSupport extends SingleFileTranslationTest {<add>abstract class StdLibTestSupport extends SingleFileTranslationTest {<del>public StdLibTestSupport() {<add>protected StdLibTestSupport() {
tr	add	<del>storage/StorageManager.java<add>storage/StorageManager.java<del>// Disabled now that FUSE has been replaced by sdcardfs<add>final IMountService mountService = IMountService.Stub.asInterface(<add>ServiceManager.getService("mount"));<add>try {<add>final VolumeInfo[] vols = mountService.getVolumes(0);<mask>for (VolumeInfo vol : vols) {<add>if ((vol.getType() == VolumeInfo.TYPE_EMULATED<add>|| vol.getType() == VolumeInfo.TYPE_PUBLIC) && vol.isMountedReadable()) {<add>final File internalPath = FileUtils.rewriteAfterRename(vol.getPath(),<add>vol.getInternalPath(), path);<add>if (internalPath != null && internalPath.exists()) {<add>return internalPath;<add>}<add>}<add>}<add>} catch (RemoteException e) {<add>throw e.rethrowFromSystemServer();<add>}
tr	del	<del>type/TimeZoneKey.java<add>type/TimeZoneKey.java<mask>if (zoneId.equals("+00:00") | zoneId.equals("-00:00")) {<add>if (zoneId.equals("+00:00") || zoneId.equals("-00:00")) {
tr	add	<del>actions/MarkResolvedAction.java<add>actions/MarkResolvedAction.java<mask>import org.tmatesoft.svn.core.SVNDepth;<del>wcClient.doResolve(ioFile, false);<add>wcClient.doResolve(ioFile, SVNDepth.EMPTY, SVNConflictChoice.MERGED);
tr	add	<del>group/DefaultGroupProvider.java<add>group/DefaultGroupProvider.java<mask>private static final String DELETE_PROPERTIES =<add>"DELETE FROM jiveGroupProp WHERE groupName=?";<add>// Remove all properties of the group.<add>pstmt = con.prepareStatement(DELETE_PROPERTIES);<add>pstmt.setString(1, groupName);<add>pstmt.executeUpdate();<add>pstmt.close();
tr	add	<del>http/ReactiveHttpOutputMessage.java<add>http/ReactiveHttpOutputMessage.java<del>* Adds the given publisher of {@link ByteBuffer}s as a body. A HTTP/1.1 message has<del>* one body, but HTTP/1.2 supports multiple bodies.<del>* @param body the body to add<add>* Sets the body of this message to the given publisher of {@link ByteBuffer}s. The<add>* publisher will be used to write to the underlying HTTP layer with asynchronously,<add>* given pull demand by this layer.<mask>*<add>* @param body the body to use
tr	del	<del>util/BuckConstant.java<add>util/BuckConstant.java<del>* Ultimately, this will be able to be set by {@code -Dbuck.output_dir} and the fields<del>* {@link #ANDROID_GEN_DIR}, {@link #GEN_DIR}, and<mask>* {@code BuildRule#BIN_DIRECTORY_NAME} will be hardcoded subdirectories of this directory.<add>* Ultimately, the fields {@link #ANDROID_GEN_DIR}, {@link #GEN_DIR}, {@link #BIN_DIR},<add>* {@link #ANNOTATION_DIR} will be hardcoded subdirectories of this directory.<del>public static final String BUCK_OUTPUT_DIRECTORY = "buck-out";<add>public static final String BUCK_OUTPUT_DIRECTORY =<add>System.getProperty("buck.buck_output_dir", "buck-out");
tr	add	<del>tokenized/SQLTokenizedFormatter.java<add>tokenized/SQLTokenizedFormatter.java<add>if (token.getType() == TokenType.SYMBOL && ":".equals(token.getString()) ||<mask>prev.getType() == TokenType.SYMBOL && ":".equals(prev.getString()))<add>{<add>// Do not insert spaces around colons<add>continue;<add>}
tr	add	<del>reader/ReaderPostRenderer.java<mask>reader/ReaderPostRenderer.java<add>// counteract pre-defined height/width styles<add>.append("  p, div, dl, table { width: auto !important; height: auto !important; }")<add>
tr	del	<del>corefoundation/CFBoolean.java<add>corefoundation/CFBoolean.java<del>public static final CFBoolean TRUE = True();<del>public static final CFBoolean FALSE = False();<mask><del>return b ? TRUE : FALSE;<add>return b ? True() : False();<del>private static native CFBoolean True();<add>public static native CFBoolean True();<del>private static native CFBoolean False();<add>public static native CFBoolean False();
tr	add	<del>queue/MessageQueueThreadImpl.java<add>queue/MessageQueueThreadImpl.java<add>import java.util.concurrent.ExecutionException;<add>import java.util.concurrent.TimeoutException;<del>} catch (Throwable t) {<del>throw new RuntimeException(t);<mask>} catch (InterruptedException | ExecutionException | TimeoutException e) {<add>throw new RuntimeException(e);
tr	add	<del>acra/ErrorReporter.java<mask>acra/ErrorReporter.java<del>commentedCrashReport.put(USER_EMAIL, userEmail);<add>commentedCrashReport.put(USER_EMAIL, userEmail == null ? "" : userEmail);
tr	del	<mask>pipes/PipeItemsWood.java<add>pipes/PipeItemsWood.java<add>tile.onInventoryChanged();<add>
tr	add	<del>realm/Realm.java<mask>realm/Realm.java<del>Realm realm = realms.get(absolutePath.hashCode());<add>Realm realm = realms.get(absolutePath);
tr	del	<del>servlet/SparkFilter.java<add>servlet/SparkFilter.java<del>IOException,<mask>ServletException {<add>IOException,<add>ServletException {<add><add>@Override<add>public String getRequestURI() {<add>return relativePath;<add>}
tr	add	<del>AIMSICD/AIMSICD.java<add>AIMSICD/AIMSICD.java<del>(305, getString(R.string.debugging), "ic_action_computer", false, this));<mask>(305, getString(R.string.send_logs), "ic_action_computer", false, this));
tr	add	<del>dxf/RawDXF.java<add>dxf/RawDXF.java<add><add>public boolean is2D() {<mask>return false;<add>}<add><add><add>public boolean is3D() {<add>return true;<add>}<add>
tr	add	<del>toolchain/ArgWriter.java<add>toolchain/ArgWriter.java<del>import org.gradle.util.GFileUtils;<del>GFileUtils.mkdirs(argsFile.getParentFile());<mask>argsFile.getParentFile().mkdirs();
tr	del	<del>compiler/GrapeEngineCustomizer.java<add>compiler/GrapeEngineCustomizer.java<add>import org.xml.sax.SAXException;<mask>PomReader reader = new PomReader(getURL(), this);<del>final String packaging = reader.getPackaging();<add>final String packaging = getPackaging();<add><add>private String getPackaging() throws IOException, SAXException {<add>PomReader reader = new PomReader(getURL(), this);<add>String packaging = reader.getPackaging();<add>if ("bundle".equals(packaging)) {<add>packaging = "jar";<add>}<add>return packaging;<add>}
tr	add	<del>jabber/OperationSetFileTransferJabberImpl.java<add>jabber/OperationSetFileTransferJabberImpl.java<add><add>// use only ibb for file transfers<mask>FileTransferNegotiator.IBB_ONLY = true;
tr	add	<del>camera2/CameraCharacteristics.java<add>camera2/CameraCharacteristics.java<del>public static final Key<del>new Key<mask>public static final Key<add>new Key
tr	add	<del>commands/RunCommand.java<add>commands/RunCommand.java<mask>if (conf == null) {<add>conf = new JsonObject();<add>}
tr	add	<del>cli/CliClient.java<mask>cli/CliClient.java<del>cf_def.memtable_operations_in_millions, cf_def.memtable_throughput_in_mb, cf_def.memtable_flush_after_mins);<add>cf_def.memtable_operations_in_millions, cf_def.memtable_flush_after_mins, cf_def.memtable_throughput_in_mb);
tr	add	<del>water/H2O.java<add>water/H2O.java<add>Log.info ("H2O cloud name: '" + NAME + "'");<mask>
tr	del	<mask>ui/SingleInspectionProfilePanel.java<add>ui/SingleInspectionProfilePanel.java<add>updateOptionsAndDescriptionPanel(new TreePath(toolNode.getPath()));
tr	del	<mask>client/Observables.java<add>client/Observables.java<del>* For example, converting {@link MongoCollection#count(SingleResultCallback)} into an {@link Observable<add>* For example, converting {@link MongoCollection#count(SingleResultCallback)} into an {@link Observable}:
tr	add	<del>api/ExternalEventResponse.java<mask>api/ExternalEventResponse.java<del>public abstract class ExternalEventResponse extends Message {<add>public abstract class ExternalEventResponse extends EventResponse {
tr	add	<del>utils/PathFinding.java<add>utils/PathFinding.java<add>import buildcraft.api.core.BuildCraftAPI;<add>if (!BuildCraftAPI.isSoftBlock(world, x, y, z)) {<add>continue;<add>}<mask>
tr	add	<del>internal/DefaultMediaType.java<add>internal/DefaultMediaType.java<add>private final String string;<add><add>string = generateString();<add>return string;<mask>}<add><add>private String generateString() {
tr	del	<del>treeView/AbstractTreeStructureBase.java<add>treeView/AbstractTreeStructureBase.java<mask>* Copyright 2000-2009 JetBrains s.r.o.<add>* Copyright 2000-2014 JetBrains s.r.o.<add>import com.intellij.openapi.progress.ProcessCanceledException;<add>catch (ProcessCanceledException e) {<add>throw e;<add>}
tr	del	<del>authentication/AcceptUsersAuthenticationHandler.java<add>authentication/AcceptUsersAuthenticationHandler.java<del><del>if (1==1) {<del>throw new AccountPasswordMustChangeException("change the password");<del>}<mask>if (this.users == null || this.users.isEmpty()) {<del>throw new FailedLoginException("No user can be accepted because none is defined");<del>}
tr	add	<del>renderer/DescriptorRendererImpl.java<mask>renderer/DescriptorRendererImpl.java<del>if (!classObject) {<add><add>if (!classObject || verbose) {<del>renderTypeParameters(typeParameters, builder, false);<del>if (classWithPrimaryConstructor) {<del>ConstructorDescriptor primaryConstructor = klass.getUnsubstitutedPrimaryConstructor();<del>if (primaryConstructor != null) {<del>renderValueParameters(primaryConstructor, builder);<del>}<add>}<add>renderTypeParameters(typeParameters, builder, false);<add><add>if (!classObject && classWithPrimaryConstructor) {<add>ConstructorDescriptor primaryConstructor = klass.getUnsubstitutedPrimaryConstructor();<add>if (primaryConstructor != null) {<add>renderValueParameters(primaryConstructor, builder);
tr	add	<del>grpc/ForwardingClientCall.java<add>grpc/ForwardingClientCall.java<add>@Override<add>public Attributes getAttributes() {<add>return delegate().getAttributes();<add>}<mask>
tr	add	<del>lang/System.java<add>lang/System.java<mask>public static void gc() {<add>Runtime.getRuntime().gc();<add>}<add>
tr	add	<del>jscomp/AbstractMessageFormatter.java<add>jscomp/AbstractMessageFormatter.java<del>RESET("\033[39m");<mask>RESET("\033[0;39m");
tr	add	<del>cpr/AtmosphereFramework.java<mask>cpr/AtmosphereFramework.java<del>logger.trace("Suspended request {} and response {}", request, response);<add>logger.trace("Resume request {} and response {}", request, response);<del>logger.trace("Suspended request {} and response {}", request, response);<add>logger.trace("Timeout request {} and response {}", request, response);<del>logger.trace("Suspended request {} and response {}", request, response);<add>logger.trace("Closing request {} and response {}", request, response);<del>logger.trace("Suspended request {} and response {}", request, response);<add>logger.trace("Destroyed request {} and response {}", request, response);
tr	del	<mask>builder/Condition.java<add>builder/Condition.java<del>if (value != null) {<add>if (value != null && !isRaw) {
tr	del	<mask>contactlist/TreeContactList.java<add>contactlist/TreeContactList.java<del>currentFilter.stopFilter();<add>if (currentFilter != null)<add>currentFilter.stopFilter();<del>if (currentFilter.isMatching(uiContact))<add>if (currentFilter != null && currentFilter.isMatching(uiContact))<del>if (!currentFilter.isMatching(uiContact))<add>if (currentFilter != null && !currentFilter.isMatching(uiContact))
tr	add	<del>view/ViewRootImpl.java<add>view/ViewRootImpl.java<del>// End any pending transitions on this non-visible window<del>if (mPendingTransitions != null && mPendingTransitions.size() > 0) {<mask>if (viewVisibility == View.VISIBLE) {<add>// Try again<add>scheduleTraversals();<add>} else if (mPendingTransitions != null && mPendingTransitions.size() > 0) {<del><del>if (viewVisibility == View.VISIBLE) {<del>// Try again<del>scheduleTraversals();<del>}
tr	add	<del>select/SelectorTest.java<add>select/SelectorTest.java<del>String h = "<add>String h = "<del>Elements div2 = doc.select("div#1.foo[title=bar]"); // very specific!<mask>Elements div2 = doc.select("div#1.foo.bar[title=bar][name=qux]"); // very specific!
tr	del	<del>acls/AclPermissionEvaluatorTests.java<add>acls/AclPermissionEvaluatorTests.java<mask>assertTrue(pe.hasPermission(user, new Object(), "read"));<add>assertTrue(pe.hasPermission(user, new Object(), "READ"));
tr	del	<del>worldedit/EditSession.java<add>worldedit/EditSession.java<del>int y = pt.getBlockY();<del>int type = block.getType();<add>final int y = pt.getBlockY();<add>final int type = block.getType();<mask>int existing = world.getBlockType(pt);<add>final int existing = world.getBlockType(pt);<del>boolean result;<add>final boolean result;
tr	del	<mask>media/RemoteControlClient.java<add>media/RemoteControlClient.java<del>if ((mRcDisplay != null) && (mRcDisplay.equals(rcd))) {<add>if ((mRcDisplay != null) && (mRcDisplay.asBinder().equals(rcd.asBinder()))) {
tr	del	<del>ui/BaseTestsOutputConsoleView.java<add>ui/BaseTestsOutputConsoleView.java<mask>protected ConsoleView getConsole() {<add>public ConsoleView getConsole() {
tr	add	<del>processor/FailProcessorException.java<add>processor/FailProcessorException.java<add>*<add>* This exception is caught in the {@link org.elasticsearch.ingest.core.CompoundProcessor} and<mask>* then changes the state of {@link org.elasticsearch.ingest.core.IngestDocument}. This<add>* exception should get serialized.
tr	add	<del>webkit/CacheManager.java<add>webkit/CacheManager.java<add>// lastModified and etag may be set back to http header. So they can't<add>// be empty string.<del>if (lastModified != null) ret.lastModified = lastModified;<add>if (lastModified != null && lastModified.length() > 0) {<mask>ret.lastModified = lastModified;<add>}<del>if (etag != null) ret.etag = etag;<add>if (etag != null && etag.length() > 0) ret.etag = etag;
tr	del	<del>spring/TimedAnnotationBeanPostProcessor.java<add>spring/TimedAnnotationBeanPostProcessor.java<del>import org.springframework.core.Ordered;<del>public class TimedAnnotationBeanPostProcessor extends AbstractProxyingBeanPostProcessor implements<del>Ordered {<add>public class TimedAnnotationBeanPostProcessor extends AbstractProxyingBeanPostProcessor {<del>@Override<del>public int getOrder() {<del>return HIGHEST_PRECEDENCE;<mask>}<del>
tr	add	<del>fs/DefaultFsDirectoryService.java<add>fs/DefaultFsDirectoryService.java<del>return new FileSwitchDirectory(PRIMARY_EXTENSIONS, new MMapDirectory(location, lockFactory), new NIOFSDirectory(location, lockFactory), true);<add>final MMapDirectory mmapDir = new MMapDirectory(location, lockFactory);<add>return new FileSwitchDirectory(PRIMARY_EXTENSIONS, mmapDir, new NIOFSDirectory(location, lockFactory), true) {<add>@Override<mask>public String[] listAll() throws IOException {<add>// Avoid doing listAll twice:<add>return mmapDir.listAll();<add>}<add>};
tr	add	<del>airmapview/WebViewMapFragment.java<mask>airmapview/WebViewMapFragment.java<del>webView.buildDrawingCache();
tr	del	<mask>solo/ViewLocationComparator.java<add>solo/ViewLocationComparator.java<del>public class ViewLocationComparator implements Comparator<add>class ViewLocationComparator implements Comparator
tr	del	<del>statusbar/ExpandableNotificationRow.java<add>statusbar/ExpandableNotificationRow.java<mask>if (mSettingsIconRow != null) {<del>mSettingsIconRow.updateVerticalLocation();<del>}
tr	add	<del>update/RestoreUpdateTree.java<add>update/RestoreUpdateTree.java<add>import com.intellij.openapi.application.ApplicationManager;<del>Element child = element.getChild(UPDATE_INFO);<del>if (child != null) {<del>UpdateInfo updateInfo = new UpdateInfo(myProject);<del>updateInfo.readExternal(child);<del>myUpdateInfo = updateInfo;<add>if (!ApplicationManager.getApplication().isUnitTestMode()) {<add>Element child = element.getChild(UPDATE_INFO);<add>if (child != null) {<mask>UpdateInfo updateInfo = new UpdateInfo(myProject);<add>updateInfo.readExternal(child);<add>myUpdateInfo = updateInfo;<add>}
tr	add	<del>spring/SpringLiquibase.java<add>spring/SpringLiquibase.java<del>liquibase.update(getContexts());<add>performUpdate(liquibase);<mask>protected void performUpdate(Liquibase liquibase) throws LiquibaseException {<add>liquibase.update(getContexts());<add>}<add>
tr	add	<del>console/FoldLinesLikeThis.java<mask>console/FoldLinesLikeThis.java<del>import com.intellij.openapi.actionSystem.PlatformDataKeys;
tr	add	<del>webkit/WebView.java<add>webkit/WebView.java<del>if (mWebViewCore.getSettings().getNeedInitialFocus()) {<mask>if (mWebViewCore.getSettings().getNeedInitialFocus() && !isInTouchMode()) {
tr	add	<del>framework/AssertTest.java<add>framework/AssertTest.java<del>public void testComparisonErrorWithNullArgument() {<add>public void testComparisonErrorWithActualNull() {<del>public void testComparisonErrorWithNullArgument2() {<mask>public void testComparisonErrorWithExpectedNull() {
tr	del	<mask>rescore/QueryRescorerTests.java<add>rescore/QueryRescorerTests.java<add>@Ignore
tr	add	<del>sort/GeoDistanceSortBuilder.java<mask>sort/GeoDistanceSortBuilder.java<del>@Deprecated
tr	add	<del>jedis/Transaction.java<add>jedis/Transaction.java<add>public String sort(final String key, final SortingParams sortingParameters,<add>final String dstkey) {<add>client.sort(key, sortingParameters, dstkey);<add>return client.getStatusCodeReply();<add>}<mask>
tr	add	<del>databind/ObjectReader.java<add>databind/ObjectReader.java<add>/**<add>* @since 2.2<add>*/<add>public DeserializationConfig getConfig() {<add>return _config;<mask>}<add><add>/**<add>* @since 2.1<add>*/
tr	add	<del>ws/SampleWsApplicationTests.java<add>ws/SampleWsApplicationTests.java<del>@IntegrationTest<mask>@IntegrationTest("server.port=0")
tr	add	<del>security/SSLInformationAssociationHandler.java<add>security/SSLInformationAssociationHandler.java<del>public static int getKeyLenght(String cipherSuite) {<add>public static int getKeyLength(String cipherSuite) {<del>request.setAttribute("javax.servlet.request.key_size", getKeyLenght(ssl.getCipherSuite()));<mask>request.setAttribute("javax.servlet.request.key_size", getKeyLength(ssl.getCipherSuite()));
tr	add	<del>menus/QuickMenu.java<mask>menus/QuickMenu.java<del>this.addButton.setToolTipText(<add>this.soundButton.setToolTipText(
tr	del	<del>actions/ReaderTagActions.java<add>actions/ReaderTagActions.java<mask>// for safety, don't allow deleting a default tag<del>if (tag == null || tag.tagType == ReaderTagType.DEFAULT) {<add>if (tag == null) {<del>if (tag == null || tag.tagType == ReaderTagType.DEFAULT) {<add>if (tag == null) {
tr	add	<del>checkstyle/AllTests.java<add>checkstyle/AllTests.java<add>import com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest;<mask>suite.addTest(new TestSuite(FinalParametersCheckTest.class));
tr	add	<del>utils/Json.java<mask>utils/Json.java<del><del>public static void main (String[] args) throws Exception {<del><del>Json json = new Json();<del><del>Graph graph = new Graph();<del>graph.data = new Array();<del><del>String jsonString = json.toJson(graph);<del><del>System.out.println(jsonString);<del><del>Graph graph2 = json.fromJson(Graph.class, jsonString);<del>}<del><del>public static class Graph<del>E data;<del>}<del>
tr	del	<mask>StickyListHeaders/StickyListHeadersListView.java<add>StickyListHeaders/StickyListHeadersListView.java<add>headerHasChanged = true;<del>int widthMeasureSpec = MeasureSpec.makeMeasureSpec(getWidth(), MeasureSpec.AT_MOST);<add>int widthMeasureSpec = MeasureSpec.makeMeasureSpec(getWidth(), MeasureSpec.EXACTLY);
tr	add	<del>shell/BugreportProgressService.java<add>shell/BugreportProgressService.java<del>MetricsLogger.action(this, MetricsEvent.ACTION_BUGREPORT_NOTIFICATION_ACTION_SCREENSHOT);<mask>if (delayed) {<add>// Only logs screenshots requested from the notification action.<add>MetricsLogger.action(this,<add>MetricsEvent.ACTION_BUGREPORT_NOTIFICATION_ACTION_SCREENSHOT);<add>}
tr	del	<del>apktool/Main.java<add>apktool/Main.java<mask>"For additional info, see: http://code.google.com/p/android-apktool/ \n"<add>"For additional info, see: http://ibotpeaches.github.io/Apktool/ \n"<add>"For smali/baksmali info, see: http://code.google.com/p/smali/");
tr	add	<del>buffer/CompositeByteBuf.java<add>buffer/CompositeByteBuf.java<add>public int numComponents() {<add>return components.length;<mask>}<add>
tr	add	<del>nio/NioWorker.java<add>nio/NioWorker.java<add>channel.inWriteNowLoop = false;<mask>channel.inWriteNowLoop = false;
tr	add	<del>annotation/AnnotationDescription.java<mask>annotation/AnnotationDescription.java<del>ElementType.PACKAGE, ElementType.PARAMETER, ElementType.TYPE, ElementType.TYPE_PARAMETER};<add>ElementType.PACKAGE, ElementType.PARAMETER, ElementType.TYPE};
tr	add	<del>impl/DefaultAsyncConnectionPool.java<add>impl/DefaultAsyncConnectionPool.java<del>DefaultAsyncConnectionPool.this.wrappedPool.done(wrapped);<mask>DefaultAsyncConnectionPool.this.wrappedPool.done(wrapped, wrapped.isClosed());
tr	add	<del>billing/BillingActivity.java<add>billing/BillingActivity.java<mask>if (!Preferences.getBoolean(BillingConstants.PREF_TRANSACTIONS_INITIALIZED, false))<add>restorePurchases.setVisibility(View.GONE);<add>
tr	del	<mask>solo/Clicker.java<add>solo/Clicker.java<del>if(line == 0)<add>if(line <add><add>textViews = RobotiumUtils.removeInvisibleViews(textViews);
tr	del	<del>examples/RolesTest.java<add>examples/RolesTest.java<del>* In Cypher, this requires to match users at two points due to the start- and end point of the<del>* variable length path being potentially matched on:<add>* In Cypher, this looks like:<add>* and results in the following output, listing even duplicate pathes to users,<add>* see e.g. user +Engin+.<add>*<mask>"match refNode<del>"topGroup<del>"subGroup<add>"match p=refNode<add>"order by LENGTH(p)";
tr	add	<del>surface/GetPatternsFromDataMultiClass.java<add>surface/GetPatternsFromDataMultiClass.java<del>if (!l.containsKey(PatternsAnnotations.MatchedPhrases.class))<mask>//The second clause is for old sents ser files compatibility reason<add>if (!l.containsKey(PatternsAnnotations.MatchedPhrases.class) || !(l.get(PatternsAnnotations.MatchedPhrases.class).getClass().isAssignableFrom(PatternsAnnotations.MatchedPhrases.class)))<add>
tr	del	<del>support/ReflectivePropertyAccessor.java<add>support/ReflectivePropertyAccessor.java<mask>@Override
tr	add	<del>analysis/ClassPathResolver.java<mask>analysis/ClassPathResolver.java<del>// TODO: print a warning in the baksmali frontend before we get here
tr	del	<mask>routing/RoutingService.java<add>routing/RoutingService.java<add>scheduledRoutingTableFuture = null;
tr	add	<del>optimizations/IndexJoinOptimizer.java<add>optimizations/IndexJoinOptimizer.java<mask>import com.facebook.presto.spi.type.Type;<del>public PlanNode optimize(PlanNode plan, Session session, Map<add>public PlanNode optimize(PlanNode plan, Session session, Map
tr	add	<del>handlers/GenericTypeOperationHandler.java<add>handlers/GenericTypeOperationHandler.java<del>throw new CommandFormatException("Unrecognized argument " + argName + " for command '" + operation + "'.");<mask>throw new CommandFormatException("Unrecognized argument " + argName + " for command '" + opName + "'.");
tr	add	<del>classloader/ClassLoaderSafeConnectorMetadata.java<mask>classloader/ClassLoaderSafeConnectorMetadata.java<add>import com.facebook.presto.spi.security.Privilege;<add><add>@Override<add>public void grantTablePrivileges(ConnectorSession session, SchemaTableName tableName, Set<add>{<add>try (ThreadContextClassLoader ignored = new ThreadContextClassLoader(classLoader)) {<add>delegate.grantTablePrivileges(session, tableName, privileges, grantee, grantOption);<add>}<add>}
tr	del	<del>buf/B2CConverter.java<add>buf/B2CConverter.java<del>import java.nio.CharBuffer;<del>public final int read(CharBuffer cb) throws IOException {<del>return super.read(cb);<del>}<del><del>public final int read(char[] cbuf) throws IOException {<del>return super.read(cbuf);<del>}<mask>
tr	add	<del>decoder/ARSCDecoder.java<mask>decoder/ARSCDecoder.java<add><add>// some htc apks have 40 byte configs, with int(s) as density<add>// we are just gonna ignore the rest of the qualifer for now.<add>if (this.mPkg.getName().equalsIgnoreCase("com.htc") && size == 40) {<add>mIn.skipBytes(2);<add>}
tr	del	<mask>widget/LinearLayoutManager.java<add>widget/LinearLayoutManager.java<del>boolean before = state.getTargetScrollPosition() <del>if (before == mShouldReverseLayout) {<add>// default extra space to the tail of the list.<add>boolean before = state.hasTargetScrollPosition() &&<add>state.getTargetScrollPosition() <add>if (before == mAnchorInfo.mLayoutFromEnd) {
tr	add	<del>ui/VcsBackgroundTask.java<add>ui/VcsBackgroundTask.java<add>import com.intellij.openapi.application.ApplicationManager;<mask>if (ApplicationManager.getApplication().isUnitTestMode()) {<add>throw new RuntimeException(ex);<add>}
tr	del	<mask>child/ApplicationClassesInSystemClassLoaderWorkerFactory.java<add>child/ApplicationClassesInSystemClassLoaderWorkerFactory.java<del>boolean useOptionsFile = Jvm.current().getJavaVersion().isJava9Compatible();<add>// This check is not quite right. Should instead probe the version of the requested executable and use options file if it is Java 9 or later, regardless of<add>// the version of this JVM<add>boolean useOptionsFile = Jvm.current().getJavaVersion().isJava9Compatible() && execSpec.getExecutable().equals(Jvm.current().getJavaExecutable().getPath());
tr	del	<mask>asm/OptimizingStatementWriter.java<add>asm/OptimizingStatementWriter.java<del>opt.chainCanOptimize(true);<add>opt.chainShouldOptimize(true);<del>opt.chainCanOptimize(true);<add>opt.chainShouldOptimize(true);
tr	del	<del>dsl/DisruptorTest.java<add>dsl/DisruptorTest.java<del>private TestWorkHandler createTestWorkHandler()<del>{<del>final TestWorkHandler testWorkHandler = new TestWorkHandler();<mask>testWorkHandlers.add(testWorkHandler);<del>return testWorkHandler;<del>}<del><add>private TestWorkHandler createTestWorkHandler()<add>{<add>final TestWorkHandler testWorkHandler = new TestWorkHandler();<add>testWorkHandlers.add(testWorkHandler);<add>return testWorkHandler;<add>}<add>
tr	add	<del>worker/ClientMetrics.java<add>worker/ClientMetrics.java<mask>import javax.annotation.concurrent.ThreadSafe;<add><add>@ThreadSafe
tr	add	<del>water/H2O.java<add>water/H2O.java<add>public static int getCloudSize() {<add>if (! Paxos._commonKnowledge) return -1;<mask>return CLOUD.size();<add>}<add>
tr	add	<del>validation/JSR303Validation.java<add>validation/JSR303Validation.java<del>public static final String MESSAGE = "{0} cannot be validated alonng given JSR303 annotations";<mask>public static final String MESSAGE = "{0} cannot be validated with JSR303 annotations";
tr	add	<del>widget/TWBaseLayoutManager.java<mask>widget/TWBaseLayoutManager.java<del>if (pendingPosition != RecyclerView.NO_POSITION) {<add>if (pendingPosition != RecyclerView.NO_POSITION &&<add>pendingPosition >= 0 && pendingPosition 
tr	add	<del>driver/DriverConnection.java<add>driver/DriverConnection.java<del>this.lastSmPosition = initialPosition;<add>this.lastSmPosition = initialPosition - (currentGain + 1);<del>if (0 == lastSmTimestamp || activeTermId != lastSmTermId ||<del>(position - lastSmPosition) > currentGain || now > (lastSmTimestamp + statusMessageTimeout))<add>if (activeTermId != lastSmTermId ||<mask>(position - lastSmPosition) > currentGain ||<add>now > (lastSmTimestamp + statusMessageTimeout))
tr	del	<del>logging/DeprecationLogger.java<add>logging/DeprecationLogger.java<del>public Logger getLogger() {<mask>return logger;<del>}<del>
tr	add	<del>swt/SWTVisualizationGUI.java<add>swt/SWTVisualizationGUI.java<add>import eu.stratosphere.nephele.event.job.JobEvent;<add>import eu.stratosphere.nephele.event.job.VertexEvent;<del><mask>} else if (event instanceof JobEvent) {<add>// Ignore this type of event<add>} else if (event instanceof VertexEvent) {<add>// Ignore this type of event
tr	add	<del>jingle/SctpMapExtension.java<mask>jingle/SctpMapExtension.java<del>import org.jivesoftware.smack.packet.PacketExtension;<add>import org.jivesoftware.smack.packet.*;
tr	del	<mask>server/LexicalizedParserServerITest.java<add>server/LexicalizedParserServerITest.java<add>// TODO: Update tests for universal dependencies, for now, just use original stanford dependencies<add>lexparser.getTLPParams().setGenerateOriginalDependencies(true);
tr	add	<del>http/HttpConnection.java<mask>http/HttpConnection.java<del>message.setBody(mUrl.toString());<del>mXmppConnectionService.updateMessage(message);<add>mXmppConnectionService.updateConversationUi();<del>message.setType(Message.TYPE_IMAGE);<add>imageWidth + ',' + imageHeight);<add>message.setType(Message.TYPE_IMAGE);
tr	add	<del>java/JavaMode.java<add>java/JavaMode.java<del>HashSet<del>al.add(val);<del>suggestionsMap.put(key, al);<add>HashSet<add>set.add(val);<add>suggestionsMap.put(key, set);<add>br.close();<mask>suggestionsListFile.getAbsolutePath());
tr	del	<del>mongodb/ServerAddress.java<add>mongodb/ServerAddress.java<mask>private String join(final String delimiter, final String[] array, final int start, final int end) {<del>StringBuilder builder = new StringBuilder();<del>for (int i = start; i <del>builder.append(array[i]);<del>if (i <del>builder.append(delimiter);<del>}<del>}<del>return builder.toString();<del>}
tr	del	<del>structuralsearch/StructuralReplaceTest.java<add>structuralsearch/StructuralReplaceTest.java<mask>"    <add>"
tr	del	<del>artifacts/ArtifactBuilderTestCase.java<add>artifacts/ArtifactBuilderTestCase.java<mask>FileUtil.copyContent(tempFile, new File(file.getParentFile(), newName));<add>File newFile = new File(file.getParentFile(), newName);<add>FileUtil.copyContent(tempFile, newFile);<add>change(newFile.getPath());
tr	add	<del>filters/RemoteIpFilter.java<add>filters/RemoteIpFilter.java<del>if (xRequest.getScheme() != request.getScheme() ||<mask>if (!xRequest.getScheme().equals(request.getScheme()) ||
tr	add	<del>plan/FilterPlanNode.java<mask>plan/FilterPlanNode.java<add>import com.linkedin.pinot.core.realtime.RealtimeSegment;<del>} else if (!filterType.equals(FilterOperator.RANGE)) {<add>} else if (!filterType.equals(FilterOperator.RANGE) || _segment instanceof RealtimeSegment) {<add>// jfim: ScanBasedFilterOperator is broken for realtime segments for now
tr	add	<del>http/JsonHttpResponseHandler.java<add>http/JsonHttpResponseHandler.java<add><add>/**<add>* Handle cases where a failure is returned as JSON<add>*/<add>public void onFailure(Throwable e, JSONObject errorResponse) {}<add>public void onFailure(Throwable e, JSONArray errorResponse) {}<add><add>@Override<add>protected void handleFailureMessage(Throwable e, String responseBody) {<add>super.handleFailureMessage(e, responseBody);<mask>try {<add>Object jsonResponse = parseResponse(responseBody);<add>if(jsonResponse instanceof JSONObject) {<add>onFailure(e, (JSONObject)jsonResponse);<add>} else if(jsonResponse instanceof JSONArray) {<add>onFailure(e, (JSONArray)jsonResponse);<add>}<add>} catch(JSONException ex) {<add>onFailure(e, responseBody);<add>}<add>}
tr	del	<mask>stock/FragmentTabsActivity.java<add>stock/FragmentTabsActivity.java<del>package uk.co.senab.actionbarpulltorefresh.samples;<add>package uk.co.senab.actionbarpulltorefresh.samples.stock;
tr	del	<mask>standalone/OTPConfigurator.java<add>standalone/OTPConfigurator.java<add>import org.opentripplanner.graph_builder.impl.PruneFloatingIslands;<add>graphBuilder.addGraphBuilder(new PruneFloatingIslands());
tr	add	<del>disruptor/RingBuffer.java<add>disruptor/RingBuffer.java<del>private long[] minProcessorSequence = new long[5]; // padded to prevent false sharing.<mask>private final long[] minProcessorSequence = new long[5]; // padded to prevent false sharing.
tr	del	<mask>impl/TcpIpJoiner.java<add>impl/TcpIpJoiner.java<del>node.getFailedConnections().clear();<del>if (node.getFailedConnections().contains(targetAddress)) {<del>break;<del>}
tr	del	<del>service/NodeService.java<add>service/NodeService.java<mask>private final String version;<add>private final Version version;<del>this.version = Version.CURRENT.toString();<add>this.version = Version.CURRENT;
tr	add	<del>internal/SonosBinding.java<mask>internal/SonosBinding.java<add>logger.debug("Executing command: item:{}, command:{}, ID:{}, CommandType:{}, commandString:{}",new Object[] {itemName, someCommand, sonosID, sonosCommandType, commandAsString} );
tr	add	<del>model/ProfilerContents.java<add>model/ProfilerContents.java<del><add><mask>contents.isUserSaved = createProfile ? null : "saved";
tr	del	<mask>tx/BatchTransactedConcurrentMultipleConsumerTest.java<add>tx/BatchTransactedConcurrentMultipleConsumerTest.java<del>log.info("Exchange does not have a retry message.  Set the exception and allow the retry.");<add>log.info("{} Messages have been processed. Failing the exchange to force a rollback of the transaction.", MAX_ATTEMPTS_COUNT);
tr	add	<del>inject/InjectableObjectFactory.java<add>inject/InjectableObjectFactory.java<del>applyMethods(instance, (Class<add>if (!pushBackInjection.contains(instance)) {<mask>applyMethods(instance, (Class<add>}
tr	add	<del>shader/Glsl100ShaderGenerator.java<mask>shader/Glsl100ShaderGenerator.java<del>nodeSource = nodeSource.replaceAll("(\\W)" + var.getName() + "(\\W)", "$1" + newName + "$2");<add>nodeSource = nodeSource.replaceAll("(?
tr	add	<del>util/Config.java<add>util/Config.java<mask>import com.google.common.base.Joiner;<del>".buckconfig: %s:%s must be one of %s (was %s)",<add>".buckconfig: %s:%s must be one of %s (case insensitive) (was \"%s\")",<del>clazz.getEnumConstants(),<add>Joiner.on(", ").join(clazz.getEnumConstants()),
tr	add	<del>realm/Realm.java<mask>realm/Realm.java<del>if (key != null || key.length > 0) {<add>if (key != null) {
tr	del	<mask>impl/JavaEditorTextProviderImpl.java<add>impl/JavaEditorTextProviderImpl.java<del>if (parent instanceof PsiMethodReferenceExpression || pparent instanceof PsiCallExpression) {<add>if (parent instanceof PsiMethodReferenceExpression ||<add>(pparent instanceof PsiCallExpression && ((PsiCallExpression)pparent).getArgumentList() != null)) { // skip arrays
tr	add	<del>asm/Advice.java<add>asm/Advice.java<add>* <add>* <add>* It is not possible in Java to reference more than one source file per class what makes translating such debugging information impossible. It<add>* is however possible to set break points in advice methods when invoking the original advice target. This allows debugging of advice code within<add>* unit tests that invoke the advice method without instrumentation.<add>* <mask>*<add>* @see Argument<add>* @see BoxedArguments<add>* @see BoxedReturn<add>* @see DynamicValue<add>* @see Enter<add>* @see FieldValue<add>* @see Ignored<add>* @see OnMethodEnter<add>* @see OnMethodExit<add>* @see Origin<add>* @see Return<add>* @see This<add>* @see Thrown
tr	del	<del>io/GPIO.java<add>io/GPIO.java<del>protected static void delay(int ms) {<add>public static void delay(int ms) {<mask>protected static void delayMicroseconds(int us) {<add>public static void delayMicroseconds(int us) {
tr	del	<mask>checkin/GitPushActiveBranchesDialog.java<add>checkin/GitPushActiveBranchesDialog.java<del>final String pushMessage = "Pushed " + commitsNum + " " + StringUtil.pluralize("commit", commitsNum) + ".";<del>GitUIUtil.notifySuccess(myProject, "", pushMessage);<add>final String pushMessage = "Pushed " + commitsNum + " " + StringUtil.pluralize("commit", commitsNum);
tr	add	<del>direct/DirectNoMultipleConsumersTest.java<add>direct/DirectNoMultipleConsumersTest.java<add>import org.apache.camel.FailedToStartRouteException;<del>fail("Should have thrown an IllegalStateException");<del>} catch (IllegalStateException e) {<add>fail("Should have thrown an FailedToStartRouteException");<mask>} catch (FailedToStartRouteException e) {
tr	add	<del>worldedit/EditSession.java<add>worldedit/EditSession.java<del>* @throws MaxChangedBlocksException<add>* @throws MaxChangedBlocksException thrown if too many blocks are changed<del>* Level water.<add>* Fix liquids so that they turn into stationary blocks and extend outward.<del>* @param pos<del>* @param radius<del>* @param moving<del>* @param stationary<add>* @param origin the original position<add>* @param radius the radius to fix<mask>* @param moving the block ID of the moving liquid<add>* @param stationary the block ID of the stationary liquid<del>* @throws MaxChangedBlocksException<add>* @throws MaxChangedBlocksException thrown if too many blocks are changed
tr	add	<del>model/ParcelableLocation.java<add>model/ParcelableLocation.java<del>longitude = in.readDouble("longutude", Double.NaN);<mask>longitude = in.readDouble("longitude", Double.NaN);
tr	add	<del>posts/EditPostActivity.java<mask>posts/EditPostActivity.java<add>import org.wordpress.android.ui.WPActionBarActivity.ActivityId;<add>ActivityId.trackLastActivity(this, ActivityId.POST_EDITOR);
tr	add	<del>utils/SparkUtilsTest.java<mask>utils/SparkUtilsTest.java<add>actual,
tr	del	<mask>model/NativeBinary.java<add>model/NativeBinary.java<add>void setOutputFile(File outputFile);<add>
tr	del	<mask>docidset/DocIdSets.java<add>docidset/DocIdSets.java<del>if (docIdSet.isCacheable()) {<add>if (docIdSet == null) {<add>return DocIdSet.EMPTY_DOCIDSET;<add>} else if (docIdSet.isCacheable()) {
tr	del	<mask>mediadriver/SenderTest.java<add>mediadriver/SenderTest.java<add>receiveAndSaveAllFrames();
tr	del	<del>javapoet/CodeBlock.java<add>javapoet/CodeBlock.java<mask>*   <add>*   
tr	del	<mask>iluwatar/IvoryTower.java<add>iluwatar/IvoryTower.java<add>* Eagerly initialized static instance guarantees thread<add>* safety.
tr	add	<del>startup/TomcatBaseTest.java<mask>startup/TomcatBaseTest.java<add>System.setProperty("java.util.logging.config.file", new File(<add>getBuildDirectory(), "conf/logging.properties").toString());
tr	del	<del>inline/AbstractDynamicTypeBuilderForInliningTest.java<add>inline/AbstractDynamicTypeBuilderForInliningTest.java<del>import jdk.nashorn.internal.codegen.types.*;<del>import org.objectweb.asm.commons.RemappingMethodAdapter;<mask>import static org.mockito.Mockito.verify;<del>import static org.mockito.Mockito.verifyNoMoreInteractions;
tr	add	<del>composite/GradleConnection.java<add>composite/GradleConnection.java<add>* <add>* build:<add>*<add>* <add>*     <add>*     <add>*     <add>*     <add>*     <mask>*     <add>*     <add>*     <add>*     <add>* <add>*<add>* <add>*
tr	add	<del>accessibility/AccessibilityNodeInfoCache.java<add>accessibility/AccessibilityNodeInfoCache.java<mask>int disconnectedNodeCount = 0;<del>Log.e(LOG_TAG, "Disconneced node: " + info);<add>if (DEBUG) {<add>Log.e(LOG_TAG, "Disconnected node: " + info);<add>}<add>disconnectedNodeCount++;<add>windowId + " " + info);<add>if (disconnectedNodeCount > 0) {<add>Log.e(LOG_TAG, String.format("Found %d disconnected nodes", disconnectedNodeCount));<add>}
tr	add	<del>agent/ByteBuddyAgent.java<add>agent/ByteBuddyAgent.java<mask>} catch (RuntimeException exception) {<add>throw exception;
tr	del	<mask>autoconfigure/EndpointWebMvcAutoConfiguration.java<add>autoconfigure/EndpointWebMvcAutoConfiguration.java<add>import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;<add>@ConditionalOnWebApplication
tr	del	<del>bootstrapper/LogCallbackAppender.java<add>bootstrapper/LogCallbackAppender.java<add>default:<mask>default:<del>return LogListener.Level.DEBUG;
tr	del	<del>calligraphy/CalligraphyContextWrapper.java<add>calligraphy/CalligraphyContextWrapper.java<mask>mInflater = new CalligraphyLayoutInflater(LayoutInflater.from(getBaseContext()), this, mAttributeId, true);<add>mInflater = new CalligraphyLayoutInflater(LayoutInflater.from(getBaseContext()), this, mAttributeId, false);
tr	del	<mask>tree/LeafElement.java<add>tree/LeafElement.java<del>myState = myState | type.getIndex();<add>myState = type != null ? type.getIndex() : 0;
tr	del	<del>impl/PsiDocumentManagerImplTest.java<add>impl/PsiDocumentManagerImplTest.java<mask>//System.out.println("i = " + i);<del>System.out.println("i = " + i);
tr	add	<del>openvrprovider/ControllerListener.java<add>openvrprovider/ControllerListener.java<del>package openvrprovider;<mask>package org.terasology.rendering.openvrprovider;
tr	add	<del>runners/ErrorReportingRunner.java<mask>runners/ErrorReportingRunner.java<del>// TODO: this is duplicated in TestClassMethodsRunner
tr	del	<mask>hdmi/HdmiCecLocalDeviceTv.java<add>hdmi/HdmiCecLocalDeviceTv.java<add>// # Seq 25
tr	del	<mask>stream/StreamConsumer.java<add>stream/StreamConsumer.java<del>line2 = br.readLine();<add>line2 = readAhead(br);<add>private String readAhead(BufferedReader br) throws IOException {<add>if (uri.equals("in")) {<add>// do not read ahead with reading from system in<add>return null;<add>} else {<add>return br.readLine();<add>}<add>}<add>
tr	del	<del>blocks/BlockHighGrass.java<add>blocks/BlockHighGrass.java<mask>return new Vector4f(100f / 255f, 163f / 255f, 22f / 255f, 1.0f);<add>return new Vector4f(140f / 255f, 203f / 255f, 64f / 255f, 1.0f);
tr	del	<del>surface/GetPatternsFromDataMultiClass.java<add>surface/GetPatternsFromDataMultiClass.java<mask>* (or txt) and ser, where the serialized file is of the type Map<del>* List<add>* (or txt) and ser, where the serialized file is of the type Map&lt;String,<add>* List&lt;CoreLabel&gt;&gt;.<del>System.err<del>.println("No eval sentences or list of gold entities provided to evaluate! Make sure evalFileWithGoldLabels or goldEntitiesEvalFiles is set, or turn off the evaluate flag");<add>System.err.println("No eval sentences or list of gold entities provided to evaluate! Make sure evalFileWithGoldLabels or goldEntitiesEvalFiles is set, or turn off the evaluate flag");<del>System.out<del>.println("Out of memory! Either change the memory alloted by running as java -mx20g ... for example if you wanna allot 20G. Or consider using batchProcessSents and numMaxSentencesPerBatchFile flags");<add>System.out.println("Out of memory! Either change the memory alloted by running as java -mx20g ... for example if you wanna allot 20G. Or consider using batchProcessSents and numMaxSentencesPerBatchFile flags");
tr	del	<mask>queue/DistributedIdQueue.java<add>queue/DistributedIdQueue.java<del>return id.replace('/', '_');<add>String fixed = id.replace('/', '_');<add>return fixed.replace(SEPARATOR, '_');
tr	add	<del>call/CallManager.java<add>call/CallManager.java<mask>if(mainFrame.getState() == JFrame.ICONIFIED)<add>mainFrame.setState(JFrame.NORMAL);<add><add>mainFrame.toFront();<add>
tr	del	<mask>net/Nio2Endpoint.java<add>net/Nio2Endpoint.java<del>log.debug("Socket: [" + this + "], Read: [0]");<add>log.debug("Socket: [" + this + "], Read in progress. Returning [0]");
tr	add	<del>simple/SimpleRiverSource.java<add>simple/SimpleRiverSource.java<mask>import java.sql.Array;
tr	add	<del>usb/UsbDebuggingManager.java<add>usb/UsbDebuggingManager.java<mask>break;
tr	add	<del>ned/ElevationGraphBuilderImpl.java<add>ned/ElevationGraphBuilderImpl.java<del>log.warn("Unexpectedly missing elevation for edge " + edge);<add>if (!edge.isElevationFlattened() && !edge.isSlopeOverride())<mask>log.warn("Unexpectedly missing elevation for edge " + edge);
tr	add	<del>voldemort/VoldemortAdminTool.java<add>voldemort/VoldemortAdminTool.java<del>parser.accepts("version", "version of store to rollback to")<add>parser.accepts("version", "Push version of store to rollback to")<del>Utils.croak("A version of the read-only store must be specified with rollback option");<add>Utils.croak("A read-only push version must be specified with rollback option");<mask>"--backup-timeout [mins] [--backup-verify] [--backup-incremental] --url [url] --node [node-id]");<del>stream.println("\t6) Rollback a read-only store for the specified version");<add>stream.println("\t6) Rollback a read-only store to the specified push version");
tr	del	<del>http/HttpSession.java<add>http/HttpSession.java<mask>Log.warn("Connection timed out: " + connection.getRequestId() + ". " + e.getMessage());
tr	add	<del>bluetooth/BluetoothGattServer.java<mask>bluetooth/BluetoothGattServer.java<del>temp_descs.get(i).setInstanceId(svc_descs.get(i).getInstanceId());<add>temp_descs.get(j).setInstanceId(svc_descs.get(j).getInstanceId());
tr	add	<del>visitor/ValidatingVisitor.java<add>visitor/ValidatingVisitor.java<del>invalidMD5Sums.add(changeSet);<add>if (!changeSet.shouldRunOnChange()) {<add>invalidMD5Sums.add(changeSet);<mask>}
tr	add	<del>transport/FacadePluggable.java<mask>transport/FacadePluggable.java<del>import buildcraft.api.core.BCLog;<del>BCLog.logger.error("TRIED TO SET THE ACTIVE STATE OF A FACEDE PLUGGABLE TO " + activeState2);<add>// FIXME: I have no idea what this should do, so we'll find out when a bug report comes in :)<add>// BCLog.logger.error("TRIED TO SET THE ACTIVE STATE OF A FACEDE PLUGGABLE TO " + activeState2);
tr	add	<del>format/SymbolPrinter.java<add>format/SymbolPrinter.java<del>return functionName.substring(4).replace("_", " ").toUpperCase(Locale.ENGLISH);<mask>return functionName.substring(4).replace('_', ' ').toUpperCase(Locale.ENGLISH);
tr	del	<mask>model/ObjectListing.java<add>model/ObjectListing.java<del>* @return The <add>* @return The 
tr	del	<mask>a/XML.java<add>a/XML.java<del>* @version 2015-10-14<add>* @version 2015-10-18
tr	add	<del>util/PacketParserUtils.java<add>util/PacketParserUtils.java<del>iqPacket = new UnparsedResultIQ(parseContent(parser));<mask>iqPacket = new UnparsedResultIQ(parseElement(parser));
tr	del	<del>io/LocalFileBlockReader.java<add>io/LocalFileBlockReader.java<add>import javax.annotation.concurrent.NotThreadSafe;<add><mask>* <del>* This class does not provide thread-safety. Corresponding lock must be acquired.<add>@NotThreadSafe
tr	del	<mask>node/Node.java<add>node/Node.java<del>public static final Setting<del>Setting.boolSetting("node.client", false, Property.NodeScope);
tr	add	<del>android/ViewWebStats.java<add>android/ViewWebStats.java<del>int blogid = blog.getBlogId();<del><del>if (blogid == 1 && blog.getApi_blogid() == null) {<mask>if (!blog.isDotcomFlag() && blog.getApi_blogid() == null) {
tr	del	<del>scopes/ProjectScopeServices.java<add>scopes/ProjectScopeServices.java<mask>protected TypeConverter createTypeConverter() {<del>return new DefaultTypeConverter(get(FileResolver.class));<add>protected TypeConverter createTypeConverter(FileResolver fileResolver) {<add>return new DefaultTypeConverter(fileResolver);
tr	add	<del>reader/ReaderPostPagerActivity.java<add>reader/ReaderPostPagerActivity.java<add>import android.view.MenuItem;<add>public boolean onOptionsItemSelected(final MenuItem item) {<add>switch (item.getItemId()) {<add>case android.R.id.home:<add>onBackPressed();<add>return true;<add>default:<add>return super.onOptionsItemSelected(item);<add>}<add>}<mask><add>@Override
tr	del	<del>core/InsertOrUpdateGeneratorMSSQL.java<add>core/InsertOrUpdateGeneratorMSSQL.java<mask>System.out.println("generating");<del>
tr	add	<del>cache/HystrixCacheKeyGenerator.java<add>cache/HystrixCacheKeyGenerator.java<del>if (StringUtils.isNotBlank(cacheKey.value())) {<mask>if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {
tr	add	<del>activity/MessageList.java<add>activity/MessageList.java<del>"From " + holder.sender, holder.senderAddress, true,<mask>"From " + holder.sender, holder.senderAddress, false,
tr	add	<del>java/JavaGenerator.java<add>java/JavaGenerator.java<del>indent + "    }\n\n",<mask>indent + "    }\n",
tr	del	<del>appinfo/PropertiesInstanceConfig.java<add>appinfo/PropertiesInstanceConfig.java<mask>for (Iterator<add>String subsetPrefix = propMetadataNamespace.substring(0, propMetadataNamespace.length() - 1);<add>for (Iterator
tr	del	<mask>commons/DefaultGrailsControllerClass.java<add>commons/DefaultGrailsControllerClass.java<del>this.viewNames.put(uri, viewName);<add>this.viewNames.put(uri, uri + SLASH + viewName);
tr	add	<del>keyvalue/CacheStoreAdapter.java<mask>keyvalue/CacheStoreAdapter.java<del>Preconditions.checkState(manager.getFeatures().supportsTransactions(),"Store does not support transactions and hence cannot acquire locks");<add>//Awful hack to get around transactional constraint for Infinispan - TODO: This needs to be fixed!<add>Preconditions.checkState(manager.getFeatures().supportsLocking(),"Store does not support transactions and hence cannot acquire locks");
tr	del	<mask>objc/ObjcProvider.java<add>objc/ObjcProvider.java<del>Key
tr	del	<mask>osgi/OSGiIntegrationTest.java<add>osgi/OSGiIntegrationTest.java<del>* Adds a maven bundle for the given groupId and artifactId while deducing the version to use<del>* from the <del>* generated via the<del>* <del>* from ServiceMix<add>* TODO we can remove this method when 0.4.1 of Pax Exam comes out!
tr	add	<del>output/DeprecatedLzoBinaryBlockRecordWriter.java<add>output/DeprecatedLzoBinaryBlockRecordWriter.java<del>private BinaryBlockWriter<add>private BinaryBlockWriter<del>writer_ = writer;<add>this.writer = writer;<del>writer_.write(writable.get());<mask>writer.write(writable.get());<del>writer_.finish();<del>writer_.close();<add>writer.finish();<add>writer.close();
tr	add	<del>smarttablayout/SmartTabLayout.java<add>smarttablayout/SmartTabLayout.java<add>/**<add>* Set the color used for styling the tab text. This will need to be called prior to calling<add>* {@link #setViewPager(android.support.v4.view.ViewPager)} otherwise it will not get set<add>*<mask>* @param color to use for tab text<add>*/<add>public void setDefaultTabTextColor(int color) {<add>mTabViewTextColors = ColorStateList.valueOf(color);<add>}
tr	del	<del>facebook/ConnectPlugin.java<add>facebook/ConnectPlugin.java<del><del>if (exception != null) {<del>if (loginContext != null) {<del>handleError(exception, loginContext);<mask>}<add>if (exception != null && exception instanceof FacebookOperationCanceledException) {<add>// only handle FacebookOperationCanceledException to support<add>// SDK recovery behavior triggered by getUserInfo<add>Log.e(TAG, "exception:" + exception.toString());<add>handleError(exception, loginContext);
tr	add	<del>client/ClientSplitBrainTest.java<add>client/ClientSplitBrainTest.java<del>import com.hazelcast.test.annotation.QuickTest;<add>import com.hazelcast.test.annotation.NightlyTest;<del>@Category(QuickTest.class)<mask>@Category(NightlyTest.class)
tr	add	<del>plugin/Message.java<mask>plugin/Message.java<del>if(value instanceof String) {<add>if (FIELD_TIMESTAMP.equals(key.trim()) && value != null && value instanceof Date) {<add>fields.put(FIELD_TIMESTAMP, new DateTime(value));<add>} else if(value instanceof String) {
tr	del	<mask>block/BlockLockManager.java<add>block/BlockLockManager.java<del>/** A map from a lock ID to the user ID holding this lock */<add>/** A map from a lock ID to the lock record of it */<del>public BlockLockManager() {}<add>public BlockLockManager() {<add>for (int i = 0; i <add>mLockArray.add(new ClientRWLock());<add>}<add>}
tr	add	<del>aapt/AaptCompilerMojo.java<mask>aapt/AaptCompilerMojo.java<add>* @requiresDependencyResolution compile
tr	add	<del>persistent/FSRecords.java<add>persistent/FSRecords.java<del>myRecords = new ResizeableMappedFile(recordsFile, 20 * 1024, new PagedFileStorage.StorageLock(false));<mask>boolean aligned = PagedFileStorage.BUFFER_SIZE % RECORD_SIZE == 0;<add>assert aligned; // for performance<add>myRecords = new ResizeableMappedFile(recordsFile, 20 * 1024, new PagedFileStorage.StorageLock(false),<add>PagedFileStorage.BUFFER_SIZE, aligned);
tr	del	<mask>javaslang/Predicates.java<add>javaslang/Predicates.java<del>* @author Daniel Dietrich<del>* @author Grzegorz Piwowarek<add>* @author Daniel Dietrich, Grzegorz Piwowarek
tr	add	<del>merge/TextMergeViewer.java<mask>merge/TextMergeViewer.java<del>ApplicationManager.getApplication().invokeAndWait(() -> {<add>ApplicationManager.getApplication().invokeLater(() -> {
tr	add	<del>actions/ActivateTaskDialog.java<mask>actions/ActivateTaskDialog.java<del>myMarkAsInProgressBox.setSelected(myMarkAsInProgress && isMarkAsInProgressApplicable());<add>myMarkAsInProgressBox.setSelected(myMarkAsInProgress);
tr	add	<del>client/TachyonFS.java<add>client/TachyonFS.java<del>if (info.blockIds.size() <add>if (!info.isFolder() && info.blockIds.size() <mask>if (info.isFolder()) {<add>throw new IOException(new FileDoesNotExistException("File " + fId + " is a folder."));<add>}
tr	del	<mask>api/SQLiteAPIImpl.java<add>api/SQLiteAPIImpl.java<del>android.database.sqlite.SQLiteDatabase db = SQLiteDatabase.openDatabase(app.getDatabasePath(name).getAbsolutePath(), null,<del>(readOnly? SQLiteDatabase.OPEN_READONLY : (SQLiteDatabase.OPEN_READWRITE | SQLiteDatabase.ENABLE_WRITE_AHEAD_LOGGING))<del>| SQLiteDatabase.CREATE_IF_NECESSARY);<add>android.database.sqlite.SQLiteDatabase db = app.openOrCreateDatabase(name,<add>readOnly ? SQLiteDatabase.OPEN_READONLY : (SQLiteDatabase.OPEN_READWRITE | SQLiteDatabase.ENABLE_WRITE_AHEAD_LOGGING), null);
tr	del	<del>java/JavaLibraryRules.java<add>java/JavaLibraryRules.java<add>import com.facebook.buck.model.BuildTargets;<del>import com.facebook.buck.util.BuckConstant;<del>import java.nio.file.Paths;<mask>return Paths.get(<del>BuckConstant.GEN_DIR,<del>buildTarget.getBasePath(),<del>buildTarget.getShortName() + ".classes.txt");<add>return BuildTargets.getGenPath(buildTarget, "%s.classes.txt");
tr	add	<del>configurers/AuthorizationServerSecurityConfigurer.java<add>configurers/AuthorizationServerSecurityConfigurer.java<add>public AuthorizationServerSecurityConfigurer tokenGranter(TokenGranter tokenGranter) {<mask>this.tokenGranter = tokenGranter;<add>return this;<add>}<add>
tr	del	<del>store/NeoStore.java<add>store/NeoStore.java<add>super.flush();<add>}<add><add>public void flushNeoStoreOnly()<add>{<del>pageCache.flush();<add>storeFile.flush();<mask>// Temporary, let this trickle up when there's time to refactor. For now,<del>// the system expects underlyingstorageexception<del>throw new UnderlyingStorageException( e );<add>throw new UnderlyingStorageException( "Failed to flush and force the NeoStore", e );
tr	del	<del>android/GCMMessageService.java<add>android/GCMMessageService.java<mask>boolean bActionsSet = false;<add>boolean areActionsSet = false;<del>bActionsSet = true;<add>areActionsSet = true;<del>if (!bActionsSet) {<add>if (!areActionsSet) {
tr	add	<del>zkclientbridge/CuratorZKClientBridge.java<add>zkclientbridge/CuratorZKClientBridge.java<del>curator.checkExists().inBackground(callback).forPath("/");<mask>curator.checkExists().inBackground(callback).forPath("/foo");
tr	add	<del>api/RLiveObjectService.java<mask>api/RLiveObjectService.java<del>* since the class will also be registered lazyly when it first is used.<add>* since the class will also be registered lazily when it is first used.
tr	del	<del>actfm/ActFmLoginActivity.java<add>actfm/ActFmLoginActivity.java<mask>else if ("user_not_found".equals(code))<add>else if ("user_not_found".equals(code) || "missing_param".equals(code))
tr	add	<del>inputmethod/InputMethodUtils.java<add>inputmethod/InputMethodUtils.java<del>private List<mask>public List
tr	add	<del>examples/BasicCheckpoint.java<add>examples/BasicCheckpoint.java<del>OutputStream os = tachyonClient.getOutStream(filePath, OutStreamOptions.defaults());<mask>OutputStream os = tachyonClient.getOutStream(filePath);
tr	add	<del>pm/BackgroundDexOptService.java<add>pm/BackgroundDexOptService.java<mask>/**<add>* Set of failed packages remembered across job runs.<add>*/<add>static final ArraySet<add><del>pm.performDexOpt(pkg, null /* instruction set */, true);<add>if (sFailedPackageNames.contains(pkg)) {<add>// skip previously failing package<add>continue;<add>}<add>if (!pm.performDexOpt(pkg, null /* instruction set */, true)) {<add>// there was a problem running dexopt,<add>// remember this so we do not keep retrying.<add>sFailedPackageNames.add(pkg);<add>}
tr	del	<del>ui/EpisodesFragment.java<add>ui/EpisodesFragment.java<del>public void onPrepareOptionsMenu(Menu menu) {<del>super.onPrepareOptionsMenu(menu);<del>}<del><mask>@Override
tr	add	<del>inputs/MessageInput.java<add>inputs/MessageInput.java<add>import com.google.common.base.MoreObjects;<add><add>@Override<add>public String toString() {<mask>return MoreObjects.toStringHelper(this)<add>.add("title", getTitle())<add>.add("type", getType())<add>.add("nodeId", getNodeId())<add>.toString();<add>}
tr	del	<del>chat/MetaContactChatPanel.java<add>chat/MetaContactChatPanel.java<add>/*<mask><add>*/
tr	add	<del>cli/CommandLineMain.java<add>cli/CommandLineMain.java<mask>host + ":" + port);<add>disconnectController(false);
tr	del	<mask>widget/AbsSeekBar.java<add>widget/AbsSeekBar.java<del>thumb.setBounds(thumbPos, topBound, thumbPos + thumbWidth, bottomBound);<add>final int left = isLayoutRtl() ? available - thumbPos : thumbPos;<add>thumb.setBounds(left, topBound, left + thumbWidth, bottomBound);
tr	del	<mask>datasource/InMemoryPaginatedDataSource.java<add>datasource/InMemoryPaginatedDataSource.java<del>if (limit <del>throw new IllegalArgumentException("The limit can't lower than the offset.");<del>}
tr	add	<del>description/TransformationDescriptionBuilder.java<add>description/TransformationDescriptionBuilder.java<add>public static ResourceTransformationDescriptionBuilder createSubsystemInstance() {<mask>return new ResourceTransformationDescriptionBuilderImpl(null);<add>}<add><add>/**<add>* Create a resource builder instance.<add>*<add>* @return the transformation builder<add>* @deprecated experimental<add>*/
tr	add	<del>artifacts/LayoutTreeComponent.java<mask>artifacts/LayoutTreeComponent.java<del>final DefaultMutableTreeNode treeNode = TreeUtil.findNodeWithObject(myTree.getRootNode(), node);<del>myBuilder.addSubtreeToUpdate(treeNode, new Runnable() {<add>myBuilder.queueUpdateFrom(node, true).doWhenDone(new Runnable() {
tr	add	<del>deeplearning/DeepLearningModel.java<add>deeplearning/DeepLearningModel.java<mask>double run_time;<add>_output.run_time = run_time;
tr	add	<del>util/ClassLoaderUtil.java<add>util/ClassLoaderUtil.java<add>* Finds <mask>*/<add>public static File findToolsJar() {<add>String tools = new File(SystemUtil.getJavaHome()).getAbsolutePath() + File.separatorChar + "lib" + File.separatorChar + "tools.jar";<add>File toolsFile = new File(tools);<add>if (toolsFile.exists()) {<add>return toolsFile;<add>}<add>return null;<add>}<add><add>/**
tr	del	<del>jscomp/DefaultPassConfig.java<add>jscomp/DefaultPassConfig.java<add>checks.add(checkSideEffects);<add><del>checks.add(checkSideEffects);<mask>
tr	add	<del>server/SystemServer.java<add>server/SystemServer.java<del>Zygote.systemInSafeMode = true;<add>SystemServer.inSafeMode = true;<add>/**<mask>* When set, all subsequent apps will be launched in safe mode.<add>*/<add>public static boolean inSafeMode;<add>
tr	del	<mask>iosrobovm/IOSGraphics.java<add>iosrobovm/IOSGraphics.java<add>import org.robovm.cocoatouch.glkit.GLKViewDrawableDepthFormat;<add>view.setDrawableDepthFormat(GLKViewDrawableDepthFormat.Format16);
tr	add	<del>litepal/LitePal.java<add>litepal/LitePal.java<add>/*<add>* Copyright (C)  Tony Green, LitePal Framework Open Source Project<add>*<add>* Licensed under the Apache License, Version 2.0 (the "License");<add>* you may not use this file except in compliance with the License.<add>* You may obtain a copy of the License at<add>*<mask>*      http://www.apache.org/licenses/LICENSE-2.0<add>*<add>* Unless required by applicable law or agreed to in writing, software<add>* distributed under the License is distributed on an "AS IS" BASIS,<add>* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<add>* See the License for the specific language governing permissions and<add>* limitations under the License.<add>*/<add>
tr	del	<del>queue/QueueService.java<add>queue/QueueService.java<del>import com.hazelcast.spi.SplitBrainHandlerService;<del>RemoteService, EventPublishingService<add>RemoteService, EventPublishingService<del><del>@Override<del>public Runnable prepareMergeRunnable() {<mask>return null;<del>}
tr	add	<del>util/ExchangeHelper.java<add>util/ExchangeHelper.java<add><add>/**<add>* Returns the first exchange in the given collection of exchanges which has the same exchange ID as the one given<add>* or null if none could be found<add>*/<add>public static Exchange getExchangeById(Iterable<add>for (Exchange exchange : exchanges) {<add>String id = exchange.getExchangeId();<add>if (id != null && id.equals(exchangeId)) {<add>return exchange;<mask>}<add>}<add>return null;<add>}
tr	del	<del>Deodex/DeodexUtil.java<add>Deodex/DeodexUtil.java<del>* If this is an odex instruction, and has been fixed.<mask>*/<del>public boolean fixed = false;<del><del>/**
tr	add	<del>net/AbstractEndpoint.java<add>net/AbstractEndpoint.java<del>saddr = new InetSocketAddress("localhost", getPort());<add>saddr = new InetSocketAddress("localhost", getLocalPort());<del>saddr = new InetSocketAddress(address,getPort());<mask>saddr = new InetSocketAddress(address, getLocalPort());
tr	del	<del>script/GroovyScriptTests.java<add>script/GroovyScriptTests.java<add>// NOTE: it is important to use 0.0 instead of 0 instead Groovy will do an integer comparison<add>// and if the score if between 0 and 1 it will be considered equal to 0 due to the cast<mask>.add(scriptFunction("_score > 0 ? _score : 0", "groovy"))<add>.add(scriptFunction("_score > 0.0 ? _score : 0", "groovy"))
tr	del	<del>ui/RPubsUploadDialog.java<add>ui/RPubsUploadDialog.java<del>{<del>String title = validateAndGetGeneratorTitle();<mask>if (title == null)<del>return;<del><add>{<del>title,<add>titleTextBox_.getText().trim(),
tr	add	<del>view/ViewGroup.java<add>view/ViewGroup.java<del>onViewRemoved(view);<del><add><mask>onViewRemoved(view);
tr	del	<mask>core/EmbeddedReadOnlyNeo.java<add>core/EmbeddedReadOnlyNeo.java<add>params.put( "read_only", "true" );
tr	add	<del>console/GroovyConsole.java<add>console/GroovyConsole.java<del>public void execute(@NotNull String command) {<mask>private void doExecute(@NotNull String command) {<add>}<add><add>public void execute(@NotNull String command) {<add>if (!StringUtil.isEmptyOrSpaces(command)) doExecute(command);
tr	add	<del>operators/OperatorPivotTest.java<add>operators/OperatorPivotTest.java<del>System.out.println("max outer concurrency: " + maxOuterConcurrency.get());<del>assertTrue(maxOuterConcurrency.get() > 2); // should be 4 since we have 4 threads running but setting at 3 as this is somewhat non-deterministic<add>if (Runtime.getRuntime().availableProcessors() >= 4) {<add>System.out.println("max outer concurrency: " + maxOuterConcurrency.get());<mask>assertTrue(maxOuterConcurrency.get() > 1); // should be 4 since we have 4 threads and cores running but setting at just > 1 as this is non-deterministic<add>}
tr	del	<mask>view/StatusComposeEditText.java<add>view/StatusComposeEditText.java<del>if (!isInEditMode() && mAdapter == null || mAdapter.isCursorClosed()) {<add>if (!isInEditMode() && (mAdapter == null || mAdapter.isCursorClosed())) {
tr	del	<mask>materials/GouraudMaterial.java<add>materials/GouraudMaterial.java<add>"	float NdotL = 0.0;\n" +<del>sb.append("float NdotL = max(dot(N, L), 0.1);\n");<add>sb.append("NdotL = max(dot(N, L), 0.1);\n");
tr	add	<del>format/SSTableReader.java<mask>format/SSTableReader.java<del>long indexFileLength = new File(descriptor.filenameFor(Component.PRIMARY_INDEX)).length();<add>long indexFileLength = new File(descriptor.filenameFor(Component.PRIMARY_INDEX)).length();
tr	add	<del>helper/UUIDHelper.java<add>helper/UUIDHelper.java<del>byte[] chars = new byte[40];<del>RANDOM.nextBytes(chars);<mask>String hexDigits = "0123456789abcdef"; //$NON-NLS-1$<add>char[] chars = new char[80];<add>for (int i = 0; i <add>chars[i] = hexDigits.charAt(RANDOM.nextInt(hexDigits.length()));<add>}
tr	del	<mask>scanner/HostProcess.java<add>scanner/HostProcess.java<add>// ZAP: 2014/04/01 Changed to set a name to created threads.<add>int maxNumberOfThreads;<del>threadPool = new ThreadPool(1);<add>maxNumberOfThreads = 1;<del>threadPool = new ThreadPool(scannerParam.getThreadPerHost());<add>maxNumberOfThreads = scannerParam.getThreadPerHost();<add>threadPool = new ThreadPool(maxNumberOfThreads, "ZAP-ActiveScanner-");
tr	add	<del>glide/GenericRequestBuilder.java<mask>glide/GenericRequestBuilder.java<del>isThumbnailBuilt = false;<add>// Guard against infinite recursion.<add>isThumbnailBuilt = false;
tr	add	<del>scalar/TestStringFunctions.java<add>scalar/TestStringFunctions.java<add>public void testVarcharToVarcharX()<add>{<add>assertFunction("LOWER(CAST('HELLO' AS VARCHAR))", createVarcharType(Integer.MAX_VALUE), "hello");<mask>}<add><add>@Test
tr	del	<del>gui/ReadOnlyStoreManagementServlet.java<add>gui/ReadOnlyStoreManagementServlet.java<del>if(className == null) {<add>if(className == null || className.trim().length() == 0) {<mask>Class<add>Class
tr	del	<mask>presence/OwnPresenceActor.java<add>presence/OwnPresenceActor.java<del>isAlwaysOnline = config().getDeviceCategory() == DeviceCategory.DESKTOP;<add>// isAlwaysOnline = config().getDeviceCategory() == DeviceCategory.DESKTOP;<add>isAlwaysOnline = false;<add>
tr	add	<del>activities/LocalIndexesActivity.java<add>activities/LocalIndexesActivity.java<mask>import android.graphics.Color;<add>import android.text.TextPaint;<add><add>@Override<add>public void updateDrawState(TextPaint ds) {<add>super.updateDrawState(ds);<add>ds.setColor(Color.GREEN);<add>}
tr	del	<del>s3/S3FileSystem.java<add>s3/S3FileSystem.java<add>import java.net.URLDecoder;<mask><add><add>/**<add>* The character set with which the URL is expected to be encoded<add>*/<add>private static final String URL_ENCODE_CHARACTER = "UTF-8";<add><del>awsAccessKey = splits[0];<del>awsSecretKey = splits[1];<add>awsAccessKey = URLDecoder.decode(splits[0], URL_ENCODE_CHARACTER);<add>awsSecretKey = URLDecoder.decode(splits[1], URL_ENCODE_CHARACTER);
tr	add	<del>recipes/AssemblyRecipe.java<add>recipes/AssemblyRecipe.java<add><mask>import buildcraft.core.inventory.StackHelper;
tr	del	<mask>stub/StubConfigTest.java<add>stub/StubConfigTest.java<add>// Warm up JVM<add>stub.withDeadlineNanoTime(deadline);<del>long maxDelta = MILLISECONDS.toNanos(30);<add>long maxDelta = MILLISECONDS.toNanos(10);
tr	add	<del>error/GenericError.java<mask>error/GenericError.java<del>public class GenericError extends DomainError{<add>public class GenericError extends DomainError {
tr	add	<del>file/FileResourceConnector.java<add>file/FileResourceConnector.java<del>import org.gradle.internal.resource.local.LocalResource;<add>import org.gradle.internal.resource.local.LocalResource;<del>import java.io.*;<add>import java.io.File;<add>import java.io.FileOutputStream;<add>import java.io.IOException;<add>import java.io.InputStream;<del>IOUtils.copy(input, output);<mask>IOUtils.copyLarge(input, output);<del>IOUtils.closeQuietly(output);<add>output.close();<del>IOUtils.closeQuietly(input);<add>input.close();
tr	del	<del>control/XStreamUtils.java<add>control/XStreamUtils.java<mask>* Copyright 2003-2015 the original author or authors.<add>*  Licensed to the Apache Software Foundation (ASF) under one<add>*  or more contributor license agreements.  See the NOTICE file<add>*  distributed with this work for additional information<add>*  regarding copyright ownership.  The ASF licenses this file<add>*  to you under the Apache License, Version 2.0 (the<add>*  "License"); you may not use this file except in compliance<add>*  with the License.  You may obtain a copy of the License at<del>* Licensed under the Apache License, Version 2.0 (the "License");<del>* you may not use this file except in compliance with the License.<del>* You may obtain a copy of the License at<add>*    http://www.apache.org/licenses/LICENSE-2.0<del>*      http://www.apache.org/licenses/LICENSE-2.0<del>*<del>* Unless required by applicable law or agreed to in writing, software<del>* distributed under the License is distributed on an "AS IS" BASIS,<del>* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<del>* See the License for the specific language governing permissions and<del>* limitations under the License.<add>*  Unless required by applicable law or agreed to in writing,<add>*  software distributed under the License is distributed on an<add>*  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY<add>*  KIND, either express or implied.  See the License for the<add>*  specific language governing permissions and limitations<add>*  under the License.<del>
tr	del	<mask>environment/DirectionalShadowLight.java<add>environment/DirectionalShadowLight.java<del>textureDesc.minFilter = textureDesc.minFilter = Texture.TextureFilter.Nearest;<add>textureDesc.minFilter = textureDesc.magFilter = Texture.TextureFilter.Nearest;
tr	del	<del>cli/DaemonCommand.java<add>cli/DaemonCommand.java<del>out.println("Run 'sy restart' to apply the changes.");<add>out.println("Run 'sy daemon restart' to apply the changes.");<mask>out.println("Run 'sy restart' to apply the changes.");<add>out.println("Run 'sy daemon restart' to apply the changes.");
tr	add	<del>quickfixj/QuickfixjEngineTest.java<add>quickfixj/QuickfixjEngineTest.java<add>import org.junit.Ignore;<mask>@Ignore("The session events may arrive out of order, so the test code must be refactored to cater for that - in doLogonEventsTest")
tr	add	<del>world/ChunkCachePerformanceTest.java<add>world/ChunkCachePerformanceTest.java<del>package org.terasology.world;<mask>package org.terasology.world.chunks.store;
tr	add	<del>security/PermanentlyFailingSecurityRuleWithWildcardPath.java<add>security/PermanentlyFailingSecurityRuleWithWildcardPath.java<del>//START SNIPPET: failingRuleWithWildcardPath<add><del>@Override<add><del>@Override<add>//START SNIPPET: failingRuleWithWildcardPath<mask>// END SNIPPET: failingRuleWithWildcardPath<add><del>@Override<del>// END SNIPPET: failingRuleWithWildcardPath
tr	add	<del>dev/CheckWikipediaDump.java<add>dev/CheckWikipediaDump.java<del>s = s.replaceAll("\n", " ");<del>s = s.replaceAll("\n\n+", "\n\n");<add>s = s.replaceAll("\n\n*", "\n\n");    // single line break isn't detected as paragraph in LT by default<del>//System.out.println("1####"+s);<mask>//System.out.println("1############################################\n"+s);<add>//System.out.println("/############################################"+s);
tr	add	<del>store/Store.java<add>store/Store.java<add><mask>logger.debug("using compress.stored_fields [{}]", compressedStoredFields);<add>
tr	add	<del>newProjectWizard/SelectTemplateStep.java<add>newProjectWizard/SelectTemplateStep.java<mask>myContext.setProjectBuilder(myModuleBuilder);
tr	add	<del>util/ReleaseInfo.java<mask>util/ReleaseInfo.java<del>static String name = "Liferay Portal";<add>static String name = "Liferay Enterprise Portal";
tr	del	<del>shiftreduce/State.java<add>shiftreduce/State.java<mask>this.finished = true;<add>this.finished = finished;
tr	del	<del>notifications/GCMIntentServiceTest.java<add>notifications/GCMIntentServiceTest.java<del>public void testShouldCircularizeNoteIcon() {<del>GCMMessageService intentService = new GCMMessageService();<mask><del>String type = "c";<del>assertTrue(intentService.shouldCircularizeNoteIcon(type));<del><del>assertFalse(intentService.shouldCircularizeNoteIcon(null));<del><del>type = "invalidType";<del>assertFalse(intentService.shouldCircularizeNoteIcon(type));<del>}<del>
tr	add	<del>server/InputMethodManagerService.java<add>server/InputMethodManagerService.java<del>private StatusBarManagerService mStatusBar;<mask>private @Nullable StatusBarManagerService mStatusBar;<del>statusBar.setIconVisibility(mSlotIme, false);<add>if (mStatusBar != null) {<add>mStatusBar.setIconVisibility(mSlotIme, false);<add>}
tr	del	<del>projectRoots/IdeaJdk.java<add>projectRoots/IdeaJdk.java<add>import com.intellij.openapi.application.PathManager;<mask>return null;<add>return PathManager.getHomePath().replace(File.separatorChar, '/');
tr	del	<mask>plugin/StandaloneCatalogMapper.java<add>plugin/StandaloneCatalogMapper.java<del>tmpDefaultProducts = ImmutableMap.copyOf(map);<add>tmpDefaultProducts = map;<del>tmpDefaultPlans = ImmutableMap.copyOf(map);<add>tmpDefaultPlans = map;
tr	add	<del>cordova/PluginManager.java<add>cordova/PluginManager.java<del>* Delete all plugin objects.<del>*/<del>@Deprecated // Should not be exposed as public.<del>public void clearPluginObjects() {<del>pluginMap.clear();<del>}<del><del>/**<del>@Deprecated // Should not be exposed as public.<del>public void startupPlugins() {<mask>private void startupPlugins() {
tr	add	<del>phonegap/FileUtils.java<add>phonegap/FileUtils.java<add>import android.webkit.MimeTypeMap;<del>// TODO<del>String contentType = "";<add>MimeTypeMap map = MimeTypeMap.getSingleton();<add>String contentType = map.getMimeTypeFromExtension(map.getFileExtensionFromUrl(filename));<mask>if (contentType == null  && filename.startsWith("content")) {<add>contentType = "image/jpeg";<add>}
tr	add	<del>view/View.java<add>view/View.java<add>if (mContentDescription == null) {<add>if (contentDescription == null) {<add>return;<add>}<add>} else if (mContentDescription.equals(contentDescription)) {<mask>return;<add>}<add>notifyAccessibilityStateChanged();
tr	add	<del>satellite/SatelliteManager.java<add>satellite/SatelliteManager.java<add><add>// remove this satellite from the list of active satellites; ordinarily<mask>// we'd rely on the window object's isClosed() method, but it's possible<add>// in some cases for the window to enter a zombie state in which it exists<add>// and reports as open even after being closed, apparently due to<add>// exceptions occurring during teardown (see case 4436).<add>for (ActiveSatellite satellite: satellites_)<add>{<add>if (satellite.getName() == name)<add>{<add>satellites_.remove(satellite);<add>}<add>}
tr	add	<del>lib/ApiClient.java<mask>lib/ApiClient.java<del>import java.util.ArrayList;<del>import java.util.Collections;<del>import java.util.Map;<add>import java.util.*;
tr	del	<del>tests/AbstractTestQueries.java<add>tests/AbstractTestQueries.java<del>"(SELECT CASE WHEN orderkey > 10 THEN orderkey END orderkey FROM orders) a " +<del>"RIGHT OUTER JOIN orders b ON a.orderkey = b.orderkey");<add>"(SELECT CASE WHEN orderkey > 10 THEN orderkey END orderkey FROM orders WHERE orderkey <add>"RIGHT OUTER JOIN " +<add>"(SELECT * FROM orders WHERE orderkey <del>"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders) a " +<del>"FULL OUTER JOIN orders b ON a.orderkey = b.orderkey",<add>"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders WHERE orderkey <add>"FULL OUTER JOIN " +<add>"(SELECT * FROM orders WHERE orderkey <del>"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders) a " +<del>"RIGHT OUTER JOIN orders b ON a.orderkey = b.orderkey " +<add>"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders WHERE orderkey <add>"RIGHT OUTER JOIN " +<add>"(SELECT * FROM orders WHERE orderkey <del>"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders) a " +<mask>"LEFT OUTER JOIN orders b ON a.orderkey = b.orderkey " +<add>"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders WHERE orderkey <add>"LEFT OUTER JOIN " +<add>"(SELECT * FROM orders WHERE orderkey 
tr	add	<del>iconics/IconicsDrawable.java<add>iconics/IconicsDrawable.java<add>* Returns the icon color<add>*/<add>public int getColor() {<add>return mIconColor;<add>}<add><add>/**<add>* Returns the icon contour color<add>*/<add>public int getContourColor() {<add>return mContourColor;<add>}<mask><add>/**<add>* Returns the icon background color<add>*/<add>public int getBackgroundColor() {<add>return mBackgroundColor;<add>}<add><add>/**
tr	add	<del>formatting/FormatProcessor.java<add>formatting/FormatProcessor.java<add>adjustAlignmentsAfterCurrentBlock();<add>private void adjustAlignmentsAfterCurrentBlock() {<add>LeafBlockWrapper current = myCurrentBlock.getNextBlock();<add>while (current != null && !current.getWhiteSpace().containsLineFeeds()) {<add>if (current.getAlignment() != null) {<mask>myCurrentBlock = current;<add>WhiteSpace currentWhiteSpace = myCurrentBlock.getWhiteSpace();<add>SpacingImpl currentSpaceProperty = myCurrentBlock.getSpaceProperty();<add>currentWhiteSpace.arrangeSpaces(currentSpaceProperty);<add>adjustIndent();<add>}<add>current = current.getNextBlock();<add>}<add>}<add>
tr	del	<del>embed/EmbeddedApp.java<add>embed/EmbeddedApp.java<mask>default public URI getAddress() {<add>default URI getAddress() {<del>default public void close() {<add>default void close() {
tr	add	<del>reporting/GraphiteReporter.java<add>reporting/GraphiteReporter.java<del>try {<del>final GraphiteReporter reporter = new GraphiteReporter(host, port, null);<del>reporter.start(period, unit);<del>} catch (Exception e) {<del>e.printStackTrace();<del>}<mask>enable(period, unit, host, port, null);
tr	del	<mask>pico/DefaultPicoContainer.java<add>pico/DefaultPicoContainer.java<del>public synchronized void add(@NotNull T element) {<add>public void add(@NotNull T element) {
tr	add	<del>jmx/DefaultManagementMBeanAssembler.java<add>jmx/DefaultManagementMBeanAssembler.java<del>private static final Logger LOG = LoggerFactory.getLogger(DefaultManagementAgent.class);<mask>private static final Logger LOG = LoggerFactory.getLogger(DefaultManagementMBeanAssembler.class);
tr	add	<del>input/MongoInputSplit.java<mask>input/MongoInputSplit.java<del>DBCursor getCursor(){<add>public DBCursor getCursor(){
tr	del	<del>activities/LocalIndexesActivity.java<add>activities/LocalIndexesActivity.java<mask>t.append("* ");<add>t.append(" - ").append(getString(R.string.local_indexes_cat_backup));
tr	add	<del>ui/RmdOutputPresenter.java<add>ui/RmdOutputPresenter.java<mask>import org.rstudio.studio.client.common.SuperDevMode;<add><add>@Handler<add>public void onRefreshSuperDevMode()<add>{<add>SuperDevMode.reload();<add>}
tr	add	<del>stoptime/TripUpdateGraphWriterRunnable.java<add>stoptime/TripUpdateGraphWriterRunnable.java<del>import jersey.repackaged.com.google.common.base.Preconditions;<del><mask>import com.google.common.base.Preconditions;
tr	del	<del>cordova/PluginEntry.java<add>cordova/PluginEntry.java<mask>if (clazz != null) {<add>if ((clazz != null) && !("".equals(clazz))) {
tr	add	<del>implementation/FieldAccessor.java<mask>implementation/FieldAccessor.java<del>if (!instrumentedType.isAssignableTo(fieldDescription.getDeclaringType().asErasure()) || !fieldDescription.isAccessibleTo(instrumentedType)) {<add>if (!instrumentedType.isAssignableTo(fieldDescription.getDeclaringType().asErasure()) || !fieldDescription.isVisibleTo(instrumentedType)) {
tr	del	<del>domain/StageEventTest.java<add>domain/StageEventTest.java<del><del>@Test<del>public void shouldNotParseArbitraryStrings() {<del>assertThat(StageEvent.valueOf("<del>}<mask>
tr	add	<del>drawable/ArrayDrawable.java<mask>drawable/ArrayDrawable.java<del>int width = 0;<add>int width = -1;<del>return width;<add>return width > 0 ? width : -1;<del>int height = 0;<add>int height = -1;<del>return height;<add>return height > 0 ? height : -1;
tr	del	<mask>admin/DevicePolicyManager.java<add>admin/DevicePolicyManager.java<del>* Called by a profile owner to disable account management for a specific type of account.<add>* Called by a device owner or profile owner to disable account management for a specific type<add>* of account.<del>* <add>* 
tr	add	<del>dlv/DlvXValue.java<add>dlv/DlvXValue.java<add><mask>@Override<add>public boolean canNavigateToSource() {<add>return true; // for the future compatibility<add>}
tr	del	<del>impl/KeyguardViewMediator.java<add>impl/KeyguardViewMediator.java<add>private boolean mFirstShow = true;<mask>playSounds(true);<add>if (mFirstShow) {<add>mFirstShow = false;<add>} else {<add>playSounds(true);<add>}
tr	add	<del>server/NotificationManagerService.java<mask>server/NotificationManagerService.java<del>&& (r.userId == UserHandle.USER_ALL || r.userId == userId)<add>&& (r.userId == UserHandle.USER_ALL ||<add>(r.userId == userId && r.userId == ActivityManager.getCurrentUser()))
tr	add	<del>model/HystrixDefinition.java<add>model/HystrixDefinition.java<mask>/**<add>* Refers to a Hystrix configuration to use for configuring the Hystrix EIP.<add>*/
tr	add	<del>helpers/ServerHelper.java<add>helpers/ServerHelper.java<del>NeoServerWithEmbeddedWebServer server = ServerBuilder.server().withMaxJettyThreads(2)<mask>NeoServerWithEmbeddedWebServer server = ServerBuilder.server()
tr	add	<del>interfaces/ExtractInterfaceCompanionClass.java<add>interfaces/ExtractInterfaceCompanionClass.java<add>import net.orfjackal.retrolambda.util.Flags;<del>// TODO: remove abstract methods<del><mask>if (Flags.hasFlag(access, ACC_ABSTRACT)) {<add>return null;<add>}
tr	add	<del>utils/ImageCaptureManager.java<add>utils/ImageCaptureManager.java<add>import android.text.TextUtils;<add><add><add>if (TextUtils.isEmpty(mCurrentPhotoPath)) {<mask>return;<add>}<add>
tr	del	<del>configuration/DefaultBuildConfigurer.java<add>configuration/DefaultBuildConfigurer.java<mask>LOG.lifecycle("The configuration-on-demand mode is incubating. Enjoy it and let us know how it works for you.");<add>LOG.lifecycle("Thanks for using the incubating configuration-on-demand mode. Enjoy it and let us know how it works for you.");
tr	add	<del>tree/WindowFrame.java<mask>tree/WindowFrame.java<del>Objects.equal(start, o.end) &&<add>Objects.equal(start, o.start) &&
tr	del	<mask>theme/WindowFrame.java<add>theme/WindowFrame.java<add><add>events_.fireEvent(new WindowEnsureVisibleEvent(this));
tr	del	<del>lang/Closure.java<add>lang/Closure.java<mask>* def thrice = { a -> a * 3 }<del>* def times6 = twice >> thrice<del>* // equivalent: times6 = { a -> thrice(twice(a)) }<del>* assert times6(3) == 18<add>* def add3 = { a -> a + 3 }<add>* def transform = twice >> add3<add>* // equivalent: transform = { a -> add3(twice(a)) }<add>* assert transform(3) == 9<del>* def thrice = { a -> a * 3 }<del>* def times6 = thrice <del>* // equivalent: times6 = { a -> thrice(twice(a)) }<del>* assert times6(3) == 18<add>* def add3 = { a -> a + 3 }<add>* def transform = twice <add>* // equivalent: transform = { a -> twice(add3(a)) }<add>* assert transform(3) == 12
tr	add	<del>algorithm/GenericDijkstra.java<add>algorithm/GenericDijkstra.java<del>Vertex target = initialState.getOptions().rctx.target;<add>Vertex target = null;<add>if (options.rctx != null) {<add>target = initialState.getOptions().rctx.target;<mask>}
tr	add	<del>autoupdate/ExtensionAutoUpdate.java<add>autoupdate/ExtensionAutoUpdate.java<del>// TODO<del>//private static final String ZAP_VERSIONS_XML_SHORT = "http://goo.gl/V4aWX";<del>//private static final String ZAP_VERSIONS_XML_FULL = "http://zaproxy.googlecode.com/svn/wiki/ZapVersions.xml";<del>private static final String ZAP_VERSIONS_XML_SHORT = "http://localhost:8080/zapcfu/ZapVersions.xml";<del>private static final String ZAP_VERSIONS_XML_FULL = "http://localhost:8080/zapcfu/ZapVersions.xml";<add>private static final String ZAP_VERSIONS_XML_SHORT = "http://goo.gl/V4aWX";<mask>private static final String ZAP_VERSIONS_XML_FULL = "http://zaproxy.googlecode.com/svn/wiki/ZapVersions.xml";
tr	add	<del>translator/ExprNodeConverter.java<mask>translator/ExprNodeConverter.java<add>import org.apache.hadoop.hive.common.type.HiveDecimal;<del>lType.getScale()), literal.getValue3());<add>lType.getScale()), HiveDecimal.create((BigDecimal)literal.getValue3()));
tr	add	<del>util/GroovyPropertyUtils.java<add>util/GroovyPropertyUtils.java<add>/**<add>* @deprecated use PropertyUtil.getAllProperties() instead.<add>*/<mask>@Deprecated()
tr	add	<del>monitor/NearCacheStats.java<add>monitor/NearCacheStats.java<mask>@Override
tr	add	<del>contextConfiguration/CodeFragmentCodeStyleSettingsPanel.java<add>contextConfiguration/CodeFragmentCodeStyleSettingsPanel.java<add>mySelectedTextFormatter.restoreSelectedText();<mask>mySelectedTextFormatter.restoreSelectedText();
tr	add	<del>jdbc/ScriptRunnerTest.java<mask>jdbc/ScriptRunnerTest.java<del>e.printStackTrace();
tr	add	<del>utils/KafkaStarterUtils.java<add>utils/KafkaStarterUtils.java<del>configuration.put("host.name", "localhost");<add>configureHostName(configuration, "localhost");<add>public static void configureHostName(Properties configuration, String hostName) {<add>configuration.put("host.name", hostName);<mask>}<add>
tr	add	<del>jaspi/JASPICAttachment.java<add>jaspi/JASPICAttachment.java<del>public boolean getValid() {<mask>public Boolean getValid() {
tr	del	<del>shadows/ResourcesTest.java<add>shadows/ResourcesTest.java<mask>Robolectric.application = ShadowApplication.bind(new Application(), new ResourceLoader(R.class, new File("test/res")));<add>Robolectric.application = ShadowApplication.bind(new Application(), new ResourceLoader(R.class, new File("test/res"), new File("test/assets")));
tr	del	<mask>os/BatteryStatsImpl.java<add>os/BatteryStatsImpl.java<del>mEstimatedBatteryCapacity = (int) mPowerProfile.getBatteryCapacity();<add><add>if (mPowerProfile != null) {<add>mEstimatedBatteryCapacity = (int) mPowerProfile.getBatteryCapacity();<add>} else {<add>mEstimatedBatteryCapacity = -1;<add>}
tr	add	<del>impl/LookupCellRenderer.java<mask>impl/LookupCellRenderer.java<add>if (o instanceof LookupValueWithPsiElement) {<add>o = ((LookupValueWithPsiElement)o).getElement();<add>}
tr	del	<del>widget/TextView.java<add>widget/TextView.java<mask>class LongPressCallback implements Runnable {<del>public void run() {<del>mController.hide();<del>startSelectionActionMode();<del>}<del>}<del>
tr	del	<del>error/SimpleErrorPageHandler.java<add>error/SimpleErrorPageHandler.java<del>//we don't want any headers from the original request hanging around<mask>exchange.getResponseHeaders().clear();
tr	add	<del>tx/TxnCommitOperation.java<mask>tx/TxnCommitOperation.java<del>if (wrapper == null || wrapper.getVersion() == version){<add>if (wrapper == null || wrapper.getVersion() != version){<add>wrapper.incrementAndGetVersion();
tr	add	<del>webkit/WebView.java<add>webkit/WebView.java<mask>*                       The embedder can pass null if not interested in the callback.
tr	del	<del>robolectric/RobolectricTest.java<add>robolectric/RobolectricTest.java<mask>assertEquals("No Shadow method found for View.findViewById(int)\n", output);<add>assertEquals("No Shadow method found for View.findViewById(int)" + System.getProperty("line.separator"), output);
tr	add	<del>collectors/CrateDocCollector.java<add>collectors/CrateDocCollector.java<del>import io.crate.exceptions.CircuitBreakingException;<mask>import org.elasticsearch.common.breaker.CircuitBreakingException;
tr	del	<del>json/JSONObject.java<add>json/JSONObject.java<mask>public boolean put(String key, Object value){<del>return this.put(key, value);<add>public JSONObject put(String key, Object value){<add>this.put(key, value);<add>return this;<del>public Object put(Object key, Object value){<del>return this.put(key, value);<add>public JSONObject put(Object key, Object value){<add>this.put(key, value);<add>return this;
tr	add	<del>wifi/ScanResult.java<add>wifi/ScanResult.java<add>public static final int EID_SSID = 0;<add>public static final int EID_BSS_LOAD = 11;<add>public static final int EID_HT_OPERATION = 61;<mask>public static final int EID_INTERWORKING = 107;<add>public static final int EID_ROAMING_CONSORTIUM = 111;<add>public static final int EID_EXTENDED_CAPS = 127;<add>public static final int EID_VHT_OPERATION = 192;<add>public static final int EID_VSA = 221;<add>
tr	add	<del>renderer/RajawaliRenderer.java<add>renderer/RajawaliRenderer.java<add>protected int mLastReportedGLError = 0; // Keep track of the last reported OpenGL error<mask><add>int error = glUnused.glGetError();<add><add>if(error > 0)<add>{<add>if(error != mLastReportedGLError)<add>{<add>RajLog.e("OpenGL Error: " + GLU.gluErrorString(error));<add>mLastReportedGLError = error;<add>}<add>} else {<add>mLastReportedGLError = 0;<add>}
tr	del	<mask>internal/OneWireBinding.java<add>internal/OneWireBinding.java<del>if (!filterType.equals("tuckey")) {<add>if (!filterType.equals("tukey")) {
tr	add	<del>core/TransactionConfidence.java<mask>core/TransactionConfidence.java<del>* unless there is a re-org. Automatically sets the confidence type to OVERRIDDEN_BY_DOUBLE_SPEND.<add>* unless there is a re-org. Automatically sets the confidence type to DEAD.
tr	del	<mask>converter/ConverterFactory.java<add>converter/ConverterFactory.java<add>import java.util.ArrayList;<del>List<add>List
tr	del	<del>analysis/XmlHighlightVisitor.java<add>analysis/XmlHighlightVisitor.java<del>if (parentDescriptor != null && elementDescriptor == null) {<add>if (parentDescriptor != null &&<add>elementDescriptor == null &&<add>parentTag.getUserData(DO_NOT_VALIDATE_KEY) == null<add>) {<mask>final PsiElement parent = text.getParent();<add>PsiElement parent = text.getParent();<add>if (parent instanceof XmlText) {<add>parent = parent.getParent();<add>}<add>
tr	del	<mask>gitblit/PagesServlet.java<add>gitblit/PagesServlet.java<add>import java.util.ArrayList;<add>import java.util.List;<del>String[] files = { "index.html", "index.htm", "index.mkd" };<del>for (String file : files) {<add>List<add>List<add>extensions.add("html");<add>extensions.addAll(markdownExtensions);<add>for (String ext : extensions){<add>String file = "index." + ext;
tr	del	<del>services/FileUploadService.java<add>services/FileUploadService.java<mask>mDb.recreateDb();<add>//        mDb.recreateDb(); //for testing only
tr	add	<del>src/WorldEdit.java<add>src/WorldEdit.java<mask>commands.put("/clearclipboard", "Clear clipboard");
tr	del	<del>render/PipeWorldRenderer.java<add>render/PipeWorldRenderer.java<mask>return !state.pipeConnectionMatrix.isConnected(direction) && state.facadeMatrix.getFacadeBlockId(direction) != 0;<add>return !state.pipeConnectionMatrix.isConnected(direction) && state.facadeMatrix.getFacadeBlockId(direction) == 0;
tr	del	<mask>spi/LiveOperationsTracker.java<add>spi/LiveOperationsTracker.java<del>* Populate the LifeOperations<add>* Populate the LiveOperations<del>* @param result the result.<add>* @param liveOperations the LiveOperations to populate.<del>void populate(LiveOperations result);<add>void populate(LiveOperations liveOperations);
tr	add	<del>analysis/ElisionTokenFilterFactory.java<add>analysis/ElisionTokenFilterFactory.java<del>this.articles = Analysis.parseArticles(env, settings);<add>this.articles = Analysis.parseArticles(env, settings);<del>if (articles == null) {<del>return new ElisionFilter(version, tokenStream);<del>} else {<del>return new ElisionFilter(version, tokenStream, articles);<del>}<add>if (articles == null) {<mask>return new ElisionFilter(version, tokenStream);<add>} else {<add>return new ElisionFilter(version, tokenStream, articles);<add>}
tr	add	<del>internal/PopupIndicator.java<mask>internal/PopupIndicator.java<del>DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics();<del>screenSize.set(displayMetrics.widthPixels, displayMetrics.heightPixels);<add>DisplayMetrics displayMetrics = anchor.getResources().getDisplayMetrics();<add>screenSize.set(displayMetrics.widthPixels, displayMetrics.heightPixels);<add>
tr	del	<del>download/DownloadActivity.java<add>download/DownloadActivity.java<del>if (downloadsLeft <del>laterButton.setVisibility(View.GONE);<mask>}
tr	del	<del>stream/ChunkedWriteHandler.java<add>stream/ChunkedWriteHandler.java<del>boolean needsFlush;<del>needsFlush = true;<del>if (needsFlush) {<del>ctx.flush();<mask>}<add>// Always need to flush<add>ctx.flush();<add>
tr	del	<del>config/ConfigurationBuilder.java<add>config/ConfigurationBuilder.java<del>if (!reportContentChanges.isEmpty()) {<del>for (Map.Entry<del>if (entry.getValue()) {<del>reportContent.add(entry.getKey());<del>} else {<mask>reportContent.remove(entry.getKey());<del>}<add>for (Map.Entry<add>if (entry.getValue()) {<add>reportContent.add(entry.getKey());<add>} else {<add>reportContent.remove(entry.getKey());
tr	add	<del>os/OsProbeTests.java<add>os/OsProbeTests.java<add>} else if (Constants.FREE_BSD) {<add>// five- and fifteen-minute load averages not available if linprocfs is not mounted at /compat/linux/proc<add>assertNotNull(loadAverage);<add>assertThat(loadAverage[0], greaterThanOrEqualTo((double) 0));<add>assertThat(loadAverage[1], anyOf(equalTo((double) -1), greaterThanOrEqualTo((double) 0)));<mask>assertThat(loadAverage[2], anyOf(equalTo((double) -1), greaterThanOrEqualTo((double) 0)));
tr	del	<del>interceptor/CommandExecutorImpl.java<add>interceptor/CommandExecutorImpl.java<mask>import org.activiti.impl.cfg.ProcessEngineConfiguration;<del>public void setProcessEngineConfiguration(ProcessEngineConfiguration processEngineConfiguration) {<del>}
tr	del	<del>androlib/BuildAndDecodeJarTest.java<add>androlib/BuildAndDecodeJarTest.java<mask>LOGGER.info("Building testjar.apk...");<add>LOGGER.info("Building testjar.jar...");
tr	del	<del>cli/GrailsScriptRunner.java<add>cli/GrailsScriptRunner.java<mask>import gant.TargetExecutionException;<del>catch (TargetExecutionException ex) {<add>catch (Throwable ex) {
tr	add	<del>inspections/PyInconsistentIndentationInspection.java<add>inspections/PyInconsistentIndentationInspection.java<del>myLastTabs = tabs;<del>myLastSpaces = spaces;<add>if (spaces > 0 || tabs > 0) {<add>myLastTabs = tabs;<add>myLastSpaces = spaces;<mask>}
tr	del	<del>service/StorageProxy.java<add>service/StorageProxy.java<mask>MessagingService.instance().sendRR(cm.makeMutationMessage(), endpoint, responseHandler);<add>MessageOut<add>int id = MessagingService.instance().addCallback(responseHandler, message, endpoint, message.getTimeout(), cm.consistency());<add>MessagingService.instance().sendOneWay(message, id, endpoint);
tr	del	<del>jvm/Jvm.java<add>jvm/Jvm.java<del>* Copyright 2010 the original author or authors.<add>* Copyright 2012 the original author or authors.<del><del>private static String getJavaVersion() {<del>return System.getProperty("java.version");<mask>}
tr	add	<del>compaction/LeveledManifest.java<add>compaction/LeveledManifest.java<add>import org.apache.cassandra.db.DecoratedKey;<add>if (newLevel != 0)<add>{<mask>// Integerity check<add>DecoratedKey last = null;<add>Collections.sort(generations[newLevel], SSTable.sstableComparator);<add>for (SSTableReader sstable : generations[newLevel])<add>{<add>assert last == null || sstable.first.compareTo(last) > 0;<add>last = sstable.last;<add>}<add>}<add>
tr	add	<del>spanish/SpanishTreebankLanguagePack.java<mask>spanish/SpanishTreebankLanguagePack.java<del>return SpanishTokenizer.factory(new CoreLabelTokenFactory(), null);<add>return SpanishTokenizer.factory(new CoreLabelTokenFactory(),<add>"invertible,ptb3Escaping=true,splitAll=true");
tr	add	<del>runtime/Runtime.java<add>runtime/Runtime.java<del>private final ScenarioResultImpl scenarioResult = null;<mask>private ScenarioResultImpl scenarioResult = null;<add>//TODO: this is the initial state of the state machine, it should not go here, but into something else<add>scenarioResult = new ScenarioResultImpl();
tr	del	<del>schemas/SharedTreeV2.java<add>schemas/SharedTreeV2.java<del>@API(help="Number of trees.  Grid Search, comma sep values:50,100,150,200")<add>@API(help="Number of trees.")<mask>@API(help="Maximum tree depth.  Grid Search, comma sep values:5,7")<add>@API(help="Maximum tree depth.")<del>@API(help="Fewest allowed observations in a leaf (in R called 'nodesize'). Grid Search, comma sep values")<add>@API(help="Fewest allowed observations in a leaf (in R called 'nodesize').")<del>@API(help="r2 metric on validation set: 1-(MSE(model) / MSE(mean))", direction=API.Direction.OUTPUT)<add>@API(help="r2 metric on validation set: 1-(MSE(model)/variance(response))", direction=API.Direction.OUTPUT)
tr	add	<del>module/PyContentEntriesEditor.java<mask>module/PyContentEntriesEditor.java<del>provider.removeRoot(contentEntry, root);<add>provider.removeRoot(contentEntry, root, getModel());
tr	del	<del>accessibility/AccessibilityNodeInfoCompat.java<add>accessibility/AccessibilityNodeInfoCompat.java<del>* focus.<add>* input focus.<del>*     {@link View#FOCUS_BACKWARD},<mask>*     {@link View#ACCESSIBILITY_FOCUS_FORWARD},<del>*     {@link View#ACCESSIBILITY_FOCUS_BACKWARD},<del>*     {@link View#ACCESSIBILITY_FOCUS_UP},<del>*     {@link View#ACCESSIBILITY_FOCUS_RIGHT},<del>*     {@link View#ACCESSIBILITY_FOCUS_DOWN},<del>*     {@link View#ACCESSIBILITY_FOCUS_LEFT}.<add>*     {@link View#FOCUS_BACKWARD}.
tr	del	<del>text/PinnedLineWidget.java<add>text/PinnedLineWidget.java<mask>else if (startAnchor_.getRow() == lineWidget_.getRow() &&<del>endAnchor_.getRow()   == lineWidget_.getRow())<add>else if (startAnchor_.getRow()    == lineWidget_.getRow() &&<add>endAnchor_.getRow()      == lineWidget_.getRow() &&<add>startAnchor_.getColumn() == endAnchor_.getColumn())
tr	add	<del>hcoref/DcorefChineseBenchmarkSlowITest.java<add>hcoref/DcorefChineseBenchmarkSlowITest.java<del>setAll(lowResults,highResults,expectedResults,BLANC_F1,46.18);<mask>setAll(lowResults,highResults,expectedResults,BLANC_F1,46.19);
tr	del	<del>resolve/DescriptorRenderer.java<add>resolve/DescriptorRenderer.java<mask>// do not need: final by default<add>builder.append("final");
tr	del	<del>kafka/WriteIntoKafka.java<add>kafka/WriteIntoKafka.java<del>* 	--topic test --bootstrap.servers localhost:9092<add>* 	--topic test --bootstrap.servers localhost:9092 --zookeeper.connect localhost:2181<mask>if(parameterTool.getNumberOfParameters() <del>System.out.println("Missing parameters!\nUsage: Kafka --topic <add>if(parameterTool.getNumberOfParameters() <add>System.out.println("Missing parameters!");<add>System.out.println("Usage: Kafka --topic 
tr	add	<del>jscomp/PolymerPass.java<mask>jscomp/PolymerPass.java<del>if (typeValue == null) {<add>if (typeValue == null || !typeValue.isName()) {
tr	del	<del>jdk/JDKAsyncHttpProvider.java<add>jdk/JDKAsyncHttpProvider.java<del>String password = "";<del>if (proxyServer != null) {<del>if (proxyServer.getPassword() != null) {<mask>password = proxyServer.getPassword();<del>}<del>return new PasswordAuthentication(proxyServer.getPrincipal(), password.toCharArray());<del>}
tr	del	<del>operators/BackpressureUtils.java<add>operators/BackpressureUtils.java<mask>*            atomic field updater for a request count<del>* @param object<del>*            contains the field updated by the updater<add>*            atomic long that should be updated
tr	del	<mask>btree/BTreePersistentIndexedCacheTest.java<add>btree/BTreePersistentIndexedCacheTest.java<add>file.close();
tr	add	<del>impl/JavaFoldingBuilder.java<mask>impl/JavaFoldingBuilder.java<del>private static final String[] SMILEYS = {"<add>private static final String[] SMILEYS = {"
tr	add	<del>client/ElasticsearchResponse.java<add>client/ElasticsearchResponse.java<add>* Returns the value of the first header with a specified name of this message.<add>* If there is more than one matching header in the message the first element is returned.<add>* If there is no matching header in the message <add>*/<add>public String getFirstHeader(String name) {<mask>Header header = response.getFirstHeader(name);<add>if (header == null) {<add>return null;<add>}<add>return header.getValue();<add>}<add><add>/**
tr	del	<del>language/Catalan.java<add>language/Catalan.java<mask>return new String[]{"ES"};<add>return new String[]{"ANY"};
tr	add	<del>flickr/FlickrPhotoGrid.java<mask>flickr/FlickrPhotoGrid.java<del>import com.bumptech.glide.loader.bitmap.BaseBitmapLoadFactory;<add>import com.bumptech.glide.loader.bitmap.ImageVideoBitmapLoadFactory;<del>.setBitmapLoadFactory(new BaseBitmapLoadFactory<add>.setBitmapLoadFactory(new ImageVideoBitmapLoadFactory
tr	del	<mask>impl/CompileDriver.java<add>impl/CompileDriver.java<del>CompilerUtil.refreshIOFiles(outputs);<add>if (!outputs.isEmpty()) {<add>LocalFileSystem.getInstance().refreshIoFiles(outputs, true, false, null);<add>}
tr	del	<mask>utils/ConsistencyCheck.java<add>utils/ConsistencyCheck.java<add>
tr	add	<del>testing/TestPlan.java<add>testing/TestPlan.java<del>private final class ExecutionExceptionHandler implements ExecutionListener {<mask>private static final class ExecutionExceptionHandler implements ExecutionListener {
tr	del	<mask>io/Resources.java<add>io/Resources.java<del>public static Class classForName(String className) throws ClassNotFoundException {<add>public static Class
tr	add	<del>operations/MultiMapOperationFactory.java<add>operations/MultiMapOperationFactory.java<del>//TODO: Don't use a if/else, but use a switch case.<del>switch(operationFactoryType)<del>{<mask>switch(operationFactoryType) {
tr	add	<del>model/ProjectsServerOperations.java<mask>model/ProjectsServerOperations.java<add><add>void setFollowingUser(String sessionId,<add>ServerRequestCallback
tr	del	<del>resources/CamelContextResource.java<add>resources/CamelContextResource.java<add>import com.sun.jersey.api.core.InjectParam;<mask>import com.sun.jersey.spi.inject.Inject;<del>public CamelContextResource(@Inject CamelContext camelContext) throws Exception {<add>public CamelContextResource(@InjectParam CamelContext camelContext) throws Exception {
tr	add	<del>timessquare/CalendarPickerView.java<mask>timessquare/CalendarPickerView.java<del>adapter.notifyDataSetChanged();<add>validateAndUpdate();<del>adapter.notifyDataSetChanged();<add>validateAndUpdate();
tr	add	<del>factory/GraphDatabaseSettings.java<add>factory/GraphDatabaseSettings.java<del>"store files. The default is '5m' for a check-point every 5 minutes. Other supported units are 's' " +<del>"for seconds, and 'ms' for milliseconds." )<mask>"store files." )
tr	add	<del>tests/TimeoutTest.java<mask>tests/TimeoutTest.java<del>@Test public void timeoutFailure() throws Exception {<add>@Ignore("was breaking gump") @Test public void timeoutFailure() throws Exception {
tr	del	<del>idea/DefaultIdeaModuleDependency.java<add>idea/DefaultIdeaModuleDependency.java<mask>//TODO:ADAM - remove this<del>private static final long serialVersionUID = 0;
tr	add	<del>io/IOUtils.java<add>io/IOUtils.java<add>* Check if this path exists either in the classpath or on the filesystem.<add>*<mask>* @param name The file or resource name.<add>* @return true if a call to {@link IOUtils#getBufferedReaderFromClasspathOrFileSystem(String)} would return a valid stream.<add>*/<add>public static boolean existsInClasspathOrFileSystem(String name) {<add>InputStream is = IOUtils.class.getClassLoader().getResourceAsStream(name);<add>if (is == null) {<add>is = IOUtils.class.getClassLoader().getResourceAsStream(name.replaceAll("\\\\", "/"));<add>}<add>return is != null || new File(name).exists();<add>}<add><add>/**
tr	add	<del>cpr/AtmosphereResourceImpl.java<add>cpr/AtmosphereResourceImpl.java<mask>try {<add>} catch (Throwable t) {<add>logger.trace("Wasn't able to resume a connection {}", this, t);<add>}
tr	add	<del>webkit/WebViewFactory.java<add>webkit/WebViewFactory.java<del>if (path.contains("!")) {<del>String[] split = TextUtils.split(path, "!");<mask>if (path.contains("!/")) {<add>String[] split = TextUtils.split(path, "!/");<del>return apkPath + "!" + entry;<add>return apkPath + "!/" + entry;
tr	del	<del>view/HardwareRenderer.java<add>view/HardwareRenderer.java<mask>setEnabled(true);<add>if (mCanvas != null) {<add>setEnabled(true);<add>}
tr	del	<del>userpreferences/UserPreferencesController.java<add>userpreferences/UserPreferencesController.java<mask>return userPreferences.getBoolean(context.getString(R.string.pref_share_contacts_key), false);<add>return userPreferences.getBoolean(context.getString(R.string.pref_share_contacts_key), true);
tr	add	<del>loader/OOrientDBLoader.java<add>loader/OOrientDBLoader.java<mask>final ODocument metadata = (ODocument) resolve(idx.field("metadata"));<add>log(OETLProcessor.LOG_LEVELS.DEBUG, "%s: found metadata field '%s'", getName(), metadata);<add><del>index = cls.createIndex(idxName, idxType, fields);<add>index = cls.createIndex(idxName, idxType, null, metadata, fields);
tr	del	<mask>issues/IssuesTest.java<add>issues/IssuesTest.java<del><add>.fileMmapCleanerHackEnable()
tr	del	<mask>activity/Accounts.java<add>activity/Accounts.java<add>new String[] {"ActionBarSherlock", "http://actionbarsherlock.com/"}
tr	add	<del>app/ContactListFilterView.java<mask>app/ContactListFilterView.java<del>// loader.setUpdateThrottle(1000L);<add>loader.setUpdateThrottle(500L);
tr	del	<mask>template/MarkupTemplateModule.java<add>template/MarkupTemplateModule.java<del>import ratpack.server.ServerConfig;<add>import ratpack.server.ServerConfig;<del>* @see <add>* @see 
tr	add	<del>wrapreturnvalue/WrapReturnValueDialog.java<add>wrapreturnvalue/WrapReturnValueDialog.java<mask>myInnerClassNameTextField.getDocument().addDocumentListener(docListener);
tr	add	<del>mvc/MvcFramework.java<mask>mvc/MvcFramework.java<add>public boolean isUpgradeActionSupported(Module module) {<add>return true;<add>}<add>
tr	del	<del>java/Java2GroovyMain.java<add>java/Java2GroovyMain.java<del>/**<del>* @param ast<del>* @param groovyTokenNames<mask>*/<del>/**<del>* @param tokenNames<del>* @param ast<del>*/<del>/**<del>* @param input<del>* @return<del>*/
tr	add	<del>fixtures/AvailableToolChains.java<add>fixtures/AvailableToolChains.java<del>if (version.isAvailable() && version.getVersion().startsWith("4.")) {<mask>if (version.isAvailable()) {
tr	add	<del>theories/Theories.java<mask>theories/Theories.java<del>// TODO: (Jul 20, 2007 2:02:44 PM) Only get methods once, even if they<del>// have both @Test and @Theory<del>
tr	add	<del>security/CertificateValidator.java<add>security/CertificateValidator.java<add>//========================================================================<add>//Copyright (c) Webtide LLC<add>//------------------------------------------------------------------------<add>//All rights reserved. This program and the accompanying materials<add>//are made available under the terms of the Eclipse Public License v1.0<add>//and Apache License v2.0 which accompanies this distribution.<add>//<add>//The Eclipse Public License is available at<add>//http://www.eclipse.org/legal/epl-v10.html<add>//<add>//The Apache License v2.0 is available at<add>//http://www.apache.org/licenses/LICENSE-2.0.txt<mask>//<add>//You may elect to redistribute this code under either of these licenses.<add>//========================================================================<add>
tr	del	<del>hive/HiveMetadata.java<add>hive/HiveMetadata.java<mask>throw new UnsupportedOperationException();<add>throw new PrestoException(NOT_SUPPORTED, "INSERT not yet supported for Hive");<del>throw new UnsupportedOperationException();<add>throw new PrestoException(NOT_SUPPORTED, "INSERT not yet supported for Hive");
tr	add	<del>pojo/PojoMessageHandlerBase.java<mask>pojo/PojoMessageHandlerBase.java<add>try {<add>this.method.setAccessible(true);<add>} catch (Exception e) {<add>// It is better to make sure the method is accessible, but<add>// ignore exceptions and hope for the best<add>}
tr	add	<del>series/LineGraphSeries.java<add>series/LineGraphSeries.java<add>if (endX <add>// dont draw from right to left<mask>skipDraw = true;<add>}<add>
tr	add	<del>debug/DebugAppContainer.java<add>debug/DebugAppContainer.java<del>drawerContext = new ContextThemeWrapper(activity, R.style.Theme_U2020_Debug);;<mask>drawerContext = new ContextThemeWrapper(activity, R.style.Theme_U2020_Debug);
tr	add	<del>nodes/Node.java<add>nodes/Node.java<del>return Collections.unmodifiableList(childNodes);<mask>// actually returns the real list, as this method is hit many times during selection, and so is a GC time-sink<add>// leaving the documentation as is (warning of unmodifiability) to discourage out-of-API modifications<add>return childNodes;
tr	del	<mask>health/RestClusterHealthAction.java<add>health/RestClusterHealthAction.java<add>clusterHealthRequest.masterNodeTimeout(request.paramAsTime("master_timeout", clusterHealthRequest.masterNodeTimeout()));
tr	add	<del>worker/WorkerSpawnStrategy.java<add>worker/WorkerSpawnStrategy.java<del>Preconditions.checkArgument(Iterables.getLast(spawn.getArguments()).startsWith("@"));<add>if (!Iterables.getLast(spawn.getArguments()).startsWith("@")) {<mask>Preconditions.checkState(<add>false, "Must have parameter file as last arg, got args: " + spawn.getArguments());<add>}<add>
tr	add	<del>util/IndentingPrintWriter.java<add>util/IndentingPrintWriter.java<add>public void printPair(String key, Object value) {<mask>print(key + "=" + String.valueOf(value) + " ");<add>}<add>
tr	add	<del>tree/SumTree.java<mask>tree/SumTree.java<add>
tr	add	<del>scalar/StringFunctions.java<add>scalar/StringFunctions.java<del>0 <del>INVALID_FUNCTION_ARGUMENT,<del>"Target length must be in the range [0.." + Integer.MAX_VALUE + "]"<add>0 <mask>INVALID_FUNCTION_ARGUMENT,<add>"Target length must be in the range [0.." + Integer.MAX_VALUE + "]"
tr	add	<del>impl/ClientPartitionServiceImpl.java<mask>impl/ClientPartitionServiceImpl.java<add>updating.set(false);
tr	del	<del>startup/ContextConfig.java<add>startup/ContextConfig.java<del>private static final String SCI_LOCATION =<mask>"META-INF/services/javax.servlet.ServletContainerInitializer";<del>
tr	add	<del>view/SingleMessageView.java<add>view/SingleMessageView.java<add>import com.fsck.k9.helper.HtmlConverter;<add>if (text != null) {<add>text = HtmlConverter.textToHtml(text, true);<add>}<del>if (text != null) {<del>text = "<del>} else {<del>// getTextForDisplay() always returns HTML-ified content.<add><mask>if (text == null) {
tr	add	<del>model/Precipitation.java<mask>model/Precipitation.java<del>@Provider(name = ProviderName.FORECASTIO, property = "precipProbability", converter = ConverterType.FRACTION_INTEGER)<add>@Provider(name = ProviderName.FORECASTIO, property = "precipProbability", converter = ConverterType.FRACTION_INTEGER),<add>@Provider(name = ProviderName.WUNDERGROUND, property = "pop")
tr	del	<del>rxlifecycle/RxLifecycle.java<add>rxlifecycle/RxLifecycle.java<del>* <del>* Warning: In order for this to work in all possible cases, this should only be called<del>* immediately before calling subscribe().<mask>* <del>* Warning: In order for this to work in all possible cases, this should only be called<del>* immediately before calling subscribe().<del>* <del>* Warning: In order for this to work in all possible cases, this should only be called<del>* immediately before calling subscribe().<del>* <del>* Warning: In order for this to work in all possible cases, this should only be called<del>* immediately before calling subscribe().
tr	add	<del>inspector/WheelchairEdgeRenderer.java<add>inspector/WheelchairEdgeRenderer.java<mask><add>@Override<add>public String getName() {<add>return "Wheelchair access";<add>}
tr	add	<del>library/PullToRefreshAttacher.java<mask>library/PullToRefreshAttacher.java<del>activity.getWindowManager().removeView(headerViewLayout);<add>activity.getWindowManager().removeViewImmediate(headerViewLayout);
tr	add	<del>config/LibrarySourcesConfig.java<add>config/LibrarySourcesConfig.java<del>LOG.error("File '" + path + "not found.'");<mask>LOG.error("File '" + path + "' not found.'");
tr	add	<del>service/ChatSessionAdapter.java<add>service/ChatSessionAdapter.java<del>if (!wasMessageSeen)<mask>if (wasSeen)
tr	del	<del>util/PigTestUtil.java<add>util/PigTestUtil.java<del>import org.slf4j.Logger;<mask>import org.slf4j.LoggerFactory;<del>private static final Logger LOG = LoggerFactory.getLogger(PigTestUtil.class);<del><del>
tr	del	<mask>tv/TvContract.java<add>tv/TvContract.java<del>public static final String COLUMN_PACKAGE_NAME = "package_name";<add>String COLUMN_PACKAGE_NAME = "package_name";
tr	add	<del>view/View.java<add>view/View.java<del>mLayerPaint.setAlpha((int) (alpha * layerPaintAlpha));<add>if (mLayerPaint == null && alpha <add>mLayerPaint = new Paint();<add>mLayerPaint.setAlpha((int) (alpha * layerPaintAlpha));<add>}<del>mLayerPaint.setAlpha(layerPaintAlpha);<add>if (mLayerPaint != null) {<add>mLayerPaint.setAlpha(layerPaintAlpha);<mask>}
tr	del	<del>spec/ServletContextImpl.java<add>spec/ServletContextImpl.java<mask>throw new RuntimeException(e);<add>throw new IllegalArgumentException(e);
tr	del	<del>forge/ForgeHooks.java<add>forge/ForgeHooks.java<mask>return itemstack.canHarvestBlock(bl);<add>return true;<del>Block.cobblestoneMossy, Block.oreIron,<del>Block.blockSteel, Block.oreCoal, Block.blockGold,<del>Block.oreGold, Block.oreDiamond, Block.blockDiamond,<add>Block.cobblestoneMossy,<add>Block.oreCoal,
tr	add	<del>models/OTPQuery.java<mask>models/OTPQuery.java<add>import play.data.validation.MaxSize;<del>public String userName, queryParams;<add>public String userName;<add><add>//@Column(columnDefinition = "TEXT")<add>@Column(length=1000)<add>public String queryParams;<add>
tr	add	<del>model/LastLocation.java<add>model/LastLocation.java<add>/*<add>* Copyright (c) 2002-2016 "Neo Technology,"<add>* Network Engine for Objects in Lund AB [http://neotechnology.com]<add>*<mask>* This file is part of Neo4j.<add>*<add>* Neo4j is free software: you can redistribute it and/or modify<add>* it under the terms of the GNU Affero General Public License as<add>* published by the Free Software Foundation, either version 3 of the<add>* License, or (at your option) any later version.<add>*<add>* This program is distributed in the hope that it will be useful,<add>* but WITHOUT ANY WARRANTY; without even the implied warranty of<add>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<add>* GNU Affero General Public License for more details.<add>*<add>* You should have received a copy of the GNU Affero General Public License<add>* along with this program. If not, see <add>*/
tr	add	<del>container/NettyCometSupport.java<add>container/NettyCometSupport.java<add>@Override<add><add>/**<mask>* {@inheritDoc}<add>*/<add>@Override<add>public boolean supportWebSocket() {<add>return true;<add>}
tr	del	<del>caldroid/CaldroidFragment.java<add>caldroid/CaldroidFragment.java<mask>import java.util.Calendar;
tr	del	<del>http11/Http11AprProcessor.java<add>http11/Http11AprProcessor.java<del>} else {<del>return true;<add>return false;<mask>return false;<add>return true;
tr	del	<mask>requery/Converter.java<add>requery/Converter.java<del>*     {@literal @}Entity<add>*    {@literal @}Entity<del>*         {@literal @}Convert(URIConverter.class)<add>*        {@literal @}Convert(URIConverter.class)
tr	add	<del>lucene/LuceneSerializerTest.java<add>lucene/LuceneSerializerTest.java<add>@Ignore<add>public void in() throws Exception {<add>fail("Not yet implemented!");<add>}<mask><add>@Test
tr	del	<del>help/Help.java<add>help/Help.java<del>@Handler<mask>@Handler
tr	add	<del>connection/KNXConnection.java<mask>connection/KNXConnection.java<del>sLogger.debug("setProcessListener() event: {}", listener);<del>sLogger.debug("unsetProcessListener() event: {}", listener);
tr	add	<del>util/WPOptimizelyEventListener.java<mask>util/WPOptimizelyEventListener.java<del>AnalyticsTracker.track(AnalyticsTracker.Stat.ABTEST_START);<add>AnalyticsTracker.track(AnalyticsTracker.Stat.ABTEST_START, abTestProperties);
tr	add	<del>zookeeper/AbstractZooKeeperManager.java<add>zookeeper/AbstractZooKeeperManager.java<del>int id = idFromPath( child );<mask>int id;<add>try<add>{<add>// We put other nodes under this root, for example "<add>// and maybe others. So only include children named with numbers.<add>id = idFromPath( child );<add>}<add>catch ( NumberFormatException e )<add>{<add>continue;<add>}
tr	add	<del>servlet/SessionMonitor.java<mask>servlet/SessionMonitor.java<add>import java.util.Iterator;<add>/**<add>* Returns iterator for all stored session IDs.<add>* Keep in mind that session may <add>* exist during the iteration!<add>*/<add>public Iterator<add>return sessionMap.keySet().iterator();<add>}<add>
tr	del	<mask>security/OSecurityShared.java<add>security/OSecurityShared.java<del>new OSQLSynchQuery<add>new OSQLSynchQuery<del>new OSQLSynchQuery<del>.execute();<add>new OSQLSynchQuery
tr	add	<del>resources/SecurityResource.java<add>resources/SecurityResource.java<add>@TimedResource<add>@GET<mask>@Produces(APPLICATION_JSON)<add>@Path("/users/{username:" + ANYTHING_PATTERN + "}/roles")<add>@ApiOperation(value = "Get roles associated to a user")<add>public Response getUserRoles(@PathParam("username") final String username,<add>@javax.ws.rs.core.Context final HttpServletRequest request,<add>@javax.ws.rs.core.Context final UriInfo uriInfo) throws SecurityApiException {<add>final List<add>final UserRolesJson userRolesJson = new UserRolesJson(username, null, roles);<add>return Response.status(Status.OK).entity(userRolesJson).build();<add>}
tr	del	<mask>facebookaccregwizz/FirstWizardPage.java<add>facebookaccregwizz/FirstWizardPage.java<del>* The simple form.<del>* @return<add>* Get the simple form.<add>* @return form with user and password field
tr	add	<del>login/LoginManager.java<add>login/LoginManager.java<mask><add>pendingLoginRequest = null;
tr	add	<del>widget/RecyclerView.java<add>widget/RecyclerView.java<del>* Return the number of items in the adapter bound to the parent RecyclerView<add>* Returns the number of items in the adapter bound to the parent RecyclerView.<add>* <add>* Note that this number is not necessarily equal to {@link State#getItemCount()}. In<add>* methods where State is available, you should use {@link State#getItemCount()} instead.<add>* For more details, check the documentation for {@link State#getItemCount()}.<del>* @return Items in the bound adapter<add>* @return The number of items in the bound adapter<add>* @see State#getItemCount()<del>* @return Total number of items to be laid out. Note that, this number is not necessarily<del>* equal to the number of items in the adapter, so you should always use this number for<del>* your position calculations and never call adapter directly.<add>* Returns the total number of items that can be laid out. Note that this number is not<add>* necessarily equal to the number of items in the adapter, so you should always use this<add>* number for your position calculations and never access the adapter directly.<add>* <add>* RecyclerView listens for Adapter's notify events and calculates the effects of adapter<add>* data changes on existing Views. These calculations are used to decide which animations<add>* should be run.<add>* <add>* To support predictive animations, RecyclerView may rewrite or reorder Adapter changes to<add>* present the correct state to LayoutManager in pre-layout pass.<add>* <add>* For example, a newly added item is not included in pre-layout item count because<add>* pre-layout reflects the contents of the adapter before the item is added. Behind the<add>* scenes, RecyclerView offsets {@link Recycler#getViewForPosition(int)} calls such that<add>* LayoutManager does not know about the new item's existence in pre-layout. The item will<add>* be available in second layout pass and will be included in the item count. Similar<add>* adjustments are made for moved and removed items as well.<add>* <add>* You can get the adapter's item count via {@link LayoutManager#getItemCount()} method.<mask>*<add>* @return The number of items currently available<add>* @see LayoutManager#getItemCount()
tr	add	<del>internal/DefaultFileLockManager.java<add>internal/DefaultFileLockManager.java<del>this.mode = mode;<add><mask><add>this.mode = lock.isShared() ? LockMode.Shared : LockMode.Exclusive;
tr	add	<del>auto/SchemaTest.java<mask>auto/SchemaTest.java<add>whiz.createProperty("id", OType.INTEGER);
tr	del	<del>smssync/CursorToMessage.java<add>smssync/CursorToMessage.java<mask>record.address = new Address(address + "@" + UNKNOWN_PERSON);<add><add>record.address = new Address(EncoderUtil.encodeAddressLocalPart(address) +<add>"@" + UNKNOWN_PERSON);<del>return no + "@" + UNKNOWN_EMAIL;<add>return EncoderUtil.encodeAddressLocalPart(no.trim()) + "@" + UNKNOWN_EMAIL;
tr	add	<del>javaCompiler/BackendCompilerWrapper.java<add>javaCompiler/BackendCompilerWrapper.java<add>LOG.info("Thread interrupted", ignored);<del>catch(ExecutionException ignored) {<mask>catch (ExecutionException ignored) {<add>LOG.info("Thread interrupted", ignored);
tr	del	<del>impl/PhoneWindowManager.java<add>impl/PhoneWindowManager.java<del>// Allow the navigation bar to move on small devices (phones).<mask>mNavigationBarCanMove = shortSizeDp <add>// Allow the navigation bar to move on non-square small devices (phones).<add>mNavigationBarCanMove = width != height && shortSizeDp 
tr	add	<del>psi/PyClass.java<add>psi/PyClass.java<add><add>/**<add>* Returns the expression that defines the metaclass of the class.<add>*<add>* It might be defined outside the class in case of file-level __metaclass__ attributes.<mask>* Operates at the AST level.<add>*/<add>@Nullable<add>PyExpression getMetaClassExpression();
tr	add	<del>am/ActivityStack.java<add>am/ActivityStack.java<add>} else if (mResumedActivity == next && next.state == ActivityState.RESUMED &&<add>mStackSupervisor.allResumedActivitiesComplete()) {<add>// It is possible for the activity to be resumed when we paused back stacks above if the<add>// next activity doesn't have to wait for pause to complete.<add>// So, nothing else to-do except:<add>// Make sure we have executed any pending transitions, since there<add>// should be nothing left to do at this point.<add>mWindowManager.executeAppTransition();<add>mNoAnimActivities.clear();<mask>ActivityOptions.abort(options);<add>if (DEBUG_STATES) Slog.d(TAG_STATES,<add>"resumeTopActivityLocked: Top activity resumed (dontWaitForPause) " + next);<add>if (DEBUG_STACK) mStackSupervisor.validateTopActivitiesLocked();<add>return true;
tr	add	<del>hazelcast/HazelcastIdempotentRepository.java<add>hazelcast/HazelcastIdempotentRepository.java<add><add>@Override<add>public void clear() {<add>repo.clear();<mask>}<del>
tr	add	<del>multilayer/MultiLayerNetwork.java<add>multilayer/MultiLayerNetwork.java<add>import org.nd4j.linalg.util.ArrayUtil;<add>public INDArray scoreExamples(DataSetIterator iter, boolean addRegularizationTerms){<add>List<mask><add>while(iter.hasNext()){<add>out.add(scoreExamples(iter.next(), addRegularizationTerms));<add>}<add>return Nd4j.toFlattened('f',out);<add>}<add>
tr	del	<del>imageloader/ImageLoader.java<add>imageloader/ImageLoader.java<del>static final int HANDLER_MESSAGE_ID = 0;<add>public static final int HANDLER_MESSAGE_ID = 0;<mask>static final String BITMAP_EXTRA = "droidfu:extra_bitmap";<add>public static final String BITMAP_EXTRA = "droidfu:extra_bitmap";
tr	add	<del>buffer/AdvancedLeakAwareByteBuf.java<add>buffer/AdvancedLeakAwareByteBuf.java<add>public ByteBuf retain() {<add>leak.record();<add>return super.retain();<add>}<mask><add>@Override<add>public ByteBuf retain(int increment) {<add>leak.record();<add>return super.retain(increment);<add>}<add><add>@Override<add>} else{<add>leak.record();<add>} else {<add>leak.record();
tr	del	<del>dto/AbstractSObjectBase.java<add>dto/AbstractSObjectBase.java<del>* Utility method to clear all {@link AbstractSObjectBase} fields.<mask>* <add>* Utility method to clear all system {@link AbstractSObjectBase} fields.<add>* <add>* <del>Name = null;
tr	del	<mask>jersey/ResourceChat.java<add>jersey/ResourceChat.java<add>@Produces("application/json")<add><add><del>@Produces("application/json")<del>@Broadcast<del>@Consumes("application/json")<add>@Broadcast(writeEntity = false)<del>public void broadcast(@Context Broadcaster b, Message message) {<del>b.broadcast(new Response(message.author, message.message));<add>public Response broadcast(Message message) {<add>return new Response(message.author, message.message);
tr	add	<del>comments/CommentsListFragment.java<mask>comments/CommentsListFragment.java<del><del>getAdapter().clearSelectedComments();<del>// if the new comments status is not the same as the current filter status it means user have switched filter<del>// while comment moderation/deletion was in progress and we need to reload comments from DB to reflect changes<del>if (moderatedComments.getNewStatus() != mCommentStatusFilter || moderatedComments.isDeleted()) {<del>loadComments();<del>}<add>loadComments();
tr	del	<mask>connection/DefaultCluster.java<add>connection/DefaultCluster.java<del>serverDescriptions = serverSelector.choose(description);<add>serverDescriptions = serverSelector.choose(description);
tr	del	<mask>water/H2O.java<add>water/H2O.java<add><add>// Log jetty stuff to stdout for now.<add>// TODO:  figure out how to wire this into log4j.<add>System.setProperty("org.eclipse.jetty.util.log.class", "org.eclipse.jetty.util.log.StrErrLog");
tr	add	<del>record/OSerializationSetThreadLocal.java<mask>record/OSerializationSetThreadLocal.java<del>public static void clear() {<del>INSTANCE.get().clear();<del>}<del>
tr	add	<del>bottombar/BottomBarBadge.java<add>bottombar/BottomBarBadge.java<del>getLayoutParams().width = size;<del>getLayoutParams().height = size;<add><add>ViewGroup.LayoutParams params = getLayoutParams();<add>params.width = size;<mask>params.height = size;<add>setLayoutParams(params);
tr	del	<del>solo/Solo.java<add>solo/Solo.java<mask>* @param text the text that the {@link CheckedTextView} or {@link CompoundButton} objects show, specified as a regular expression<add>* @param text the text that the {@link CheckedTextView} or {@link CompoundButton} objects display, specified as a regular expression
tr	add	<del>impl/CoreProgressManager.java<add>impl/CoreProgressManager.java<add><add>@Override<add>public String toString() {<mask>return myTask.toString();<add>}
tr	del	<mask>enterprise/StandaloneClusterClient.java<add>enterprise/StandaloneClusterClient.java<del>timer = new Timer();<add>timer = new Timer( true );
tr	add	<del>processor/RuntimePermissionsAnnotatedElement.java<add>processor/RuntimePermissionsAnnotatedElement.java<mask>validateClassName();<del>checkClassName(className);<add>validateNeedsPermissionMethods();<add>showsRationaleMethods = findMethods(element, ShowsRationale.class);<add>validateShowRationaleMethods();<add>}<add><add>private void validateClassName() {<add>checkClassName(className);<add>}<add><add>private void validateNeedsPermissionMethods() {<del>showsRationaleMethods = findMethods(element, ShowsRationale.class);<add>}<add><add>private void validateShowRationaleMethods() {
tr	del	<mask>builders/TileFiller.java<add>builders/TileFiller.java<del>IFillerPattern prev = currentPattern;<del>currentPattern = FillerManager.registry.getPattern(data.readUTF());<del>if (currentPattern == null)<del>currentPattern = PatternFill.INSTANCE;<del>if (prev != currentPattern)<del>done = false;<del>sendNetworkUpdate();<add>setPattern(FillerManager.registry.getPattern(data.readUTF()));
tr	del	<mask>bio/MultipointBioSender.java<add>bio/MultipointBioSender.java<add>/**<add>* @deprecated  Unused - will be removed in Tomcat 8.0.x<add>*/<add>@Deprecated
tr	del	<del>parametric/ParametricCallable.java<add>parametric/ParametricCallable.java<del>if (e.getCause() != null) {<del>for (ExceptionConverter converter : builder.getExceptionConverters()) {<mask>converter.convert(e.getCause());<del>}<del>}<del>
tr	add	<del>media/AudioService.java<add>media/AudioService.java<del>if (uiIndex == 0 || (mPrevVolDirection == AudioManager.ADJUST_LOWER &&<del>mVoiceCapable && streamType == AudioSystem.STREAM_RING)) {<add>if (uiIndex == 0 ||<add>(!vibeInSilent &&<mask>mPrevVolDirection == AudioManager.ADJUST_LOWER &&<add>mVoiceCapable && streamType == AudioSystem.STREAM_RING)) {
tr	add	<del>wifi/WifiWatchdogStateMachine.java<mask>wifi/WifiWatchdogStateMachine.java<add>} catch (IllegalArgumentException ae) {<add>log("ARP test initiation failure: " + ae);<add>success = true;
tr	del	<mask>languagetool/JLanguageTool.java<add>languagetool/JLanguageTool.java<add>* @deprecated use {@link #analyzeText(String)} instead (deprecated since 2.7)
tr	del	<mask>patch/PatchReader.java<add>patch/PatchReader.java<del>@NonNls private static final Pattern ourUnifiedHunkStartPattern = Pattern.compile("@@ -(\\d+),(\\d+) \\+(\\d+),(\\d+) @@");<add>@NonNls private static final Pattern ourUnifiedHunkStartPattern = Pattern.compile("@@ -(\\d+),(\\d+) \\+(\\d+),(\\d+) @@.*");
tr	add	<del>quadtree/LinearQuadTree.java<add>quadtree/LinearQuadTree.java<del>//TODO<del>return null;<mask>Collection<add>// TODO: write the actual search<add>return collection;
tr	del	<mask>network/NettyUtils.java<add>network/NettyUtils.java<add>import javax.annotation.concurrent.ThreadSafe;<add><add>@ThreadSafe
tr	del	<del>muc/MUCRoom.java<add>muc/MUCRoom.java<add>public String getNaturalLanguageName();<add><add>public void setNaturalLanguageName(String naturalLanguageName);<add><del>public void setName(String name);<mask>
tr	add	<del>activities/DownloadIndexActivity.java<add>activities/DownloadIndexActivity.java<add>import java.io.IOException;<del>new File(parent, ".nomedia").createNewFile(); //$NON-NLS-1$<add>try {<add>new File(parent, ".nomedia").createNewFile();//$NON-NLS-1$<add>} catch (IOException e) {<add>// swallow io exception<mask>}
tr	add	<del>plan/ChildReplacer.java<mask>plan/ChildReplacer.java<del>/*<del>* Licensed under the Apache License, Version 2.0 (the "License");<del>* you may not use this file except in compliance with the License.<del>* You may obtain a copy of the License at<del>*<del>*     http://www.apache.org/licenses/LICENSE-2.0<del>*<del>* Unless required by applicable law or agreed to in writing, software<del>* distributed under the License is distributed on an "AS IS" BASIS,<del>* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<del>* See the License for the specific language governing permissions and<del>* limitations under the License.<del>*/<del>
tr	add	<del>mediadriver/MediaDriver.java<mask>mediadriver/MediaDriver.java<add>*     
tr	add	<del>typedef/GrTypeDefinitionImpl.java<add>typedef/GrTypeDefinitionImpl.java<del>if (containingClass != null) {<mask>if (containingClass != null && containingClass.getQualifiedName() != null) {
tr	add	<del>library/PullToRefreshAttacher.java<mask>library/PullToRefreshAttacher.java<add>if (activity == null) {<add>throw new IllegalArgumentException("activity cannot be null");<add>}
tr	del	<mask>app/IntentForwarderActivity.java<add>app/IntentForwarderActivity.java<del>canForward = ipm.canForwardTo(newIntent, resolvedType, callingUserId,<add>Intent selector = newIntent.getSelector();<add>if (selector == null) {<add>selector = newIntent;<add>}<add>canForward = ipm.canForwardTo(selector, resolvedType, callingUserId,
tr	add	<del>changes/ChangeCollector.java<mask>changes/ChangeCollector.java<del>handler.endOptions();<add>//handler.endOptions();
tr	del	<del>android/AVD.java<add>android/AVD.java<add>// Tempting to switch to WVGA854 (854x480), the same aspect ratio<add>// (with rounding), as 1920x1080, or 16:9.<mask>* Default virtual device used by Processing, designed to be similar to a<del>* device like the Moto Droid. Uses Android 2.0 APIs, and the screen is set to<del>* WVGA854 (854x480), the same aspect ratio (with rounding), as 1920x1080, or<del>* 16:9.<add>* Default virtual device used by Processing that uses<add>* the Android 2.0.1 API set.<del>"Google Inc.:Google APIs:5");<add>"Google Inc.:Google APIs:6");
tr	add	<del>jpa/SubQueryTest.java<add>jpa/SubQueryTest.java<add><add>@Test<add>public void NotExists(){<add>assertToString("not exists (select 1 from Cat cat)",                        sub().from(cat).notExists());<add>assertToString("not exists (select 1 from Cat cat where cat.weight <add>assertToString("not exists (select 1 from Cat cat where cat.weight <mask>}
tr	del	<del>toolbox/DiskBasedCache.java<add>toolbox/DiskBasedCache.java<mask>private File getFileForKey(String key) {<add>public File getFileForKey(String key) {
tr	add	<del>webkit/WebTextView.java<add>webkit/WebTextView.java<add>if (start <add>Spannable text = (Spannable) getText();<add>int length = text.length();<mask>if (start > length || end > length) return;<del>Selection.setSelection((Spannable) getText(), start, end);<add>Selection.setSelection(text, start, end);
tr	add	<del>fileexplorer/Util.java<mask>fileexplorer/Util.java<del>/*<del>PackageManager pm = context.getPackageManager();<del>PackageInfo info = pm.getPackageArchiveInfo(path, PackageManager.GET_ACTIVITIES);<del>if (info != null) {<del>ApplicationInfo appInfo = info.applicationInfo;<del>Log.d("APKIcon", path+appInfo.uid);<del>if (appInfo.uid != -1){<del>try {<del>return pm.getApplicationIcon(appInfo);<del>} catch (OutOfMemoryError e) {<del>Log.e(LOG_TAG, e.toString());<del>}<del>}<del>else<del>return getApkIcon_fromAPK(context, path);<del>}<del>return null;<del>*/
tr	del	<del>compaction/CompactionStrategyManager.java<add>compaction/CompactionStrategyManager.java<del>List<add>Directories.DataDirectory[] directories = locations.getWriteableLocations();<add>List<mask>Directories.DataDirectory[] directories = locations.getWriteableLocations();<del>
tr	add	<del>parser/ParseDataset.java<mask>parser/ParseDataset.java<add>Value val = DKV.get(chunk);<add>if( val == null ) return;<add>final long len = val.length();<del>Value val = DKV.get(chunk);<del>if( val == null ) return null;<del>old._value += val.length();<add>old._value += len;
tr	add	<del>pdex/JavaTextArea.java<mask>pdex/JavaTextArea.java<del>private int lastX; // previous horizontal positon of the mouse cursor<add>private int lastX; // previous horizontal position of the mouse cursor
tr	del	<mask>editor/IpnbFileEditor.java<add>editor/IpnbFileEditor.java<add>final Document document = getEditor().getDocument();<add>FileDocumentManager.getInstance().saveDocument(document);
tr	del	<del>constants/IncomingConstants.java<add>constants/IncomingConstants.java<del>public static final String ACTION_SUBSCRIBE = "com.battlelancer.seriesguide.api.action.SUBSCRIBE";<del>public static final String EXTRA_SUBSCRIBER_COMPONENT = "com.battlelancer.seriesguide.api.extra.SUBSCRIBER_COMPONENT";<del>public static final String EXTRA_TOKEN = "com.battlelancer.seriesguide.api.extra.TOKEN";<add>String ACTION_SUBSCRIBE = "com.battlelancer.seriesguide.api.action.SUBSCRIBE";<add>String EXTRA_SUBSCRIBER_COMPONENT = "com.battlelancer.seriesguide.api.extra.SUBSCRIBER_COMPONENT";<add>String EXTRA_TOKEN = "com.battlelancer.seriesguide.api.extra.TOKEN";<mask>public static final String ACTION_UPDATE = "com.battlelancer.seriesguide.api.action.UPDATE";<del>public static final String EXTRA_EPISODE = "com.battlelancer.seriesguide.api.extra.EPISODE";<del>public static final String EXTRA_ENTITY_IDENTIFIER = "com.battlelancer.seriesguide.api.extra.ENTITY_IDENTIFIER";<add>String ACTION_UPDATE = "com.battlelancer.seriesguide.api.action.UPDATE";<add>String EXTRA_EPISODE = "com.battlelancer.seriesguide.api.extra.EPISODE";<add>String EXTRA_ENTITY_IDENTIFIER = "com.battlelancer.seriesguide.api.extra.ENTITY_IDENTIFIER";
tr	add	<del>messages/MaxCulMsgHandler.java<add>messages/MaxCulMsgHandler.java<del>/* awaiting ack now */<del>// TODO different behaviour if callback<del>SenderQueueItem qi = new SenderQueueItem();<del>qi.msg = data;<del>qi.expiry = new Date(this.lastTransmit.getTime()+MESSAGE_EXPIRY_PERIOD);<del>this.pendingAckQueue.put(qi.msg.msgCount, qi);<add>if (data.msgType != MaxCulMsgType.ACK)<add>{<add>/* awaiting ack now */<add>// TODO different behaviour if callback<mask>SenderQueueItem qi = new SenderQueueItem();<add>qi.msg = data;<add>qi.expiry = new Date(this.lastTransmit.getTime()+MESSAGE_EXPIRY_PERIOD);<add>this.pendingAckQueue.put(qi.msg.msgCount, qi);<add>}
tr	del	<del>opengl/PGL.java<add>opengl/PGL.java<del>//      System.err.println("Using FBO layer");<del><mask>System.err.println("creating fbo layer");<del>
tr	del	<del>android/AndroidBinaryRule.java<add>android/AndroidBinaryRule.java<del>} else if (!dexSplitMode.isShouldSplitDex()) {<add>} else if (dexSplitMode.isShouldSplitDex()) {<add>// This uses a separate implementation from addDexingSteps.<add>// The differences in the splitting logic are too significant to make it<add>// worth merging them.<add>mergePreDexedArtifactsIntoMultipleDexFiles(preDexDeps,<add>secondaryDexDirectoriesBuilder,<add>steps,<add>dexFile);<add>} else {<add>// For single-dex apps with pre-dexing, we just add the steps directly.<del>} else {<del>// At least initially (and possibly always), the logic for merging pre-dexed artifacts will<mask>// not leverage SmartDexingStep, so mergePreDexedArtifactsIntoMultipleDexFiles() and<del>// addDexingSteps() do not use a common implementation. We hope to use graph-enhancement and<del>// its natural cacheability rather than SmartDexingStep to limit the number of secondary<del>// dex files that we need to rebuild.<del>mergePreDexedArtifactsIntoMultipleDexFiles(preDexDeps,<del>secondaryDexDirectoriesBuilder,<del>steps,<del>dexFile);
tr	add	<del>materialistic/FavoriteActivity.java<mask>materialistic/FavoriteActivity.java<add>recyclerView.setHasFixedSize(true);
tr	add	<del>util/Util.java<add>util/Util.java<del>return bytesToHex(bytes, SHA_256_CHARS);<add>synchronized (SHA_256_CHARS) {<add>return bytesToHex(bytes, SHA_256_CHARS);<mask>}<del>return bytesToHex(bytes, SHA_1_CHARS);<add>synchronized (SHA_1_CHARS) {<add>return bytesToHex(bytes, SHA_1_CHARS);<add>}
tr	del	<mask>core/SaltScanner.java<add>core/SaltScanner.java<del>import java.util.HashSet;<del>private final Set<del>private final Set<add>private final Set<add>private final Set
tr	del	<mask>activity/Accounts.java<add>activity/Accounts.java<del>new String[] {"ActionBarSherlock", "http://actionbarsherlock.com/"}<add>new String[] {"ActionBarSherlock", "http://actionbarsherlock.com/"},<add>new String[] {"Android-PullToRefresh", "https://github.com/chrisbanes/Android-PullToRefresh"}
tr	add	<del>gotoByName/ChooseByNameBase.java<add>gotoByName/ChooseByNameBase.java<add>for (Object elem : elements) {<add>if (elem instanceof PsiElement) {<add>final PsiElement psiElement = (PsiElement)elem;<add>psiElement.isWritable(); // That will cache writable flag in VirtualFile. Taking the action here makes it canceled.<mask>}<add>}
tr	del	<mask>control/CharacterControl.java<add>control/CharacterControl.java<del>* @deprecated in favor of <add>* You might want to try <del>@Deprecated
tr	del	<mask>storage/AzureStorageServiceImpl.java<add>storage/AzureStorageServiceImpl.java<del>client.getDefaultRequestOptions().setTimeoutIntervalInMs(timeout);<add>client.getDefaultRequestOptions().setMaximumExecutionTimeInMs(timeout);
tr	add	<del>power/PowerManagerService.java<add>power/PowerManagerService.java<del>mTemporaryScreenAutoBrightnessAdjustmentSettingOverride = -1;<mask>mTemporaryScreenAutoBrightnessAdjustmentSettingOverride = Float.NaN;<del>return !Float.isNaN(value);<add>// Handles NaN by always returning false.<add>return value >= -1.0f && value 
tr	del	<del>ui/FilteredRecyclerView.java<add>ui/FilteredRecyclerView.java<del>import android.graphics.PorterDuff;<del>import android.graphics.drawable.Drawable;<mask>import android.os.Build;<del>import android.support.v4.content.ContextCompat;<del><del>//changing spinner arrow color to mach custom spinner at ReaderPostListFragment<del>//            Drawable spinnerBackground = mSpinner.getBackground();<del>//            spinnerBackground.setColorFilter(ContextCompat.getColor(getContext(), R.color.grey), PorterDuff.Mode.SRC_ATOP);<del>//            if (Build.VERSION.SDK_INT <del>//                mSpinner.setBackgroundDrawable(spinnerBackground);<del>//            } else {<del>//                mSpinner.setBackground(spinnerBackground);<del>//            }
tr	del	<del>entities/Presences.java<add>entities/Presences.java<mask>String message = presence.getMessage();<del>if (message != null && !message.trim().isEmpty()) {<del>messages.add(message.trim());<add>String message = presence.getMessage() == null ? null : presence.getMessage().trim();<add>if (message != null && !message.isEmpty() && !messages.contains(message)) {<add>messages.add(message);
tr	add	<del>notification/NotificationManagerService.java<add>notification/NotificationManagerService.java<add><add>// Ensure if this is a foreground service that the proper additional<add>// flags are set.<add>if ((notification.flags & Notification.FLAG_FOREGROUND_SERVICE) != 0) {<add>notification.flags |= Notification.FLAG_ONGOING_EVENT<mask>| Notification.FLAG_NO_CLEAR;<add>}<add><add>n.getPackageName());<del>// Ensure if this is a foreground service that the proper additional<del>// flags are set.<del>if ((notification.flags & Notification.FLAG_FOREGROUND_SERVICE) != 0) {<del>notification.flags |= Notification.FLAG_ONGOING_EVENT<del>| Notification.FLAG_NO_CLEAR;<del>}<del>
tr	add	<del>src/HMWorld.java<add>src/HMWorld.java<add>for (Mob mob : etc.getServer().getAnimalList()) {<add>Vector mobPos = new Vector(mob.getX(), mob.getY(), mob.getZ());<add>if (mob.getHealth() > 0<add>&& (radius == -1 || mobPos.distance(origin) <mask>mob.setHealth(0);<add>killed++;<add>}<add>}<add>
tr	add	<del>mathjax/MathJax.java<add>mathjax/MathJax.java<add>import org.rstudio.studio.client.workbench.views.source.editors.text.ace.Token;<add><add>// detect whether start of associated chunk has been destroyed<add>Token token = docDisplay_.getTokenAt(Position.create(plw.getRow() - 1, 0));<mask>if (token != null && !token.hasType("latex"))<add>removeChunkOutputWidget(cow);
tr	del	<mask>core/AbstractModifyDataChange.java<add>core/AbstractModifyDataChange.java<add>@DatabaseChangeProperty(isChangeProperty = false)
tr	add	<del>tests/MipMapTest.java<add>tests/MipMapTest.java<mask>ui.act();
tr	add	<del>collect/Maps.java<add>collect/Maps.java<del>* Internally, the returned set will be backed by an {@link EnumMap}.<mask>* Internally, the returned map will be backed by an {@link EnumMap}.
tr	add	<del>file/FileSystemMaster.java<mask>file/FileSystemMaster.java<del>FileInfo fileInfo = getFileInfoInternal(srcInode);<del>if (!replayed && fileInfo.isPersisted()) {<add>if (!replayed && srcInode.isPersisted()) {
tr	del	<mask>sample/MainActivity.java<add>sample/MainActivity.java<add>i.putExtra(Libs.BUNDLE_TITLE, "Open Source");
tr	del	<del>core/StoredTransactionOutput.java<add>core/StoredTransactionOutput.java<del>import java.io.EOFException;<mask>import java.io.IOException;<del>import java.io.InputStream;<del>import java.io.OutputStream;<del>import java.io.Serializable;<add>import java.io.*;<del>return String.format("Stored TxOut of %s (%s:%l)", Utils.bitcoinValueToFriendlyString(value), hash.toString(), index);<add>return String.format("Stored TxOut of %s (%s:%d)", Utils.bitcoinValueToFriendlyString(value), hash.toString(), index);
tr	add	<del>addins/AddinsCommandManager.java<add>addins/AddinsCommandManager.java<add>import org.rstudio.studio.client.workbench.events.SessionInitEvent;<add>import org.rstudio.studio.client.workbench.events.SessionInitHandler;<add>// load addin bindings on session init<add>events_.addHandler(<add>SessionInitEvent.TYPE,<add>new SessionInitHandler()<add>{<add>@Override<add>public void onSessionInit(SessionInitEvent sie)<add>{<add>loadBindings();<add>}<add>});<add><mask>// set bindings when updated (e.g. through ModifyKeyboardShortcuts widget)<add>// update addin bindings when registry populated
tr	del	<mask>pluggableTask/PluggableTaskBuilderTest.java<add>pluggableTask/PluggableTaskBuilderTest.java<add>when(pluginManager.getPluginDescriptorFor(TEST_PLUGIN_ID)).thenReturn(mock(GoPluginDescriptor.class));
tr	del	<mask>ui/TextIconGenerator.java<add>ui/TextIconGenerator.java<add>default:<del>return getBackground(STYLE_DEFAULT);<add>default:<del>return getTextStyle(STYLE_DEFAULT);
tr	del	<mask>history/SubversionHistoryParser.java<add>history/SubversionHistoryParser.java<del>@Override
tr	del	<mask>http/HttpTransportOverSPDYTest.java<add>http/HttpTransportOverSPDYTest.java<del>httpTransportOverSPDY.send(HttpGenerator.RESPONSE_500_INFO, null,true);<add>httpTransportOverSPDY.send(HttpGenerator.RESPONSE_500_INFO, null,true, new Callback.Adapter());
tr	add	<del>net/Client.java<add>net/Client.java<add>boolean isDisposeRegistered = false;<mask>isDisposeRegistered = true;<add>if(isDisposeRegistered){<add>parent.unregisterMethod("dispose", this);<add>}
tr	add	<del>internal/DefaultSession.java<add>internal/DefaultSession.java<del>entries.remove(key);<del>markDirty();<add>if (entries.remove(key) != null) {<mask>markDirty();<add>}
tr	del	<del>math/Vector3.java<add>math/Vector3.java<del>float len2 = len2();<del>if (len2 > limit * limit) {<mask>scl(limit / (float) Math.sqrt(len2));<del>}<del>return this;<add>return limit2(limit * limit);<del>scl(limit2 / len2);<add>scl((float) Math.sqrt(limit2 / len2));
tr	del	<del>widget/TextView.java<add>widget/TextView.java<mask>Selection.setSelection((Spannable) mText, ss.selStart,<del>ss.selEnd);<add>Selection.setSelection((Spannable) mText, ss.selStart, ss.selEnd);<add>// mEditor may be null if selection is created programatically.<add>createEditorIfNeeded("onSelectionChanged");<add>// Invalidate even when selection range is empty, to remove previous highlight
tr	add	<del>models/LoginRequest.java<add>models/LoginRequest.java<mask>public String getDestination() {<add>return destination;<add>}<add><add>public void setDestination(String destination) {<add>this.destination = destination;<add>}<add><add>public String getUsername() {<add>return username;<add>}<add><add>public void setUsername(String username) {<add>this.username = username;<add>}<add><add>public String getPassword() {<add>return password;<add>}<add><add>public void setPassword(String password) {<add>this.password = password;<add>}<add><add>public boolean isNoStartpage() {<add>return noStartpage;<add>}<add><add>public void setNoStartpage(boolean noStartpage) {<add>this.noStartpage = noStartpage;<add>}
tr	add	<del>xml/XmlPathTest.java<add>xml/XmlPathTest.java<add>public void getNodeChildrenAsListWithTypeNodeReturnsAListOfNodes() throws Exception {<add>final List<add>assertThat(categories.size(), equalTo(3));<add>}<mask><add>@Test
tr	del	<mask>widget/ImageView.java<add>widget/ImageView.java<del>if (mUri != null || mResource != resId) {<del>final int oldWidth = mDrawableWidth;<del>final int oldHeight = mDrawableHeight;<add>// The resource configuration may have changed, so we should always<add>// try to load the resource even if the resId hasn't changed.<add>final int oldWidth = mDrawableWidth;<add>final int oldHeight = mDrawableHeight;<del>updateDrawable(null);<del>mResource = resId;<del>mUri = null;<add>updateDrawable(null);<add>mResource = resId;<add>mUri = null;<del>resolveUri();<add>resolveUri();<del>if (oldWidth != mDrawableWidth || oldHeight != mDrawableHeight) {<del>requestLayout();<del>}<del>invalidate();<add>if (oldWidth != mDrawableWidth || oldHeight != mDrawableHeight) {<add>requestLayout();<add>invalidate();
tr	del	<mask>phone/PhoneStatusBar.java<add>phone/PhoneStatusBar.java<add>mScrollView.setScaleX(0f);
tr	add	<del>plugin/JettyStopMojo.java<mask>plugin/JettyStopMojo.java<del>System.err.printf("Waiting %d seconds for jetty to stop%n",stopWait);<add>getLog().info("Waiting "+stopWait+" seconds for jetty to stop");<del>System.err.println("Server reports itself as Stopped");<add>getLog().info("Server reports itself as stopped");
tr	add	<del>media/MediaBrowserService.java<add>media/MediaBrowserService.java<add>* The root hints are service-specific arguments included in an optional bundle sent to the<mask>* media browser service when connecting and retrieving the root id for browsing, or null if<add>* none. The contents of this bundle may affect the information returned when browsing.<add>* @see MediaBrowserService.BrowserRoot#EXTRA_RECENT<add>* @see MediaBrowserService.BrowserRoot#EXTRA_OFFLINE<add>* @see MediaBrowserService.BrowserRoot#EXTRA_SUGGESTED
tr	add	<del>util/ConnectTraktTask.java<add>util/ConnectTraktTask.java<del>// reset merged movies flag<add>// set last full sync time to now<add>// this will prevent a full sync from running shortly after connecting<add>// and give the user a chance to upload his shows<del>.putBoolean(TraktSettings.KEY_HAS_MERGED_MOVIES, false).commit();<add>.putLong(TraktSettings.KEY_LAST_FULL_SYNC, System.currentTimeMillis())<add>// reset merged movies flag<mask>.putBoolean(TraktSettings.KEY_HAS_MERGED_MOVIES, false)<add>.commit();
tr	del	<mask>http/AsyncHttpRequest.java<add>http/AsyncHttpRequest.java<del>request.abort();<add>new Thread(new Runnable() {<add>@Override<add>public void run() {<add>request.abort();<add>}<add>});
tr	add	<del>base64/Base64.java<add>base64/Base64.java<del>return breakLines(dialect);<mask>return dialect.breakLinesByDefault;
tr	add	<del>databind/DeserializationContext.java<add>databind/DeserializationContext.java<mask>throw mappingException("Could not find JsonDeserializer for type %s", type);<del><add>String propName = (prop == null) ? "NULL" : ("'"+prop.getName()+"'");<add>throw mappingException("Could not find JsonDeserializer for type %s (via property %s)",<add>type, propName);<del><add>
tr	del	<mask>batch/ProjectRepositoryLoader.java<add>batch/ProjectRepositoryLoader.java<del>UserSession.get().checkComponentPermission(UserRole.USER, query.getModuleKey(),<del>"You're not authorized to access to project '" + module.name() + "', please contact your SonarQube administrator.");<add>if (query.isPreview()) {<add>// Scan permission is enough to analyze all projects but preview permission is limited to projects user can access<add>UserSession.get().checkComponentPermission(UserRole.USER, query.getModuleKey(),<add>"You're not authorized to access to project '" + module.name() + "', please contact your SonarQube administrator.");<add>}
tr	del	<mask>router/BinaryRoutePlanner.java<add>router/BinaryRoutePlanner.java<del>private static final boolean TRACE_ROUTING = true;<add>private static final boolean TRACE_ROUTING = false;
tr	add	<del>types/TypeUtils.java<mask>types/TypeUtils.java<del>if (type.isError()) {<del>return type;<del>}
tr	add	<del>provider/Settings.java<mask>provider/Settings.java<del>BACKUP_AUTO_RESTORE,
va	del	<del>container/JSR356Endpoint.java<add>container/JSR356Endpoint.java<add><mask>.queryString(session.getQueryString())<del>.build();<add>.build()<add>.queryString(session.getQueryString());<add><add><add>framework.addInitParameter(ALLOW_QUERYSTRING_AS_REQUEST, "true");<add>
va	add	<del>bolt/KafkaBolt.java<mask>bolt/KafkaBolt.java<del>} catch (Exception ex) {<del>LOG.error("Could not send message with key = " + key<del>+ " and value = " + message + " to topic = " + topic, ex);<del>} finally {<add>} catch (Exception ex) {<add>collector.reportError(ex);<add>collector.fail(input);
va	add	<del>command/AssetFileCommand.java<add>command/AssetFileCommand.java<mask>import info.ata4.unity.asset.VersionInfo;<add>// old asset files don't contain a Unity version string, so copy it<add>// from the bundle header<add>VersionInfo versionInfo = asset.getVersionInfo();<add>if (versionInfo.getAssetVersion() <add>versionInfo.setUnityRevision(getCurrentAssetBundle().getHeader().getUnityRevision());<add>}<add>
va	add	<del>transition/Visibility.java<mask>transition/Visibility.java<add>if (startValues == null) {<add>VisibilityInfo parentVisibilityInfo = null;<add>View endParent = (View) endValues.view.getParent();<add>TransitionValues startParentValues = getMatchedTransitionValues(endParent,<add>false);<add>TransitionValues endParentValues = getTransitionValues(endParent, false);<add>parentVisibilityInfo =<add>getVisibilityChangeInfo(startParentValues, endParentValues);<add>if (parentVisibilityInfo.visibilityChange) {<add>return null;<add>}<add>}
va	del	<mask>servlet/GrailsHttpServletResponse.java<add>servlet/GrailsHttpServletResponse.java<del>import java.io.IOException;<del>import java.io.PrintWriter;<del>import java.util.Locale;<del><add>import java.io.IOException;<add>import java.io.PrintWriter;<add>import java.util.Locale;<del><del>public void setCharacterEncoding(String characterEncoding) {<add><add>public PrintWriter getWriter(String contentType) throws IOException {<add>this.delegate.setContentType(contentType);<add>return this.delegate.getWriter();<add>}<add><add>public void setCharacterEncoding(String characterEncoding) {
va	del	<mask>underfs/UnderFileSystemCluster.java<add>underfs/UnderFileSystemCluster.java<del>protected String mBaseDir;<add>protected final String mBaseDir;
va	add	<del>authentication/WebAuthenticationDetails.java<add>authentication/WebAuthenticationDetails.java<add>import java.io.Serializable;<del>public class WebAuthenticationDetails {<mask>public class WebAuthenticationDetails implements Serializable {
va	del	<mask>coverage/CoverageConfigurable.java<add>coverage/CoverageConfigurable.java<del>import com.intellij.ide.ui.ListCellRendererWrapper;<add>import com.intellij.ui.ListCellRendererWrapper;
va	del	<del>mvc/MvcFramework.java<add>mvc/MvcFramework.java<del>final int result = Messages.showYesNoCancelDialog(module.getProject(),<del>"Create default " + getDisplayName() + " directory structure in module '" + module.getName() + "'?",<mask>"Create " + getDisplayName() + " application", "Run 'create-&app'", "Run 'create-&plugin'", "&Cancel", getIcon());<add>String message = "Create default " + getDisplayName() + " directory structure in module '" + module.getName() + "'?";<add>final int result = Messages.showDialog(module.getProject(), message,<add>"Create " + getDisplayName() + " application",<add>new String[]{"Run 'create-&app'", "Run 'create-&plugin'", "&Cancel"}, 0, getIcon());
va	add	<del>linkloader/WebReaderOverlayView.java<add>linkloader/WebReaderOverlayView.java<add>mLoadingState = LoadingState.Loaded;<add>mContentView.setVisibility(View.VISIBLE);<add>mLoadingView.setVisibility(View.INVISIBLE);<mask><add>updateViewLayout();<add><add>WebReaderOverlayService.mInstance.cancelNotification();<add><add>/*<add>*/
va	del	<mask>metadata/SchemaDao.java<add>metadata/SchemaDao.java<del>"  temporal_column_id BIGINT DEFAULT NULL,\n" +<add>"  temporal_column_id BIGINT,\n" +<del>"  sort_ordinal_position INT DEFAULT NULL,\n" +<add>"  sort_ordinal_position INT,\n" +
va	del	<mask>build/KotlinBuilder.java<add>build/KotlinBuilder.java<del>messageCollector.report(INFO, "Kotlin JPS plugin version " + KotlinVersion.VERSION, NO_LOCATION);<add>if (hasKotlinFiles(chunk)) {<add>messageCollector.report(INFO, "Kotlin JPS plugin version " + KotlinVersion.VERSION, NO_LOCATION);<add>}
va	del	<mask>outputs/GelfOutput.java<add>outputs/GelfOutput.java<del>LOG.error("Error closing {}", gelfSender.getClass().getName(), e);<add>LOG.error("Error closing " + gelfSender.getClass().getName(), e);
va	del	<del>support/UaaIntegration.java<add>support/UaaIntegration.java<mask>private static final String MESSAGE = "Grails wants to send information to VMware domains to improve your experience. We include anonymous usage information as part of these downloads.\n"<add>private static final String MESSAGE = "##########################################################.\n"<add>+ "Grails would like to send information to VMware domains to improve your experience. We include anonymous usage information as part of these downloads.\n"<add>"\n"<add>"The Grails team gathers anonymous usage information to improve your Grails experience, not for marketing purposes. The information is used to discover which Grails plugins are most popular and is published on the plugin portal.\n"<add>"\n"<add>"Please see the Grails User Agent Analysis (UAA) Terms of Use at http://www.springsource.org/uaa/terms_of_use for more information on what information is collected and how such information is used. There is also an FAQ at http://www.springsource.org/uaa/faq for your convenience.\n"<add>"\n"<add>"To consent to the Terms of Use, please enter 'Y'. Enter 'N' to indicate your do not consent and anonymous data collection will remain disabled.\n"<add>+ "##########################################################.\n"<add>"Enter Y or N:";
va	del	<mask>db/IssueFilterDto.java<add>db/IssueFilterDto.java<del>public Boolean isShared() {<add>public boolean isShared() {<del>public IssueFilterDto setShared(@Nullable Boolean shared) {<add>public IssueFilterDto setShared(boolean shared) {
va	del	<del>util/Log.java<add>util/Log.java<mask>private static Level level;<add>private static Level level = Level.VERBOSE;
va	del	<mask>storm/Config.java<add>storm/Config.java<del>public static String STORM_MESSAGING_NETTY_BUFFER_SIZE = "storm.messaging.netty.buffer_size";<add>public static final String STORM_MESSAGING_NETTY_BUFFER_SIZE = "storm.messaging.netty.buffer_size";<del>public static String STORM_MESSAGING_NETTY_MAX_RETRIES = "storm.messaging.netty.max_retries";<add>public static final String STORM_MESSAGING_NETTY_MAX_RETRIES = "storm.messaging.netty.max_retries";<del>public static String STORM_MESSAGING_NETTY_MIN_SLEEP_MS = "storm.messaging.netty.min_wait_ms";<add>public static final String STORM_MESSAGING_NETTY_MIN_SLEEP_MS = "storm.messaging.netty.min_wait_ms";<del>public static String STORM_MESSAGING_NETTY_MAX_SLEEP_MS = "storm.messaging.netty.max_wait_ms";<add>public static final String STORM_MESSAGING_NETTY_MAX_SLEEP_MS = "storm.messaging.netty.max_wait_ms";
va	add	<del>session/HiveSessionImpl.java<mask>session/HiveSessionImpl.java<add>sessionState.resetThreadName();<add>sessionState.resetThreadName();
va	add	<del>config/GroovyConfigUtils.java<mask>config/GroovyConfigUtils.java<del>@NonNls private static final Pattern GROOVY_ALL_JAR_PATTERN = Pattern.compile("groovy-all-(\\d.*)\\.jar");<add>@NonNls private static final Pattern GROOVY_ALL_JAR_PATTERN = Pattern.compile("groovy-all-(.*)\\.jar");
va	del	<del>pool/DataSourceFactory.java<add>pool/DataSourceFactory.java<mask><add>//initialize the pool itself<add>dataSource.createPool();
va	add	<del>lang/ExpandoMetaClass.java<add>lang/ExpandoMetaClass.java<del>if(Character.isUpperCase(prop.charAt(0)) && Character.isUpperCase(prop.charAt(1))) {<add>if(Character.isUpperCase(prop.charAt(0)) && (prop.length() > 1 && Character.isUpperCase(prop.charAt(1)))) {<del>return Character.toLowerCase(prop.charAt(0)) + prop.substring(1);<mask>return Character.toLowerCase(prop.charAt(0)) + (prop.length() > 1 ? prop.substring(1) : "");
va	add	<del>tcp/XMPPTCPConnection.java<add>tcp/XMPPTCPConnection.java<del>LOGGER.log(Level.WARNING, "NoResponseException", e);<add>LOGGER.log(Level.WARNING, "shutdownDone was not marked as successful by the writer thread", e);<mask>LOGGER.fine("Reporting shutdownDone success in writer thread");
va	del	<del>regexp/RegExpDocumentationProvider.java<add>regexp/RegExpDocumentationProvider.java<add>final String description = stringArray.length > 1 ? stringArray[1] : stringArray[0];<mask>return "Property block stands for characters not matching " + stringArray[1];<add>return "Property block stands for characters not matching " + description;<del>return "Property block stands for " + "" + stringArray[1];<add>return "Property block stands for " + description;
va	del	<mask>adapters/PhotosBaseAdapter.java<add>adapters/PhotosBaseAdapter.java<del>layout.setChecked(true);
va	add	<del>sse/ServerSentEventTestCase.java<add>sse/ServerSentEventTestCase.java<del>IoUtils.safeClose(connection);<mask>connection.shutdown();
va	add	<del>rules/ExpectedException.java<add>rules/ExpectedException.java<del>public ExpectedException setMissingExceptionMessage(String providedMessage) {<mask>public ExpectedException reportMissingExceptionWithMessage(String providedMessage) {
va	add	<del>util/NavigationItemListCellRenderer.java<add>util/NavigationItemListCellRenderer.java<mask>import com.intellij.openapi.diagnostic.Logger;<add>private static final Logger LOG = Logger.getInstance("#com.intellij.ide.util.NavigationItemListCellRenderer");<add><add>assert presentation != null: "PSI elements displayed in choose by name lists must return a non-null value from getPresentation()";
va	add	<del>am/ActivityStackSupervisor.java<mask>am/ActivityStackSupervisor.java<del>setLockTaskModeLocked(null);
va	add	<del>mongodb/AbstractMongoDbTest.java<add>mongodb/AbstractMongoDbTest.java<del>import com.mongodb.*;<mask><add>import com.mongodb.DB;<add>import com.mongodb.DBCollection;<add>import com.mongodb.DBObject;<add>import com.mongodb.Mongo;<add>import com.mongodb.WriteConcern;
va	del	<del>zookeeper/ZooClient.java<add>zookeeper/ZooClient.java<mask>storeId = new StoreId();<del>createCluster( storeId );<del>rootPath = asRootPath( storeId );<del>committedTx = 1;<add>StoreId storeIdSuggestion = NeoStoreUtil.storeExists( getGraphDb().getStoreDir() ) ?<add>new NeoStoreUtil( getGraphDb().getStoreDir() ).asStoreId() : new StoreId();<add>storeId = createCluster( storeIdSuggestion );<add>makeSureRootPathIsFound();
va	add	<del>blurdialogfragment/FastBlurHelper.java<add>blurdialogfragment/FastBlurHelper.java<add>public static Bitmap doBlur(Bitmap sentBitmap, int radius, boolean canReuseInBitmap) {<add>return doBlur(sentBitmap, radius, canReuseInBitmap, false, null);<add>}<add><add>/**<mask>* blur a given bitmap<add>*<add>* @param sentBitmap       bitmap to blur<add>* @param radius           blur radius<add>* @param canReuseInBitmap true if bitmap must be reused without blur<add>* @param useRenderScript  true if should use RenderScript<add>* @param context          used by RenderScript, can be null if RenderScript disabled<add>* @return blurred bitmap<add>*/
va	del	<mask>socnet/Person.java<add>socnet/Person.java<del>import org.neo4j.graphdb.traversal.Uniqueness;<add>import org.neo4j.kernel.Uniqueness;
va	add	<del>util/StateMachineTest.java<add>util/StateMachineTest.java<add>import android.test.suitebuilder.annotation.Suppress;<mask>@Suppress // Failing
va	add	<del>blobstore/AzureBlobContainer.java<add>blobstore/AzureBlobContainer.java<del>public boolean deleteBlob(String blobName) throws IOException {<mask>public void deleteBlob(String blobName) throws IOException {<del>return true;
va	del	<mask>reader/ReaderCommentListActivity.java<add>reader/ReaderCommentListActivity.java<del>import android.content.ServiceConnection;
va	add	<del>math/Vector3.java<add>math/Vector3.java<del>if (x == 0 && y == 0 && z == 0)<add>float len = this.len();<add>if(len == 0) {<del>else<del>return this.div(this.len());<add>} else {<mask>return this.div(len);<add>}
va	add	<del>statusbar/ActivatableNotificationView.java<mask>statusbar/ActivatableNotificationView.java<add>} else if (onFinishedRunnable != null) {<add>onFinishedRunnable.run();
va	del	<del>status/StatusPanel.java<add>status/StatusPanel.java<mask>if (myLogMode) {<add>if (alarm != null) {<add>}<add>if (myLogMode) {
va	del	<del>http/NettyHttpEndpoint.java<add>http/NettyHttpEndpoint.java<mask>import org.apache.camel.converter.IOConverter;
va	add	<del>shadows/ShadowContext.java<add>shadows/ShadowContext.java<mask>public File getCacheDir() {<add>// todo: clean this up when tests finish? [xw 20110124]<add>File file = new File(System.getProperty("java.io.tmpdir"), "android-cache");<add>file.mkdirs();<add>return file;<add>}<add><add>@Implementation
va	del	<mask>client/GuiIngameForge.java<add>client/GuiIngameForge.java<add>GL11.glEnable(GL11.GL_BLEND);<add>GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);<add>GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
va	del	<del>pipeline/StanfordCoreNLP.java<add>pipeline/StanfordCoreNLP.java<mask>OutputStream fos = new BufferedOutputStream(new FileOutputStream(outputFilename))<add>OutputStream fos = new BufferedOutputStream(new FileOutputStream(outputFilename));<del>//        System.err.println(">>>> " + outputFormat);;<del>public static void main(String[] args) throws IOException, ClassNotFoundException //{<del>try //{<del>Thread.sleep(10000)//;<del>} catch (InterruptedException ie) //{<del>return//;<del>}<add>public static void main(String[] args) throws IOException, ClassNotFoundException {
va	del	<del>auth/SimpleAuthenticator.java<add>auth/SimpleAuthenticator.java<del>// note we keep the message here and for other authorization problems exactly the same to prevent attackers from guessing what keyspaces are valid<del>if (null == props.getProperty(keyspace)) throw new AuthorizationException(authorizationErrorMessage(keyspace, username));<add>// note we keep the message here and for other authorization problems exactly the same to prevent attackers<add>// from guessing what keyspaces are valid<add>if (null == props.getProperty(keyspace))<add>throw new AuthorizationException(authorizationErrorMessage(keyspace, username));<add><mask>catch (Exception e)<del>{<del>throw new RuntimeException("Unexpected authorization problem", e);<del>}
va	add	<del>servlets/WebdavServlet.java<add>servlets/WebdavServlet.java<mask>import java.security.MessageDigest;<add>/**<add>* @deprecated Unused. Will be removed in Tomcat 9.0.x onwards.<add>*/<add>@Deprecated<add>protected static MessageDigest md5Helper;<add><add>
va	del	<del>generator/MessageGenerator.java<add>generator/MessageGenerator.java<add>packet.setAxolotlMessage(axolotlMessage.toElement());<mask>packet.setAxolotlMessage(axolotlMessage.toElement());
va	add	<del>stream/LongStreamDwrf.java<add>stream/LongStreamDwrf.java<del>vector[i] = Ints.checkedCast(next());<mask>vector[i] = next();
va	add	<del>client/XmlRpcClient.java<add>client/XmlRpcClient.java<del>xmlRpcConnections.get(hmInterface).init("", hmInterface.toString());<mask>xmlRpcConnections.get(hmInterface).init(config.getXmlRpcCallbackUrl(), "");
va	del	<del>commands/JedisClusterCommands.java<add>commands/JedisClusterCommands.java<mask>ScanResult<del>
va	del	<del>routing/RoutingHelper.java<add>routing/RoutingHelper.java<mask>lastFixedLocation = TargetPoint.create(settings.getPointToStart(), settings.getStartPointDescription());<add>if (settings.getPointToStart() != null) {<add>lastFixedLocation.setLatitude(settings.getPointToStart().getLatitude());<add>lastFixedLocation.setLongitude(settings.getPointToStart().getLongitude());<add>}
va	del	<mask>userSkeletons/PyUserSkeletonsUtil.java<add>userSkeletons/PyUserSkeletonsUtil.java<del>import com.intellij.openapi.vfs.LocalFileSystem;<add>import com.intellij.openapi.vfs.StandardFileSystems;<del>ourUserSkeletonsDirectory = LocalFileSystem.getInstance().findFileByPath(path);<add>ourUserSkeletonsDirectory = StandardFileSystems.local().findFileByPath(path);
va	del	<del>spec/ServletContextImpl.java<add>spec/ServletContextImpl.java<mask>if (sessionTrackingModes.contains(SessionTrackingMode.COOKIE) || sessionTrackingModes.contains(SessionTrackingMode.URL)) {<add>if (sessionTrackingModes.contains(SessionTrackingMode.COOKIE) && sessionTrackingModes.contains(SessionTrackingMode.URL)) {
va	add	<del>routing/RouteCalculationResult.java<add>routing/RouteCalculationResult.java<del>RouteDirectionInfo info = new RouteDirectionInfo(1, TurnType.valueOf(type, false));<mask>// AvgSpeed = 999999 for the last turn prevents the turn to have noticeable impact on travel time totalling if calculated route ends on a GPX route segment<add>RouteDirectionInfo info = new RouteDirectionInfo(999999, TurnType.valueOf(type, false));
va	del	<mask>ultimaterecyclerview/UltimateViewAdapter.java<add>ultimaterecyclerview/UltimateViewAdapter.java<add>if (customHeaderView != null) {<add>from--;<add>to--;<add>}
va	del	<del>task/HadoopIndexTask.java<add>task/HadoopIndexTask.java<del>import io.druid.indexer.hadoop.DatasourceIngestionSpec;<del>import io.druid.indexing.common.actions.SegmentListUsedAction;<del>import java.io.IOException;<del>import java.util.Map;<mask>*             <add>*             <del>new OverlordActionBasedUsedSegmentLister(toolbox));<add>new OverlordActionBasedUsedSegmentLister(toolbox)<add>);
va	del	<del>context/SecurityContextImpl.java<add>context/SecurityContextImpl.java<mask>sb.append(": Authentication: " + this.authentication);<add>sb.append(": Authentication: ").append(this.authentication);
va	add	<del>block/BlockMasterTest.java<add>block/BlockMasterTest.java<add>import org.junit.After;<add>@After<add>public void after() throws Exception {<add>mMaster.stop();<add>}<mask>
va	add	<del>dozer/DozerProducer.java<add>dozer/DozerProducer.java<del>Class<mask>Class
va	add	<del>breakpoints/XBreakpointManager.java<add>breakpoints/XBreakpointManager.java<add>@Nullable<mask>
va	add	<del>gitblit/DownloadZipServlet.java<add>gitblit/DownloadZipServlet.java<del>import java.net.SocketException;<del>} catch (SocketException t) {<mask>} catch (IOException t) {
va	del	<del>packet/Presence.java<add>packet/Presence.java<del>* Returns the mode of the presence update, or <mask>* A null presence mode value is interpreted to be the same thing as<del>* {@link Presence.Mode#available}.<add>* Returns the mode of the presence update.<add>if (mode == null) {<add>return Mode.available;<add>}
va	add	<del>config/ConfigResolverTest.java<add>config/ConfigResolverTest.java<add>import org.junit.Before;<add><add>@Before<add>public void init()<add>{<add>ProjectStageProducer.setProjectStage(ProjectStage.UnitTest);<mask>}<add>
va	add	<del>server/BootReceiver.java<add>server/BootReceiver.java<del>LOG_SIZE, "SYSTEM_LAST_KMSG");<add>addFileToDropBox(db, prefs, headers, "/sys/fs/pstore/console-ramoops",<add>-LOG_SIZE, "SYSTEM_LAST_KMSG");<del>LOG_SIZE, "SYSTEM_RECOVERY_LOG");<mask>if (fileTime <add>file = new File("/sys/fs/pstore/console-ramoops");<add>fileTime = file.lastModified();<add>}<add>
va	add	<del>resumable/ResumableDownloadTest.java<add>resumable/ResumableDownloadTest.java<del>@Test(groups = "standalone")<mask>@Test(groups = "standalone", enabled = false)
va	add	<del>boot/SpringApplication.java<mask>boot/SpringApplication.java<del>* @see #printDefaultBanner()
va	del	<del>internal/ServerRegistry.java<add>internal/ServerRegistry.java<mask>baseRegistryBuilder.add(configObject.getType(), configObject.getObject());<add>baseRegistryBuilder.add(configObject.getTypeToken(), configObject.getObject());
va	add	<del>lang/ELSupport.java<mask>lang/ELSupport.java<del>type.equals(obj.getClass())) {<add>(obj != null && type.equals(obj.getClass()))) {
va	del	<del>pool/HikariPool.java<add>pool/HikariPool.java<mask>private static final long ALIVE_BYPASS_WINDOW_MS = Long.getLong("com.zaxxer.hikari.aliveBypassWindow", TimeUnit.SECONDS.toMillis(1));<add>private static final long ALIVE_BYPASS_WINDOW_MS = Long.getLong("com.zaxxer.hikari.aliveBypassWindowMs", TimeUnit.MILLISECONDS.toMillis(500));
va	del	<mask>app/SharingReceiverSupport.java<add>app/SharingReceiverSupport.java<del>Log.e(TAG, "File not found from share: " + e);<add>Log.e(TAG, "File not found from share.", e);<add>} catch (IOException e) {<add>Log.d(TAG, "I/O Error", e);
va	del	<mask>elonen/NanoHTTPD.java<add>elonen/NanoHTTPD.java<del>* Pass a .jks resource with your certificate and passphrase<add>* Pass a KeyStore resource with your certificate and passphrase<del>KeyStore keystore = KeyStore.getInstance("JKS");<add>KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());
va	del	<del>res/StyleData.java<add>res/StyleData.java<del>Attribute attribute = items.get(resName);<del><del>// yuck. hack to work around library package remapping<del>if (attribute == null && !"android".equals(resName.packageName)) {<del>attribute = items.get(resName.withPackageName(packageName));<del>if (attribute != null && (!"android".equals(attribute.contextPackageName))) {<mask>attribute = new Attribute(resName, attribute.value, resName.packageName);<del>}<del>}<del>return attribute;<add>return items.get(resName);
va	add	<del>activity/MessageView.java<add>activity/MessageView.java<del>if (mMessageReferences == null) {<mask>if (mMessageReferences != null) {
va	add	<del>util/LruCache.java<add>util/LruCache.java<add>* Sets the size of the cache.<mask>*<add>* @param maxSize The new maximum size.<add>*/<add>public void resize(int maxSize) {<add>if (maxSize <add>throw new IllegalArgumentException("maxSize <add>}<add><add>synchronized (this) {<add>this.maxSize = maxSize;<add>}<add>trimToSize(maxSize);<add>}<add><add>/**<del>* Returns the number of times {@link #get} returned a value.<add>* Returns the number of times {@link #get} returned a value that was<add>* already present in the cache.
va	del	<mask>cast/CastManager.java<add>cast/CastManager.java<del>// long mediaDurationLeft = getMediaTimeRemaining();<del>//startReconnectionService(mediaDurationLeft);<del>//stopReconnectionService();
va	del	<del>debugger/PyDebugProcess.java<add>debugger/PyDebugProcess.java<del><del>System.out.println("Stopped:" + position.getFile() + ", " + position.getLine());<del>System.out.println("Registered:");<mask>for (PySourcePosition s: myRegisteredBreakpoints.keySet()) {<del>System.out.println(s.getFile() + ", " + s.getLine());<del>}<del>
va	add	<del>impl/DefaultCamelContext.java<add>impl/DefaultCamelContext.java<del>InputStream inputStream = getClassResolver().loadResourceAsStream(path);<add>ClassResolver resolver = getClassResolver();<mask>InputStream inputStream = resolver.loadResourceAsStream(path);<add>log.debug("Loading component documentation for: {} using class resolver: {} -> {}", new Object[]{componentName, resolver, inputStream});
va	del	<del>transport/TransportClientNodesService.java<add>transport/TransportClientNodesService.java<mask>HashSet<add>HashSet
va	add	<del>db/DB2DB.java<add>db/DB2DB.java<add>alterSql = StringUtil.trim(alterSql);<mask>
va	add	<del>catalog/CatalogUpdater.java<add>catalog/CatalogUpdater.java<del>for (final Product input : catalog.getCurrentProducts()) {<del>if (input.getName().equals(productName)) {<del>return input;<del>}<add>try {<add>return catalog.findCurrentProduct(productName);<add>} catch (final CatalogApiException e) {<mask>return null;<del>return null;<del>for (final Plan input : catalog.getCurrentPlans()) {<del>if (input.getName().equals(planName)) {<del>return input;<del>}<add>try {<add>return catalog.findCurrentPlan(planName);<add>} catch (CatalogApiException e) {<add>return null;<del>return null;
va	del	<del>conflictResolvers/JavaMethodsConflictResolver.java<add>conflictResolvers/JavaMethodsConflictResolver.java<del>PsiSubstitutor substitutor = info.getSubstitutor();<del>PsiMethod method = ((MethodCandidateInfo)info).getElement();<del><del>Iterator<del>while (li.hasNext()) {<del>PsiTypeParameter typeParameter = li.next();<mask>PsiType type = substitutor.substitute(typeParameter);<del>if (type == null) continue;<del>for (PsiClassType bound : typeParameter.getExtendsListTypes()) {<del>if (!TypeConversionUtil.isAssignable(type, bound)) return false;<del>}<del>}<del>return true;<add>return ((MethodCandidateInfo)info).isApplicable();
va	add	<del>status/ToolWindowsWidget.java<mask>status/ToolWindowsWidget.java<del>final RelativePoint point = new RelativePoint(c, new Point(-4, -4 - size.height));<add>final Insets padding = UIUtil.getListViewportPadding();<add>final RelativePoint point = new RelativePoint(c, new Point(-4, -padding.top - padding.bottom -4 - size.height));<add>.setRequestFocus(false)
va	add	<del>testing/HeliosDeploymentResource.java<add>testing/HeliosDeploymentResource.java<del>protected void before() throws Throwable {<add>public void before() throws Throwable {<del>protected void after() {<mask>public void after() {
va	del	<del>security/SecurityClassLoad.java<add>security/SecurityClassLoad.java<mask>"core.ApplicationHttpRequest$AttributeNamesEnumerator");<add>"ApplicationHttpRequest$AttributeNamesEnumerator");
va	add	<del>android/AbstractAndroidMojo.java<add>android/AbstractAndroidMojo.java<del>getLog().error(executor.getStandardError());<mask>String errout = executor.getStandardError();<add>if ((errout != null) && (errout.trim().length() > 0)) {<add>getLog().error(errout);<add>}
va	del	<mask>sound/SoundFactory.java<add>sound/SoundFactory.java<add>import java.io.FileDescriptor;<add>public static Sound createSoundFromFileDescriptor(final SoundManager pSoundManager, final FileDescriptor pFileDescriptor, final long pOffset, final long pLength) throws IOException {<add>final int soundID = pSoundManager.getSoundPool().load(pFileDescriptor, pOffset, pLength, 1);<add>final Sound sound = new Sound(pSoundManager, soundID);<add>pSoundManager.add(sound);<add>return sound;<add>}<add>
va	add	<del>distance/CosineDistanceMeasure.java<add>distance/CosineDistanceMeasure.java<del>double dotProduct = v1.dot(v2);<mask>double dotProduct = v2.dot(v1);<del>double dotProduct = centroid.dot(v);<add>double dotProduct = v.dot(centroid);
va	del	<mask>mapping/Mapper.java<add>mapping/Mapper.java<del>String id = dbObject.get(ID_KEY).toString();<del>Key key = new Key(entity.getClass(), id);<add>Key key = new Key(entity.getClass(), dbObject.get(ID_KEY));
va	add	<del>function/OFunction.java<add>function/OFunction.java<del>import java.util.HashMap;<add>import java.util.LinkedHashMap;<del>args = new HashMap<mask>args = new LinkedHashMap
va	del	<mask>runner/OutputLineSplitter.java<add>runner/OutputLineSplitter.java<del>final boolean isTCLikeFakeOutput = chunks.size() == 1;<del>onLineAvailable(chunk.getText(), chunk.getKey(), isTCLikeFakeOutput);<add>onLineAvailable(chunk.getText(), chunk.getKey(), false);
va	add	<del>popup/ComponentPopupBuilderImpl.java<add>popup/ComponentPopupBuilderImpl.java<add>import com.intellij.openapi.application.ApplicationManager;<mask>import com.intellij.openapi.util.Disposer;<add>//default disposable parent<add>Disposer.register(ApplicationManager.getApplication(), popup);
va	del	<del>authorization/AuthorizationRequestedDialog.java<add>authorization/AuthorizationRequestedDialog.java<mask>this.getRootPane().setDefaultButton(acceptButton);
va	add	<del>parser/Parser.java<mask>parser/Parser.java<del>if (_jobKey != null) {<del>Job.update(_setup._chunk_size, _jobKey);<del>if (((Job)DKV.getGet(_jobKey)).isCancelledOrCrashed())<del>break;<del>}<add>if (_jobKey != null && ((Job)DKV.getGet(_jobKey)).isCancelledOrCrashed()) break;
va	del	<del>common/Mark.java<add>common/Mark.java<del>import com.intellij.openapi.editor.Editor;<del>public int getOffset(Editor editor)<del>{<del>return 0;<mask>}<del>
va	del	<del>ui/OverviewFragment.java<add>ui/OverviewFragment.java<del>if (getShowId() != 0) {<add>if (getShowId() == 0) {<mask>return getArguments().getInt(Shows._ID);<add>return getArguments().getInt(InitBundle.SHOW_TVDBID);
va	del	<del>resources/MembershipResource.java<add>resources/MembershipResource.java<del>* @return HTTP response<del>* @return HTTP response<mask>* @return HTTP response<del>* @return HTTP response
va	del	<mask>operation/QueryOperation.java<add>operation/QueryOperation.java<del>// TODO: special
va	del	<del>databind/ObjectMapper.java<add>databind/ObjectMapper.java<mask>* @param schema JsonSchema to pass to generator<add>* @param schema Schema to pass to generator
va	add	<del>impl/EmbeddedConfigGraphBuilderImpl.java<mask>impl/EmbeddedConfigGraphBuilderImpl.java<del>graph.setEmbeddedPreferences(props);<add>graph.embeddedPreferences = props;
va	add	<del>internal/DefaultConfigData.java<add>internal/DefaultConfigData.java<add>import ratpack.server.ServerConfig;<del>reloadInformant.onStart(event);<add>ServerConfig serverConfig = event.getRegistry().get(ServerConfig.class);<mask>if (serverConfig.isDevelopment()) {<add>reloadInformant.onStart(event);<add>}<del>reloadInformant.onStop(event);<add>ServerConfig serverConfig = event.getRegistry().get(ServerConfig.class);<add>if (serverConfig.isDevelopment()) {<add>reloadInformant.onStop(event);<add>}
va	add	<del>reactive/ReactorClientHttpConnector.java<mask>reactive/ReactorClientHttpConnector.java<del>return reactor.io.netty.http.HttpClient.create(uri.getHost(), uri.getPort())<add>return reactor.io.netty.http.HttpClient.create(uri.toString())
va	add	<del>mock/MockOperationSetBasicTelephony.java<add>mock/MockOperationSetBasicTelephony.java<add><add>// must have one participant<mask>MockCallParticipant callPArt =<add>(MockCallParticipant)newCall.getCallParticipants().next();<add><add>callPArt.setState(CallParticipantState.ALERTING_REMOTE_SIDE, "no reason");<add>callPArt.setState(CallParticipantState.CONNECTED, "no reason");<add><del>return new MockCallParticipant(address, (MockCall)call);<add>MockCallParticipant callPArt = new MockCallParticipant(address, (MockCall)call);<add><add>callPArt.setState(CallParticipantState.ALERTING_REMOTE_SIDE, "no reason");<add>callPArt.setState(CallParticipantState.CONNECTED, "no reason");<add><add>return callPArt;
va	add	<del>ui/EditAccountActivity.java<add>ui/EditAccountActivity.java<mask>mAccountJid.setError(null);<add>mPasswordConfirm.setError(null);<add>} else {<add>this.mAccountJid.setError(null);
va	add	<del>matcher/GlobalMatchingVisitor.java<add>matcher/GlobalMatchingVisitor.java<del>private MatchingHandler myLastHandler;<del><del>private Map<mask>private final Map<del>myLastHandler = matchContext.getPattern().getHandler(nodes.current());<del>return myLastHandler.matchSequentially(<add>return matchContext.getPattern().getHandler(nodes.current()).matchSequentially(
va	add	<del>location/ActivityRecognitionProxy.java<add>location/ActivityRecognitionProxy.java<add>if (mInstance == null) {<add>// to keep backwards compatibility do not update the watcher when there is no<add>// instance available, or it will cause an NPE<mask>Log.d(TAG, "AR HW instance not available, binding will be a no-op.");<add>return;<add>}
va	del	<del>reporting/GraphiteReporter.java<add>reporting/GraphiteReporter.java<mask>final String name = "jvm.gc." + entry.getKey();<add>final String name = "jvm.gc." + sanitizeString(entry.getKey());
va	del	<del>group/RpcChannel.java<add>group/RpcChannel.java<del>/**<del>* @deprecated  Unused - will be removed in Tomcat 8.0.x<del>*/<del>@Deprecated<del>public final long timeout;<del><del>/**<del>* @deprecated  Use {@link RpcCollector#RpcCollector(RpcCollectorKey,<del>*              int, int)}<del>*/<del>@Deprecated<del>public RpcCollector(RpcCollectorKey key, int options, int destcnt,<del>long timeout) {<add><add>public RpcCollector(RpcCollectorKey key, int options, int destcnt) {<del>this.timeout = timeout;<del>}<del><mask>public RpcCollector(RpcCollectorKey key, int options, int destcnt) {<del>this(key, options, destcnt, 0);
va	del	<del>decorators/SerializedCache.java<add>decorators/SerializedCache.java<del>ObjectInputStream ois = new ThreadContextObjectInputStream(bis);<add>ObjectInputStream ois = new CustomObjectInputStream(bis);<del>public static class ThreadContextObjectInputStream extends ObjectInputStream {<add>public static class CustomObjectInputStream extends ObjectInputStream {<mask>public ThreadContextObjectInputStream(InputStream in) throws IOException {<add>public CustomObjectInputStream(InputStream in) throws IOException {
va	add	<del>matcher/LatentMatcher.java<add>matcher/LatentMatcher.java<add>/**<mask>* A latent matcher where the field token is being attached to the instrumented type before matching.<add>*/<add>/**<add>* A token representing the field being matched.<add>*/<add>/**<add>* Creates a new latent matcher for a field token.<add>*<add>* @param token A token representing the field being matched.<add>*/<add>/**<add>* A latent matcher where the method token is being attached to the instrumented type before matching.<add>*/<add>/**<add>* A token representing the method being matched.<add>*/<add>/**<add>* Creates a new latent matcher for a method token.<add>*<add>* @param token A token representing the method being matched.<add>*/
va	add	<del>http/CookieDecoderTest.java<add>http/CookieDecoderTest.java<add>public void testDecodingValuesWithCommasAndEquals() {<add>String src = "A=v=1&lg=en-US,it-IT,it&intl=it&np=1;T=z=E";<add>Set<add>Iterator<add>Cookie c = i.next();<mask>assertEquals("A", c.getName());<add>assertEquals("v=1&lg=en-US,it-IT,it&intl=it&np=1", c.getValue());<add>c = i.next();<add>assertEquals("T", c.getName());<add>assertEquals("z=E", c.getValue());<add>}<add><add>@Test
va	add	<del>impl/ViewFetcher.java<add>impl/ViewFetcher.java<add><add>/**<add>* Returns a {@code View} with a given id.<add>* @param id the R.id of the {@code View} to be returned<add>* @return a {@code View} with a given id<add>*/<add><add>public View getView(int id){<mask>final Activity activity = activityUtils.getCurrentActivity(false);<add>return activity.findViewById(id);<add>}
va	del	<mask>impl/ToolWindowImpl.java<add>impl/ToolWindowImpl.java<del>LOG.warn("ToolWindow icons should be 13x13. Please fix " + icon);<add>LOG.warn("ToolWindow icons should be 13x13. Please fix ToolWindow (ID:  " + getId() + ") or icon " + icon);
va	del	<del>impl/PhoneWindowManager.java<add>impl/PhoneWindowManager.java<mask>if (attrs.type >= WindowManager.LayoutParams.FIRST_APPLICATION_WINDOW<del>&& attrs.type <del>&& !inheritTranslucentDecor) {<add>final boolean isAppWindow =<add>attrs.type >= WindowManager.LayoutParams.FIRST_APPLICATION_WINDOW &&<add>attrs.type <add>final boolean topAtRest =<add>win == mTopFullscreenOpaqueWindowState && !win.isAnimatingLw();<add>if (isAppWindow && !inheritTranslucentDecor && !topAtRest) {
va	del	<del>android/WPCOMReaderImpl.java<add>android/WPCOMReaderImpl.java<add><add>if (url.contains("chrome=no")) {<add>loadDetailListener.onLoadDetail();<add>}<del>if (url.contains("chrome=no")) {<mask>loadDetailListener.onLoadDetail();<del>}
va	del	<mask>builders/BlockPathMarker.java<add>builders/BlockPathMarker.java<add>activeMarker = par1IconRegister.registerIcon("buildcraft:blockPathMarkerActive");
va	add	<del>vcs/VcsKey.java<add>vcs/VcsKey.java<add><add>@Override<mask>public String toString() {<add>return myName;<add>}
va	del	<mask>ui/WebServicesView.java<add>ui/WebServicesView.java<add>initializeTaskRabbit();
va	add	<del>app/Instrumentation.java<add>app/Instrumentation.java<mask>// We have to change the time of an event before injecting it because<add>// all KeyEvents returned by KeyCharacterMap.getEvents() have the same<add>// time stamp and the system rejects too old events. Hence, it is<add>// possible for an event to become stale before it is injected if it<add>// takes too long to inject the preceding ones.
va	add	<del>androidterm/Term.java<mask>androidterm/Term.java<del>private static final String FAQ_URL = "http://github.com/jackpal/Android-Terminal-Emulator/wiki/Frequently-Asked-Questions";<del>Intent openFaq = new Intent(Intent.ACTION_VIEW, Uri.parse(FAQ_URL));<add>Intent openFaq = new Intent(Intent.ACTION_VIEW, Uri.parse("http://github.com/jackpal/Android-Terminal-Emulator/wiki/Frequently-Asked-Questions"));
va	del	<mask>jersey/ResourceChat.java<add>jersey/ResourceChat.java<del>@Path("/chat")<add>@Path("/")
va	add	<del>otf/AbstractTokenListener.java<add>otf/AbstractTokenListener.java<add>public void onGroupHeader(Token token, int numInGroup)<add>{<add>// no op<mask>}<add>
va	del	<del>persistance/FileBackend.java<add>persistance/FileBackend.java<mask>private int calcSampleSize(BitmapFactory.Options options, int size) {<add>public static int calcSampleSize(BitmapFactory.Options options, int size) {
va	del	<mask>ui/ProgressIndicator.java<add>ui/ProgressIndicator.java<add>setAnimation(null);
va	add	<del>examples/BlockImporter.java<add>examples/BlockImporter.java<del>package com.google.bitcoin.examples;<mask>package com.google.bitcoin.tools;
va	add	<del>impl/PushedFilePropertiesUpdater.java<mask>impl/PushedFilePropertiesUpdater.java<del>import com.sun.browser.plugin.PluginManager;
va	add	<del>channel/ChannelState.java<add>channel/ChannelState.java<mask><add>/**<add>* Represents a custom extension property which was not defined by the core<add>* channel state, whose detailed information should be retrieved by the<add>* return value of {@link ChannelStateEvent#getValue()}.<add>*/<add>EXTENDED;
va	del	<mask>serialmessage/RequestNodeInfoMessageClass.java<add>serialmessage/RequestNodeInfoMessageClass.java<del>if(incomingMessage.getMessageBuffer()[2] != 0x00)<add>if(incomingMessage.getMessagePayloadByte(0) != 0x00)
va	add	<del>protobuf/ProtobufDecoder.java<mask>protobuf/ProtobufDecoder.java<add>import com.google.protobuf.ExtensionRegistryLite;<del>private final ExtensionRegistry extensionRegistry;<add>private final ExtensionRegistryLite extensionRegistry;<add>this(prototype, (ExtensionRegistryLite) extensionRegistry);<add>}<add><add>public ProtobufDecoder(MessageLite prototype, ExtensionRegistryLite extensionRegistry) {
va	add	<del>gridfs/GridFSFile.java<mask>gridfs/GridFSFile.java<add>/**<add>* note: to set aliases, call put( "aliases" , List<add>*/
va	add	<del>geo/GeoShapeIntegrationTests.java<add>geo/GeoShapeIntegrationTests.java<add>import org.apache.lucene.util.LuceneTestCase;<mask>@LuceneTestCase.AwaitsFix(bugUrl = "https://github.com/elasticsearch/elasticsearch/issues/9904")
va	del	<mask>processor/ChoiceProcessor.java<add>processor/ChoiceProcessor.java<del>this.otherwise = AsyncProcessorConverterHelper.convert(otherwise);<add>this.otherwise = otherwise != null ? AsyncProcessorConverterHelper.convert(otherwise) : null;
va	del	<mask>aeron/MemoryOrderingTest.java<add>aeron/MemoryOrderingTest.java<del>public static final int NUM_MESSAGES = 100_000;<add>public static final int NUM_MESSAGES = 10_000;
va	del	<del>adapters/MoviesCursorAdapter.java<add>adapters/MoviesCursorAdapter.java<mask>View v = mLayoutInflater.inflate(LAYOUT, parent, false);<add>View v = mLayoutInflater.inflate(LAYOUT, null);
va	add	<del>rmd/TextEditingTargetNotebook.java<add>rmd/TextEditingTargetNotebook.java<add>// this can be called on a timer, so ensure the scope is still valid<add>if (scope == null ||<add>scope.getBodyStart() == null ||<add>scope.getEnd() == null)<mask>return;<add>
va	add	<del>result/ParsedResult.java<add>result/ParsedResult.java<del>result.append('\n');<add>// Don't add a newline before the first value<add>if (result.length() > 0) {<add>result.append('\n');<mask>}<del>result.append('\n');<add>if (result.length() > 0) {<add>result.append('\n');<add>}
va	del	<del>model/Session.java<add>model/Session.java<mask>log.warn("setExcludeFromProxyRegexs  (ignored, session.proxy, session.global, fullList");<add>/*log.warn("setExcludeFromProxyRegexs  (ignored, session.proxy, session.global, fullList");<add>*/
va	del	<del>internal/XbmcActiveBinding.java<add>internal/XbmcActiveBinding.java<mask>if (connector.isConnected())<add>if (connector.isConnected()) {<add>}<add>} else if (property.equals("System.State")) {<add>connector.updateSystemStatus();
va	del	<mask>xcode/ProjectGeneratorTest.java<add>xcode/ProjectGeneratorTest.java<del>new Pair<del>AppleSource.ofSourcePath(new FileSourcePath("foo.h")));<add>new Pair<add>AppleSource.ofSourcePath(new TestSourcePath("foo.h")));
va	add	<del>tightdb/TableView.java<mask>tightdb/TableView.java<add>// TODO..
va	add	<del>annotation/Bean.java<mask>annotation/Bean.java<del>* Copyright 2002-2011 the original author or authors.<add>* Copyright 2002-2012 the original author or authors.<del>* <del>* which case they will get processed in a configuration class 'lite' mode in which<add>* <add>* which case they will get processed in a configuration class <del>* unmodified in this case, and there are no unusual constraints for factory methods,<del>* however, scoping semantics are not respected as described above for inter-bean method<add>* unmodified in this case, and there are no unusual constraints for factory methods;<add>* however, scoping semantics are <add>* @author Sam Brannen
va	add	<del>controllers/ImpassibleRoadsMenuController.java<add>controllers/ImpassibleRoadsMenuController.java<del>rightTitleButtonController.leftIconId = R.drawable.map_pin_avoid_road;<add>rightTitleButtonController.leftIconId = R.drawable.ic_action_delete_dark;<del>return getMapActivity().getResources().getDrawable(R.drawable.ic_action_road_works_dark);<mask>return getMapActivity().getResources().getDrawable(R.drawable.map_pin_avoid_road);
va	add	<del>spark/BooksIntegrationTest.java<mask>spark/BooksIntegrationTest.java<del>Spark.clearRoutes();
va	add	<del>collect/ImmutableMultimapTest.java<add>collect/ImmutableMultimapTest.java<del>@GwtCompatible<mask>@GwtCompatible(emulated = true)
va	del	<del>views/ReaderRecyclerView.java<add>views/ReaderRecyclerView.java<del>import android.support.v7.widget.DefaultItemAnimator;<mask>ItemAnimator animator = new DefaultItemAnimator();<del>animator.setSupportsChangeAnimations(true);<del>setItemAnimator(animator);
va	del	<mask>cli/TestCommand.java<add>cli/TestCommand.java<add>.setEnvironment(params.getEnvironment())
va	add	<del>plugins/JvmComponentPlugin.java<mask>plugins/JvmComponentPlugin.java<add>import org.gradle.model.internal.core.Service;
va	del	<del>facet/AndroidRootUtil.java<add>facet/AndroidRootUtil.java<mask>private static String getDefaultGenSourceRoot(AndroidFacet facet) {<del>final VirtualFile mainContentRoot = getMainContentRoot(facet);<del>final String moduleDirPath = mainContentRoot != null ? mainContentRoot.getPath() : null;<del>return moduleDirPath != null<del>? moduleDirPath + '/' + SdkConstants.FD_GEN_SOURCES<del>: null;<del>}<del><del>@Nullable
va	del	<mask>debug/Runner.java<add>debug/Runner.java<del>System.out.println("frame: " + frame);<add>//System.out.println("frame: " + frame);
va	add	<del>impl/Searcher.java<add>impl/Searcher.java<del>long now = System.currentTimeMillis();<del>final long endTime = now + TIMEOUT;<del><del>boolean shouldContinue = true;<del>while (shouldContinue) {<del>sleeper.sleep();<del>shouldContinue = !searchFor(EditText.class, regex, 1, true) && now <del>now = System.currentTimeMillis();<del>}<del><del>//TODO: why does it call searchFor again, and not just evaluate whether it has found a match?<del>//TODO: if this is not necessary, we can simply delegate to searchWithTimeoutFor(EditText.class, ....) and refactor away this entire method<del>return searchFor(EditText.class, regex, 1, true);<mask>return searchWithTimeoutFor(EditText.class, regex, 1, true);
va	add	<del>internal/JavadocOptionFileWriter.java<add>internal/JavadocOptionFileWriter.java<del>return element.getKey() != "locale";<mask>return "locale".equals(element.getKey());
va	add	<del>ssl/SslContextBuilder.java<add>ssl/SslContextBuilder.java<del>return new SslContextBuilder(true);<add>return new SslContextBuilder(false);<del>return new SslContextBuilder(false).keyManager(keyCertChainFile, keyFile);<add>return new SslContextBuilder(true).keyManager(keyCertChainFile, keyFile);<del>return new SslContextBuilder(false).keyManager(keyCertChainFile, keyFile, keyPassword);<mask>return new SslContextBuilder(true).keyManager(keyCertChainFile, keyFile, keyPassword);
va	del	<del>env/NodeEnvironment.java<add>env/NodeEnvironment.java<add>logger.trace("releasing lock [{}]", lock);<mask>// ignore<add>logger.trace("failed to release lock [{}]", e, lock);
va	add	<del>client/LifeLine.java<mask>client/LifeLine.java<del>serverSocket = new ServerSocket(port);<add>serverSocket = new ServerSocket();<add>serverSocket.bind(new InetSocketAddress(InetAddress.getLocalHost(), port));
va	add	<del>bootstrapper/BatchDownloader.java<add>bootstrapper/BatchDownloader.java<del>throw new RuntimeException("Fail to download the file: " + fullUrl);<mask>throw new RuntimeException("Fail to download the file: " + fullUrl, e);
va	add	<del>app/Activity.java<add>app/Activity.java<del>* Device Owner through {@link DevicePolicyManager#setLockTaskComponents}.<mask>* Device Owner through DevicePolicyManager#setLockTaskComponents.
va	add	<del>spring/Spring.java<add>spring/Spring.java<add>* Ratpack Groovy DSL example:<add>* <add>* {@code<add>* import org.springframework.boot.SpringApplication<add>* import org.springframework.context.annotation.Bean<mask>* import org.springframework.context.annotation.Configuration<add>* import ratpack.spring.Spring<add>* import static ratpack.groovy.Groovy.ratpack<add>*<add>* ratpack {<add>* 	handlers {<add>* 	  register Spring.run(SampleSpringBootApp)<add>*<add>* 	  get("foo") { String msg -><add>* 	    render msg<add>* 	  }<add>*<add>* 	  get("bar") { CharSequence msg -><add>* 	    render msg<add>* 	  }<add>* 	}<add>* }<add>*<add>* {@literal @}Configuration<add>* class SampleSpringBootApp {<add>*   {@literal @}Bean<add>*   String hello() {<add>*     "hello"<add>*   }<add>*<add>*   static void main(String[] args) {<add>*     SpringApplication.run(SampleSpringBootApp, args)<add>*   }<add>* }<add>* }<add>* <add>*
va	add	<del>jmx/DefaultObjectNameMapperTest.java<add>jmx/DefaultObjectNameMapperTest.java<add>/**<add>* Copyright 2014 Netflix, Inc.<add>*<mask>* Licensed under the Apache License, Version 2.0 (the "License");<add>* you may not use this file except in compliance with the License.<add>* You may obtain a copy of the License at<add>*<add>*     http://www.apache.org/licenses/LICENSE-2.0<add>*<add>* Unless required by applicable law or agreed to in writing, software<add>* distributed under the License is distributed on an "AS IS" BASIS,<add>* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<add>* See the License for the specific language governing permissions and<add>* limitations under the License.<add>*/
va	add	<del>contrib/ContributionManagerDialog.java<mask>contrib/ContributionManagerDialog.java<add>getActiveTab().contributionListPanel.scrollPane.requestFocusInWindow();
va	del	<del>impl/LanguageLevelProjectExtensionImpl.java<add>impl/LanguageLevelProjectExtensionImpl.java<mask>if (myProject.isDefault()) {<del>return; // TODO[max]: hack to enforce default project always has LangLevel == 1.5. This is necessary until StubUpdatingIndex<del>// is able to determine correct language level for stub parsing.<del>}<del>
va	del	<del>support/ObserverSender.java<add>support/ObserverSender.java<mask>Exchange exchange = producer.createExchange();<add>Exchange exchange = producer.getEndpoint().createExchange();<del>Exchange exchange = producer.createExchange();<add>Exchange exchange = producer.getEndpoint().createExchange();
va	del	<del>channel/ChannelState.java<add>channel/ChannelState.java<del>INTEREST_OPS,<del><del>/**<del>* Represents a custom extension property which was not defined by the core<del>* channel state, whose detailed information should be retrieved by the<mask>* return value of {@link ChannelStateEvent#getValue()}.<del>*/<del>EXTENDED;<add>INTEREST_OPS;
va	add	<del>terminal/JBTerminalSystemSettingsProvider.java<add>terminal/JBTerminalSystemSettingsProvider.java<mask>public KeyStroke[] getFindKeyStrokes() {<add>return getKeyStrokesByActionId("Find");<add>}<add><add>@Override<add>public TextStyle getFoundPatternColor() {<add>return new TextStyle(TerminalColor.awt(myColorScheme.getAttributes(EditorColors.TEXT_SEARCH_RESULT_ATTRIBUTES).getForegroundColor()),<add>TerminalColor.awt(myColorScheme.getAttributes(EditorColors.TEXT_SEARCH_RESULT_ATTRIBUTES).getBackgroundColor()));<add>}<add><add>@Override
va	add	<del>view/ViewGroup.java<add>view/ViewGroup.java<del>*<del>* !!! TODO: write real docs<mask>// TODO: Write real docs
va	add	<del>MissionHandlers/ObservationFromSubgoalPositionListImplementation.java<add>MissionHandlers/ObservationFromSubgoalPositionListImplementation.java<add>import com.google.gson.JsonElement;<add>import com.microsoft.Malmo.Schemas.PointWithToleranceAndDescription;<add>PointWithToleranceAndDescription point = this.positions.getPoint().get(this.subgoalIndex);<mask>JsonObject pointElement = new JsonObject();<add>pointElement.addProperty("XPos", point.getX().doubleValue());<add>pointElement.addProperty("YPos", point.getY().doubleValue());<add>pointElement.addProperty("ZPos",  point.getZ().doubleValue());<add>pointElement.addProperty("description", point.getDescription());<add>json.add("nextSubgoal", pointElement);
va	add	<del>karaf/CamelJdbcAggregatorTest.java<mask>karaf/CamelJdbcAggregatorTest.java<del>public static final String COMPONENT = extractName(CamelJdbcAggregatorTest.class);<add>// the aggregator is included in the camel-sql artifact<add>public static final String COMPONENT = "sql";
va	add	<del>transaction/IsolationLevel.java<add>transaction/IsolationLevel.java<add><add>@Override<add>public String toString()<add>{<mask>return name().replace('_', ' ');<add>}
va	add	<del>mustache/DefaultCodeFactory.java<add>mustache/DefaultCodeFactory.java<del>* The default code factory is designed to work well with the default Mustache implementation.<mask>* The builder code factory is designed to work well with the default Mustache implementation.<del>public class DefaultCodeFactory implements CodeFactory {<add>public class BuilderCodeFactory implements CodeFactory {
va	del	<del>linkbubble/MainController.java<add>linkbubble/MainController.java<del>try {<del>MainController mc = get();<del>if (!mc.mRootViews.contains(v)) {<del>mc.mRootViews.add(v);<mask>if (mc.mRootWindowsVisible) {<del>mc.mWindowManager.addView(v, lp);<del>}<add>MainController mc = get();<add>if (!mc.mRootViews.contains(v)) {<add>mc.mRootViews.add(v);<add>if (mc.mRootWindowsVisible) {<add>mc.mWindowManager.addView(v, lp);<del>catch (SecurityException exc) {<del>CrashTracking.logHandledException(exc);<del>}
va	del	<mask>impl/OperationParkerImpl.java<add>impl/OperationParkerImpl.java<add>import com.hazelcast.internal.metrics.Probe;<add>nodeEngine.getMetricsRegistry().scanAndRegister(this, "operation-parker");<del>// for testing purposes only<add>@Probe<del>// for testing purposes only<add>@Probe
va	add	<del>runtime/BlazeCommandDispatcher.java<add>runtime/BlazeCommandDispatcher.java<add>private String shutdownReason = null;<add>if (shutdownReason != null) {<add>outErr.printErrLn("Server shut down " + shutdownReason);<add>return ExitCode.LOCAL_ENVIRONMENTAL_ERROR.getNumericExitCode();<add>}<mask>} catch (ShutdownBlazeServerException e) {<add>shutdownReason = "explicitly by client " + currentClientDescription;<add>throw e;
va	add	<del>popup/WizardPopup.java<mask>popup/WizardPopup.java<del>return size == null || size.height == 0 && size.width == 0 ? computeNotBiggerDimension(super.getPreferredSize().getSize(), p) : size;<add>boolean isEmpty = size == null || size.height <add>return isEmpty ? computeNotBiggerDimension(super.getPreferredSize().getSize(), p) : size;
va	add	<del>cli/CommandLineMain.java<add>cli/CommandLineMain.java<mask>import org.jboss.as.cli.impl.CliLauncher;<add>
va	del	<del>reader/ReaderPostRenderer.java<add>reader/ReaderPostRenderer.java<mask>.append("  blockquote { margin-left: ").append(mResourceVars.marginMediumPx).append("px; ")<del>.append("               padding-left: ").append(mResourceVars.marginMediumPx).append("px; ")<del>.append("               border-left: 3px solid ").append(mResourceVars.greyLightStr).append("; }")<add>.append("  blockquote { color: ").append(mResourceVars.greyMediumDarkStr).append("; ")<add>.append("               padding-left: 32px; ")<add>.append("               margin-left: 0px; ")<add>.append("               border-left: 3px solid ").append(mResourceVars.greyExtraLightStr).append("; }")
va	add	<del>titan/DaemonRunner.java<add>titan/DaemonRunner.java<del>Runtime.getRuntime().removeShutdownHook(killerHook);<add>try {<add>Runtime.getRuntime().removeShutdownHook(killerHook);<add>log.debug("Unregistered killer hook: {}", killerHook);<add>} catch (IllegalStateException e) {<add>/* Can receive "java.lang.IllegalStateException: Shutdown in progress"<add>* when called from JVM shutdown (as opposed to called from the stop method).<add>*/<mask>log.debug("Could not unregister killer hook: {}", e);<add>}<del>log.debug("Unregistered killer hook: {}", killerHook);
va	add	<del>packetlogging/PacketLoggingServiceImpl.java<add>packetlogging/PacketLoggingServiceImpl.java<add>* The max size of the <add>* is using.<add>*<add>* TODO this needs to be configurable eventually.<add>*/<add>private static final int EVICTING_QUEUE_MAX_SIZE = 1000;<add><add>/**<del>private final Queue<add>private final EvictingQueue<mask>= EvictingQueue.create(EVICTING_QUEUE_MAX_SIZE);<add>if (pktsToSave.remainingCapacity() == 0)<add>{<add>logger.warn("Queue is full, packets are being evicted.");<add>}<add>
va	add	<del>junit/TestObject.java<add>junit/TestObject.java<del>if (forkPerModule() && getRunnerSettings() != null) {<del>final String actionName = UIUtil.removeMnemonic(executor.getStartActionText());<del>throw new CantRunException("'" + actionName + "' is disabled when per-module working directory is configured.<del>"Please specify single working directory, or change test scope to single module.");<mask>if (forkPerModule()) {<add>if (getRunnerSettings() != null) {<add>final String actionName = UIUtil.removeMnemonic(executor.getStartActionText());<add>throw new CantRunException("'" + actionName + "' is disabled when per-module working directory is configured.<add>"Please specify single working directory, or change test scope to single module.");<add>}<add>} else {<add>return;
va	add	<del>conf/MultiLayerConfiguration.java<add>conf/MultiLayerConfiguration.java<add>//whether to redistribute params or not<add>protected boolean redistributeParams = false;<add>protected boolean redistributeParams = false;<mask>* Whether to redistribute parameters as a view or not<add>* @param redistributeParams whether to redistribute parameters<add>*                           as a view or not<add>* @return<add>*/<add>public Builder redistributeParams(boolean redistributeParams) {<add>this.redistributeParams = redistributeParams;<add>return this;<add>}<add><add>/**
va	del	<del>commands/AllTests.java<add>commands/AllTests.java<mask>import com.google.inject.injectioncontroller.InjectionControllerTest;<del>suite.addTestSuite(InjectionControllerTest.class);
va	add	<del>mongodb/DBCursorTest.java<add>mongodb/DBCursorTest.java<del>public void testComment() {<add>public void testSettingACommentInsertsCommentIntoProfileCollectionWhenProfilingIsTurnedOn() {<add>// given<add>database.command(new BasicDBObject("profile", 2));<add>String expectedComment = "test comment";<add><add>// when<del>.addSpecial("$comment", "test comment");<add>.comment(expectedComment);<add><add>// then<mask>DBCollection profileCollection = database.getCollection("system.profile");<add>assertEquals(1, profileCollection.count());<add>assertEquals(expectedComment, ((DBObject)profileCollection.findOne().get("query")).get("$comment"));
va	del	<del>res/DrawableResourceLoaderTest.java<add>res/DrawableResourceLoaderTest.java<del>/* $Id$<mask>* Copyright Spindance (2011)<del>*/
va	add	<del>drawable/AnimatedStateListDrawable.java<mask>drawable/AnimatedStateListDrawable.java<del>
va	add	<del>window/AndroidDevicesTableModel.java<add>window/AndroidDevicesTableModel.java<del>private static final String CONNECTED = "connected";<del>private static final String DISCONNECTED = "disconnected";<mask>private static final String CONNECTED = "Connected";<add>private static final String DISCONNECTED = "Disconnected";
va	add	<del>impl/PluginDownloader.java<mask>impl/PluginDownloader.java<del>PluginDownloader downloader = new PluginDownloader(descriptor.getPluginId().getIdString(), url, null, null, descriptor.getName());<add>PluginDownloader downloader = new PluginDownloader(descriptor.getPluginId().getIdString(), url, descriptor.getVersion(), null, descriptor.getName());
va	add	<del>model/Model.java<mask>model/Model.java<add>// ZAP: 2016/07/05 Issue 2218: Persisted Sessions don't save unconfigured Default Context<add>// Always start with one context<add>session.saveContext(session.getNewContext(Constant.messages.getString("context.default.name")));
va	add	<del>net/NetworkPolicyManagerService.java<add>net/NetworkPolicyManagerService.java<del>for (String packageName : packages) {<del>if (!mUsageStats.isAppIdle(packageName, uid, userId)) {<del>return false;<add>if (packages != null) {<add>for (String packageName : packages) {<add>if (!mUsageStats.isAppIdle(packageName, uid, userId)) {<mask>return false;<add>}
va	add	<del>pm/DefaultPermissionGrantPolicy.java<mask>pm/DefaultPermissionGrantPolicy.java<del>CONTACTS_PERMISSIONS.add(Manifest.permission.GET_ACCOUNTS);<add>//        CONTACTS_PERMISSIONS.add(Manifest.permission.GET_ACCOUNTS);
va	del	<del>mysite/MySiteFragment.java<add>mysite/MySiteFragment.java<del>// we want to open the last used blog by default<mask>int lastBlogId = WordPress.wpDB.getLastBlogId();<del>mBlog = WordPress.getBlog(lastBlogId);<add>mBlog = WordPress.getCurrentBlog();
va	add	<del>type/TransportSearchTypeAction.java<add>type/TransportSearchTypeAction.java<del>import org.elasticsearch.action.search.*;<add>import org.elasticsearch.action.search.ReduceSearchPhaseException;<add>import org.elasticsearch.action.search.SearchAction;<add>import org.elasticsearch.action.search.SearchPhaseExecutionException;<add>import org.elasticsearch.action.search.SearchRequest;<add>import org.elasticsearch.action.search.SearchResponse;<add>import org.elasticsearch.action.search.ShardSearchFailure;<del>logger.debug("All shards failed for phase: [{}]", firstPhaseName(), t);<mask>logger.debug("All shards failed for phase: [{}]", t, firstPhaseName());
va	add	<del>superslim/GridSLM.java<add>superslim/GridSLM.java<add>@Deprecated<add>/**<add>* Use {@link #from} instead<add>*/<add>@Deprecated<add>/**<mask>* Use {@link #from} instead<add>* This constructor will not copy the margin params from the source layout<add>*/<add>/**<add>* Creates a new instance of {@link LayoutParams}<add>*/<add>static public GridSLM.LayoutParams from(ViewGroup.LayoutParams other) {<add>if (other instanceof ViewGroup.MarginLayoutParams)<add>return new GridSLM.LayoutParams((ViewGroup.MarginLayoutParams) other);<add>else<add>return new GridSLM.LayoutParams(other);<add>}<add>
va	del	<del>comparison/ComparisonUtilAutoTest.java<add>comparison/ComparisonUtilAutoTest.java<mask>doTestWord(System.currentTimeMillis(), 300000, 300);<add>doTestWord(System.currentTimeMillis(), 30, 300);
va	add	<del>asm/AsmMethod.java<mask>asm/AsmMethod.java<del>return !method.isAccessor() || (accessedField != null && accessedField != method.getAccessedField());<add>return !method.isAccessor() || (accessedField != null && !accessedField.equals(method.getAccessedField()));
va	del	<mask>parser/TokenSequenceParser.java<add>parser/TokenSequenceParser.java<add>System.err.println("Read " + rules.size() + " rules.");
va	del	<mask>algorithms/DataStructures.java<add>algorithms/DataStructures.java<del>private static boolean validate = true;<add>private static boolean validate = false;
va	del	<del>lineage/LineageMasterClient.java<add>lineage/LineageMasterClient.java<mask>List<add>List
va	add	<del>spark/SparkSqlInterpreter.java<mask>spark/SparkSqlInterpreter.java<del>int maxConcurrency = 10;<del>return SchedulerFactory.singleton().createOrGetParallelScheduler(<del>SparkSqlInterpreter.class.getName() + this.hashCode(), maxConcurrency);<add>if (concurrentSQL()) {<add>int maxConcurrency = 10;<add>return SchedulerFactory.singleton().createOrGetParallelScheduler(<add>SparkSqlInterpreter.class.getName() + this.hashCode(), maxConcurrency);<add>}<add>return getSparkInterpreter().getScheduler();
va	add	<del>entity/CreatureSpawnEvent.java<add>entity/CreatureSpawnEvent.java<add>* When a creature is spawned by nether portal<add>*/<add>NETHER_PORTAL,<add>/**<add>* When a creature is spawned by a dispenser dispensing an egg<add>*/<add>DISPENSE_EGG,<mask>/**
va	del	<del>opengl/Texture.java<add>opengl/Texture.java<del>System.out.println(" in disposeSourceBuffer");<mask>System.out.println("Disposing " + data + " in disposeSourceBuffer");
va	add	<del>server/ConnectivityService.java<mask>server/ConnectivityService.java<del>private Object mDnsLock = new Object();
va	add	<del>resolve/BindingContextUtils.java<add>resolve/BindingContextUtils.java<add>import org.jetbrains.jet.lang.descriptors.NamespaceDescriptor;<add><mask>// TODO these helper methods are added as a workaround to some compiler bugs in Kotlin...<add><add>@Nullable<add>public static NamespaceDescriptor namespaceDescriptor(@NotNull BindingContext context, @NotNull JetFile source) {<add>return context.get(BindingContext.NAMESPACE, source);<add>}<add><add>@Nullable<add>public static PsiElement descriptorToDeclaration(@NotNull BindingContext context, @NotNull DeclarationDescriptor descriptor) {<add>return context.get(BindingContext.DESCRIPTOR_TO_DECLARATION, descriptor);<add>}<add>
va	add	<del>codegen/ImplementationBodyCodegen.java<add>codegen/ImplementationBodyCodegen.java<del>functionCodegen.generateMethod(OtherOrigin(myClass, constructorDescriptor), constructorDescriptor, constructorContext,<add>functionCodegen.generateMethod(OtherOrigin(descriptorToDeclaration(constructorDescriptor), constructorDescriptor),<mask>constructorDescriptor, constructorContext,
va	add	<del>gdx/Graphics.java<mask>gdx/Graphics.java<del>* @return whether OpenGL ES 2.0 is available */<add>* @return whether OpenGL ES 3.0 is available */
va	del	<del>solo/Scroller.java<add>solo/Scroller.java<del>* Scrolls down a list with a given listIndex.<del>*<mask>* @param listIndex the list to be scrolled. 0 if only one list is available<del>* @return true if more scrolling can be done<add>* Scrolls down a list with a given {@code listIndex}.<add>*<add>* @param listIndex the {@link ListView} to be scrolled. {@code 0} if only one list is available<add>* @return {@code true} if more scrolling can be done
te	del	<del>message/ReplyMessage.java<add>message/ReplyMessage.java<del>try {<del>while (documents.size() <del>BSONReader reader = new BSONBinaryReader(new BSONReaderSettings(), inputBuffer, false);<del>try {<del>documents.add(decoder.decode(reader));<del>} finally {<del>reader.close();<mask>}<add>while (documents.size() <add>BSONReader reader = new BSONBinaryReader(new BSONReaderSettings(), inputBuffer, false);<add>try {<add>documents.add(decoder.decode(reader));<add>} finally {<add>reader.close();<del>} finally {<del>inputBuffer.close();
te	add	<del>exopackage/DefaultApplicationLike.java<add>exopackage/DefaultApplicationLike.java<add>/*<add>* Copyright 2014-present Facebook, Inc.<add>*<add>* Licensed under the Apache License, Version 2.0 (the "License"); you may<add>* not use this file except in compliance with the License. You may obtain<add>* a copy of the License at<add>*<add>*     http://www.apache.org/licenses/LICENSE-2.0<add>*<add>* Unless required by applicable law or agreed to in writing, software<add>* distributed under the License is distributed on an "AS IS" BASIS, WITHOUT<add>* WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the<mask>* License for the specific language governing permissions and limitations<add>* under the License.<add>*/<add>
te	add	<del>animation/Bone.java<mask>animation/Bone.java<del>bindPos = source.bindPos;<del>bindRot = source.bindRot;<del>bindScale = source.bindScale;<add>bindPos = source.bindPos.clone();<add>bindRot = source.bindRot.clone();<add>bindScale = source.bindScale.clone();<del>modelBindInversePos = source.modelBindInversePos;<del>modelBindInverseRot = source.modelBindInverseRot;<del>modelBindInverseScale = source.modelBindInverseScale;<add>modelBindInversePos = source.modelBindInversePos.clone();<add>modelBindInverseRot = source.modelBindInverseRot.clone();<add>modelBindInverseScale = source.modelBindInverseScale.clone();
te	add	<del>fillr/Downloader.java<mask>fillr/Downloader.java<del>import org.bukkit.*;
te	add	<del>sponge/SpongeWorldEdit.java<mask>sponge/SpongeWorldEdit.java<del>Location<add>Optional<add><add>if (!optLoc.isPresent()) {<add>return;<add>}<add><add>Location
te	del	<mask>commander/CommanderPanel.java<add>commander/CommanderPanel.java<del>import com.intellij.ide.projectView.impl.nodes.Form;<del>} else if (DataConstantsEx.GUI_DESIGNER_FORM_ARRAY.equals(dataId)){<del>return selectedValue instanceof Form ? new Form[]{(Form)selectedValue} : null;
te	add	<del>jscomp/NameAnonymousFunctionsMapped.java<add>jscomp/NameAnonymousFunctionsMapped.java<del>return new CodePrinter.Builder(node).build();<mask>return compiler.toSource(node);
te	del	<del>ui/TraktAddFragment.java<add>ui/TraktAddFragment.java<add>// get some more trending shows, in case the user has added some (default is 10)<mask>.trending(null, null, Extended.IMAGES);<add>.trending(1, 35, Extended.IMAGES);
te	del	<mask>ui/TextButton.java<add>ui/TextButton.java<del>public String getText () {<add>public CharSequence getText () {
te	add	<del>ro/RomanianTagger.java<add>ro/RomanianTagger.java<del>return DEFAULT_BINARY_DICT;<mask>return binaryDictPath;
te	del	<del>misc/TestRig.java<add>misc/TestRig.java<mask>parser.getInterpreter().setTrace(true);
te	del	<mask>pages/NewRepositoryPage.java<add>pages/NewRepositoryPage.java<del>gitignores));<add>gitignores).setVisible(gitignores.size() > 0));
te	del	<del>lwjgl/LwjglAudioRenderer.java<add>lwjgl/LwjglAudioRenderer.java<mask>while((processed--) != 0){<add>//        while((processed--) != 0){<add>if (processed > 0){
te	del	<del>builtin/AutoCleanupExtension.java<add>builtin/AutoCleanupExtension.java<del>sharedFieldInterceptor.install(spec.getBottomSpec().getCleanupSpecMethod());<mask>instanceFieldInterceptor.install(spec.getBottomSpec().getCleanupMethod());<add>sharedFieldInterceptor.install(spec.getTopSpec().getCleanupSpecMethod());<add>instanceFieldInterceptor.install(spec.getTopSpec().getCleanupMethod());
te	del	<mask>slavetest/StartHaDb.java<add>slavetest/StartHaDb.java<del>"enable_remote_shell", "true" ) );<add>"enable_remote_shell", "true",<add>"keep_logical_logs", "true" ) );
te	del	<del>cordova/FileUtils.java<add>cordova/FileUtils.java<mask>new String[] { filePath });<add>new String[] { newFilePath });
te	add	<del>testcases/VisitListenerTests.java<mask>testcases/VisitListenerTests.java<add>import static org.jooq.Clause.TEMPLATE;<del>xx xxxxxxxxxxxxxxxxxxxxxxxxxx x<add>xx xxxxxxxxxxxxxxxxxxxxxxxxx<add>xx xxxxxxxxxxxxxxxxxxxxxxxxxxxx x
te	add	<del>jedis/JedisSentinelPool.java<add>jedis/JedisSentinelPool.java<add>this.timeout = timeout;<mask>this.password = password;<add>this.database = database;
te	add	<del>executer/DaemonGradleExecuter.java<mask>executer/DaemonGradleExecuter.java<del>jvmArgs.add("-XX:MaxPermSize=256m");<add>jvmArgs.add("-XX:MaxPermSize=320m");
te	add	<del>impl/EditorGutterComponentImpl.java<add>impl/EditorGutterComponentImpl.java<del>return new DnDImage(IconUtil.toImage(scaleIcon(getGutterRenderer(info.getPoint()).getIcon())));<mask>Image image = IconUtil.toImage(scaleIcon(getGutterRenderer(info.getPoint()).getIcon()));<add>return new DnDImage(image, new Point(image.getWidth(null) / 2, image.getHeight(null) / 2));
te	del	<del>parser/BpmnParse.java<add>parser/BpmnParse.java<del><mask>//setSchemaResource(BpmnParser.SCHEMA_RESOURCE);<del><del><add><add>} else {<add>addWarning("Ignoring unsupported activity type", activityElement);
te	del	<del>db/OObjectDatabaseTx.java<add>db/OObjectDatabaseTx.java<mask>unregisterPojo(pojo, (ODocument) entry.getRecord());<add>final ORecordInternal<add>if (rec instanceof ODocument)<add>unregisterPojo(pojo, (ODocument) rec);
te	del	<del>ws/ServerInfo.java<add>ws/ServerInfo.java<add>import javax.xml.bind.annotation.XmlElement;<del>@XmlRootElement // fields must be public or have a public getter to be auto-serialized to JSON<add>@XmlRootElement<add><add>/* fields must be public or have a public getter to be auto-serialized to JSON;<add>they are annotated with @XmlElement to be serialized to XML */<mask>@Getter private MavenVersion serverVersion = MavenVersion.VERSION;<add>@XmlElement @Getter<add>private MavenVersion serverVersion = MavenVersion.VERSION;<del>@Getter private String cpuName = "unknown";<add>@XmlElement @Getter<add>private String cpuName = "unknown";<del>@Getter private int nCores = 0;<add>@XmlElement @Getter<add>private int nCores = 0;
te	add	<del>patterns/PatternRuleTest.java<mask>patterns/PatternRuleTest.java<add>if (skipCountryVariant(lang)) {<add>// Skipping because there are no specific rules for this variant<add>return;<add>}
te	add	<del>token/PropertyPathToken.java<add>token/PropertyPathToken.java<del>//throw new PathNotFoundException("Property " + getPathFragment() + " not found in path " + currentPath);<del>throw new PathNotFoundException("Expected to find an object with property " + getPathFragment() + " but found '" + model.getClass().getName() + "'. This is not a json object according to the JsonProvider: '" + ctx.configuration().jsonProvider().getClass().getName() + "'.");<add><add>String m = model == null ? "null" : model.getClass().getName();<mask><add>throw new PathNotFoundException("Expected to find an object with property " + getPathFragment() + " but found '" + m + "'. This is not a json object according to the JsonProvider: '" + ctx.configuration().jsonProvider().getClass().getName() + "'.");
te	del	<del>shapefile/JoinedFeatureConverter.java<add>shapefile/JoinedFeatureConverter.java<mask>package org.opentripplanner.graph_builder.services.shapefile;<add>package org.opentripplanner.graph_builder.impl.shapefile;<add>import org.opentripplanner.graph_builder.services.shapefile.FeatureSourceFactory;<add>import org.opentripplanner.graph_builder.services.shapefile.SimpleFeatureConverter;
te	add	<del>shell/TfsShellTest.java<add>shell/TfsShellTest.java<del>* @throws TachyonException Thrown when the file cannot be freed<del>* @throws IOException Thrown either when the file cannot be freed or read<mask>* @throws TachyonException if an unexpected tachyon exception is thrown<add>* @throws IOException if a non-Tachyon exception occurs
te	del	<del>impl/GenericValueReferenceProvider.java<add>impl/GenericValueReferenceProvider.java<mask>return new Object[]{"0", "239", "42"};<add>return new Object[]{"0"};
te	del	<del>configuration/PyActiveSdkConfigurable.java<add>configuration/PyActiveSdkConfigurable.java<del>final Sdk addedSdk = SdkConfigurationUtil.setupSdk(myProjectSdksModel.getSdks(), sdk.getHomeDirectory(),<mask>PythonSdkType.getInstance(), true,<del>null, null);<add>final Sdk addedSdk = SdkConfigurationUtil.createAndAddSDK(sdk.getHomePath(), PythonSdkType.getInstance());
te	del	<del>test/UpsertTest.java<add>test/UpsertTest.java<mask>import io.requery.sql.platform.PostgresSQL;<del>new PostgresSQL(),<add>//new PostgresSQL(),
te	add	<del>io2014/MainActivity.java<mask>io2014/MainActivity.java<del>((ViewGroup) hero.getParent()).setTransitionGroup(false);
te	del	<mask>hystrix/HystrixObservableCommandTest.java<add>hystrix/HystrixObservableCommandTest.java<del>assertTrue(command.getExecutionTimeInMilliseconds() > 200);<del>assertTrue(observedCommandDuration > 200);<add>assertTrue(command.getExecutionTimeInMilliseconds() >= 200);<add>assertTrue(observedCommandDuration >= 200);
te	del	<mask>ui/ShowsActivity.java<add>ui/ShowsActivity.java<del>public static final int FRIENDS_LOADER_ID = 103;<del>public static final int USER_LOADER_ID = 104;<del>public static final int ADD_SHOW_LOADER_ID = 105;<del>public static final int NOW_RECENTLY_LOADER_ID = 106;<del>public static final int NOW_TODAY_LOADER_ID = 107;<del>public static final int NOW_FRIENDS_LOADER_ID = 108;<add>public static final int USER_LOADER_ID = 103;<add>public static final int ADD_SHOW_LOADER_ID = 104;<add>public static final int NOW_RECENTLY_LOADER_ID = 105;<add>public static final int NOW_TODAY_LOADER_ID = 106;<add>public static final int NOW_FRIENDS_LOADER_ID = 107;
te	add	<del>testrunner/TimeoutTest.java<mask>testrunner/TimeoutTest.java<del>return new BuckBlockJUnit4ClassRunner(clazz, /* defaultTestTimeoutMillis */ 10);<add>return new BuckBlockJUnit4ClassRunner(clazz, /* defaultTestTimeoutMillis */ 100);<del>"test testsMayTimeOut timed out after 10 milliseconds"),<add>"test testsMayTimeOut timed out after 100 milliseconds"),
te	add	<del>packet/Stanza.java<add>packet/Stanza.java<add>import static org.jivesoftware.smack.util.StringUtils.requireNotNullOrEmpty;<add><add>import java.util.Set;<add>* Return a set of all extensions with the given element name <add>* <add>* Changes to the returned set will update the packet extensions, if the returned set is not the empty set.<add>* <add>*<add>* @param elementName the element name, must not be null.<add>* @param namespace the namespace of the element(s), must not be null.<add>* @return a set of all matching extensions.<add>* @since 4.1<mask>*/<add>public Set<add>requireNotNullOrEmpty(elementName, "elementName must not be null or empty");<add>requireNotNullOrEmpty(namespace, "namespace must not be null or empty");<add>String key = XmppStringUtils.generateKey(elementName, namespace);<add>return packetExtensions.getAll(key);<add>}<add><add>/**
te	del	<del>impl/ProjectManagerImpl.java<add>impl/ProjectManagerImpl.java<del>import javax.swing.*;<del>import java.lang.reflect.InvocationTargetException;<del>private static void reportError(final Exception e) {<del>try {<del>LOG.info(e);<del><del>SwingUtilities.invokeAndWait(new Runnable() {<del>public void run() {<del>Messages.showErrorDialog(e.getMessage(), ProjectBundle.message("project.load.default.error"));<mask>}<del>});<del>}<del>catch (InterruptedException e1) {<del>LOG.error(e1);<del>}<del>catch (InvocationTargetException e1) {<del>LOG.error(e1);<del>}<del>}<del>
te	add	<del>spel/ConstructorInvocationTests.java<add>spel/ConstructorInvocationTests.java<add>import org.junit.Ignore;<add>@Ignore<mask>// TODO currently failing as with new ObjectToArray converter closest constructor matched becomes String(byte[]) which fails...
te	add	<del>cpp/CppIntegrationTestRunner.java<add>cpp/CppIntegrationTestRunner.java<del>return compiler.isAvailable();<add>return compiler.isAvailable() && canDoNecessaryEnvironmentManipulation();<add>}<add><add>private boolean canDoNecessaryEnvironmentManipulation() {<add>return (compiler.getEnvironmentVars().isEmpty() && compiler.getPathEntries().isEmpty())<mask>|| PROCESS_ENVIRONMENT.maybeSetEnvironmentVariable(pathVarName, System.getenv(pathVarName));
te	add	<del>dlv/DlvDebugProcess.java<mask>dlv/DlvDebugProcess.java<add>import com.intellij.execution.ui.ExecutionConsole;<add>@NotNull<add>@Override<add>public ExecutionConsole createConsole() {<add>return executionResult == null ? super.createConsole() : executionResult.getExecutionConsole();<add>}<add>
te	add	<del>mongodb/Bytes.java<add>mongodb/Bytes.java<add><add><add>/**<mask>* Use with sharding (mongos).<add>* Allows partial results from a sharded system if any shards are down/missing from the cluster. If not used an error will be returned<add>* from the mongos server.<add>*/<add>public static final int QUERYOPTION_PARTIAL = 1 <add><add>
te	add	<del>reminders/ReminderService.java<add>reminders/ReminderService.java<del><del>long dueDateAlarm;<add>long dueDateAlarm = NO_ALARM;<del>else {<mask>else if (DateUtilities.now() > lastReminder + DateUtilities.ONE_DAY) {
te	add	<del>gitblit/GitBlit.java<add>gitblit/GitBlit.java<add>// disable Git daemon on Express - we can't bind 9418 and we<add>// can't port-forward to the daemon<add>webxmlSettings.overrideSetting(Keys.git.daemonPort, 0);<mask>
te	del	<mask>preference/PreferenceGroupAdapter.java<add>preference/PreferenceGroupAdapter.java<add>for (final Preference preference : mPreferenceListInternal) {<add>// Clear out the listeners in anticipation of some items being removed. This listener<add>// will be (re-)added to the remaining prefs when we flatten.<add>preference.setOnPreferenceChangeInternalListener(null);<add>}<add>if (!mPreferenceListInternal.contains(preference)) {<add>return;<add>}
te	add	<del>controller/CacheManagingDrawTask.java<mask>controller/CacheManagingDrawTask.java<del>IDanmakus danmakus = danmakuList.subnew(curr, end);<add>IDanmakus danmakus = null;<add>synchronized (danmakuList) {<add>danmakus = danmakuList.subnew(curr, end);<add>}
te	add	<del>server/ServerMainModule.java<add>server/ServerMainModule.java<add>import com.facebook.presto.split.ConnectorDataStreamProvider;<mask>import static com.google.inject.multibindings.Multibinder.newSetBinder;<add>newSetBinder(binder, ConnectorDataStreamProvider.class);
te	add	<del>webserver/SparkServer.java<add>webserver/SparkServer.java<del>* @param port<mask>* @param port The port to listen on<del>* @param port<add>* @param host The address to listen on<del>* @param port<add>* @param port The port to listen on<add>* @param host The address to listen on
te	add	<del>net/SocketAcceptThread.java<add>net/SocketAcceptThread.java<add>* The default XMPP port for connection multiplex.<add>*/<add>public static final int DEFAULT_MULTIPLEX_PORT = 5262;<mask><add>/**
te	add	<del>util/PlaybackController.java<add>util/PlaybackController.java<del>bound = activity.bindService(new Intent(activity, PlaybackService.class), mConnection, 0);<mask>bound = activity.bindService(new Intent(activity,<add>PlaybackService.class), mConnection, 0);<add>// make sure that new media is loaded if it's available<add>mediaInfoLoaded = false;
te	add	<del>pages/GroovyPagesUriSupport.java<add>pages/GroovyPagesUriSupport.java<del>if(controller != null) {<del>return GrailsNameUtils.getLogicalPropertyName(controller.getClass().getSimpleName(), ControllerArtefactHandler.TYPE);<del>}<del>else {<add>if(controller == null) {<add>else {<add>if(!controller.getClass().getSimpleName().endsWith(ControllerArtefactHandler.TYPE)) {<add>GrailsWebRequest webRequest = GrailsWebRequest.lookup();<add>return webRequest != null ? webRequest.getControllerName() : null;<add>}<mask>else {<add>return GrailsNameUtils.getLogicalPropertyName(controller.getClass().getSimpleName(), ControllerArtefactHandler.TYPE);<add>}<add>}
te	del	<mask>jsp/JspInvokeGrailsTagLibTag.java<add>jsp/JspInvokeGrailsTagLibTag.java<add>* @deprecated<add>@Deprecated
te	del	<mask>standalonemojos/ManifestMergerMojo.java<add>standalonemojos/ManifestMergerMojo.java<add>*             &lt;versionNamingPattern&gt;&lt;/versionNamingPattern&gt;<del>* to the version code generator, while other parts are ignored.<add>* to the version code generator, while other parts are ignored. Be sure to properly escape<add>* your pattern string, in case you use characters that have special meaning in XML.
te	add	<del>postgresql/PostgreSQLWriteInterface.java<add>postgresql/PostgreSQLWriteInterface.java<del>throw new SystemException(ex);<mask>throw errorHandler.handleException(Context.INSERT, ex);
te	add	<del>distributed/ODistributedStorage.java<mask>distributed/ODistributedStorage.java<del>return null;<add>return wrapped.getCollectionManagerClass();
te	add	<del>ui/PrintActivity.java<mask>ui/PrintActivity.java<del>intent.putExtra(PrintService.EXTRA_PRINT_JOB_INFO,<add>intent.putExtra(PrintService.EXTRA_PRINT_DOCUMENT_INFO,
te	add	<del>compiler/AppCompiler.java<add>compiler/AppCompiler.java<add>if (pattern == null || pattern.trim().isEmpty()) {<add>continue;<mask>}<add>pattern = pattern.trim();
te	add	<del>facebook/FacebookComponent.java<add>facebook/FacebookComponent.java<del>IntrospectionSupport.setProperties(config, componentProperties, null);<mask>IntrospectionSupport.setProperties(config, componentProperties);
te	del	<del>gtasks/GtasksTaskListUpdater.java<add>gtasks/GtasksTaskListUpdater.java<mask>GtasksMetadata.LIST_ID.eq(listId), GtasksMetadata.PARENT_TASK.eq(parent)))<add>GtasksMetadata.LIST_ID.eq(listId), GtasksMetadata.PARENT_TASK.eq(parent),<add>GtasksMetadata.INDENT.lt(indentLevel == 0 ? 1 : indentLevel)))
te	add	<del>core/PApplet.java<add>core/PApplet.java<del>static public void main(final Class<del>main(mainClass.getName(), null);<mask>static public void main(final Class<add>main(mainClass.getName(), args);
te	del	<mask>metrics/ClassDataAbstractionCouplingCheck.java<add>metrics/ClassDataAbstractionCouplingCheck.java<del>* within the given class. This type of coupling is<del>* not caused by inheritance or the object oriented paradigm.<del>* Generally speaking, any abstract data type with other<del>* abstract data types as members has data abstraction coupling; therefore,<del>* if a class has a local variable that is an<del>* instantiation (object) of another class, there is data abstraction coupling.<del>* The higher the DAC, the more complex the<del>* data structure (classes) of the system.<add>* within the given class.
te	add	<del>language/Join.java<add>language/Join.java<del>} else if (using != null) {<mask>} else if (!using.isEmpty()) {
te	add	<del>reflect/AbstractInvocationHandler.java<add>reflect/AbstractInvocationHandler.java<del>* {@link Object#hashCode} and {@link Object#toString}.<add>* {@link Object#hashCode} and {@link Object#toString}. For example: <mask>* class Unsupported extends AbstractInvocationHandler {<add>*   @Override protected Object handleInvocation(Object proxy, Method method, Object[] args) {<add>*     throw new UnsupportedOperationException();<add>*   }<add>* }<add>*<add>* CharSequence unsupported = Reflection.newProxy(CharSequence.class, new Unsupported());<add>* 
te	add	<del>script/Script.java<add>script/Script.java<del>log.warn("Signature checking failed! {}", e1.toString());<del>// Don't dump a stack trace here because we sometimes expect this to fail inside<del>// LocalTransactionSigner.signInputs().<add><add>// This RuntimeException occurs when signing as we run partial/invalid scripts to see if they need more<add>// signing work to be done inside LocalTransactionSigner.signInputs.<add>if (!e1.getMessage().contains("Reached past end of ASN.1 stream"))<mask>log.warn("Signature checking failed! {}", e1.toString());
te	add	<del>config/AbstractGroovyLibraryManager.java<mask>config/AbstractGroovyLibraryManager.java<del>final String name = generatePointerName(newVersion, getLibraryPrefix(), container, usedLibraryNames);<add>final String name = generatePointerName(newVersion, getLibraryPrefix() + "-", container, usedLibraryNames);
te	del	<del>audio/TestOgg.java<add>audio/TestOgg.java<add>import com.jme3.audio.AudioData.DataType;<mask>audioSource = new AudioNode(assetManager, "Sound/Effects/Foot steps.ogg", true);<add>audioSource = new AudioNode(assetManager, "Sound/Effects/Foot steps.ogg", DataType.Buffer);<del>audioSource = new AudioNode(assetManager, "Sound/Effects/Foot steps.ogg", true);<add>audioSource = new AudioNode(assetManager, "Sound/Effects/Foot steps.ogg", DataType.Buffer);
te	add	<del>bluetooth/BluetoothAdapter.java<mask>bluetooth/BluetoothAdapter.java<add>* 
te	del	<del>trippattern/TripTimes.java<add>trippattern/TripTimes.java<mask>public class TripTimes implements Serializable {<add>public class TripTimes implements Serializable, Comparable<add><add>/* Allow sorting TripTimes based on first departure time. */<add>@Override<add>public int compareTo(TripTimes other) {<add>return this.getDepartureTime(0) - other.getDepartureTime(0);<add>}
te	del	<del>messenger/XMPPDOMFragment.java<add>messenger/XMPPDOMFragment.java<del>* Constructor creates it's own Document to represent the packet.<del>*/<del>public XMPPDOMFragment() {<mask>root = DocumentHelper.createElement("jive");<del>}<del><del>/**
te	add	<del>runtime/Recognizer.java<add>runtime/Recognizer.java<del>public ATNInterpreter getInterpreter() { return _interp; }<add>public ATNInterpreter getInterpreter() {<add>return _interp;<add>}<add><add>public void setInterpreter(ATNInterpreter interpreter) {<add>_interp = interpreter;<mask>}
te	del	<mask>trident/TridentTopology.java<add>trident/TridentTopology.java<add>import storm.trident.spout.RichSpoutBatchExecutor;<del>public Stream newStream(IRichSpout spout) {<del>Node n = new SpoutNode(getUniqueStreamId(), TridentUtils.getSingleOutputStreamFields(spout), null, spout, SpoutNode.SpoutType.BATCH);<del>return addNode(n);<add>//    public Stream newStream(IRichSpout spout) {<add>//        Node n = new SpoutNode(getUniqueStreamId(), TridentUtils.getSingleOutputStreamFields(spout), null, spout, SpoutNode.SpoutType.BATCH);<add>//        return addNode(n);<add>//    }<add><add>public Stream newStream(String txId, IRichSpout spout) {<add>return newStream(txId, new RichSpoutBatchExecutor(spout));
te	add	<del>sample/MainActivity.java<add>sample/MainActivity.java<del><add>private final String TAG = getClass().getSimpleName();<del>Log.d("yoyo","OKAY");<mask>Log.d(TAG,"User enabled location");<del>Log.d("yoyo","CANCELLED");<add>Log.d(TAG,"User Cancelled enabling location");
te	add	<del>sqlcipher/CursorWrapper.java<add>sqlcipher/CursorWrapper.java<add><add>public Cursor getWrappedCursor() {<add>return mCursor;<mask>}
te	add	<del>download/DownloadActivity.java<mask>download/DownloadActivity.java<del>String tab = intent.getExtras().get(TAB_TO_OPEN).toString();<add>String tab = intent.getExtras().getString(TAB_TO_OPEN);
te	del	<del>impl/RenderSessionImpl.java<add>impl/RenderSessionImpl.java<add>if (defaultTheme == null) {<add>break;<add>}<del>if (defaultTheme == null) {<mask>break;<del>}
te	del	<del>config/TaskRepositoriesConfigurable.java<add>config/TaskRepositoriesConfigurable.java<mask>assert clone.equals(repository);<add>assert clone.equals(repository) : repository.getClass().getName();
te	del	<mask>tools/PostgreBackupWizardPageObjects.java<add>tools/PostgreBackupWizardPageObjects.java<add>if (schema.isSystem() || schema.isUtility()) {<add>continue;<add>}
te	add	<del>view/TextureView.java<add>view/TextureView.java<add>* <mask>* For instance, if you use a TextureView to display the camera preview, you<add>* cannot use {@link #lockCanvas()} to draw onto the TextureView at the same<add>* time.<add>*<add>* <add>* owned by another producer. For instance, if the TextureView is being used<add>* to render the camera's preview you cannot invoke this method.<add>*
te	add	<del>printing/HTMLTextPainter.java<add>printing/HTMLTextPainter.java<del>myCurrentMethodSeparator++;<add>do {<add>myCurrentMethodSeparator++;<add>}<mask>while (myCurrentMethodSeparator <add>myMethodSeparators[myCurrentMethodSeparator] != null &&<add>myMethodSeparators[myCurrentMethodSeparator].startOffset 
te	add	<del>provider/TrayProviderHelper.java<add>provider/TrayProviderHelper.java<add>import net.grandcentrix.tray.storage.TrayStorage;<del>.isDeviceSpecific(deviceSpecific)<mask>.setType(deviceSpecific ? TrayStorage.Type.DEVICE : TrayStorage.Type.USER)
te	add	<del>server/CountryDetectorServiceTest.java<add>server/CountryDetectorServiceTest.java<del>serviceTester.systemReady();<mask>serviceTester.systemRunning();<del>serviceTester.systemReady();<add>serviceTester.systemRunning();
te	del	<del>feeds/FeedUtils.java<add>feeds/FeedUtils.java<mask>Direction direction = BidiUtils.get().estimateDirection(content, true);<add>String text = Jsoup.parse(content).text();<add>if (StringUtils.isBlank(text)) {<add>return false;<add>}<add>Direction direction = BidiUtils.get().estimateDirection(text);
te	del	<del>event/EventManagerTest.java<add>event/EventManagerTest.java<del><del>@Test(expected = RuntimeException.class)<del>public void testApplicationContextEvent(){<del>for(Method method : eventOneMethods){<del>eventManager.registerObserver(EventOne.class, new ObserverMethodListener(tester, method));<del>}<mask>}
te	add	<del>impl/Advertiser.java<mask>impl/Advertiser.java<add>import com.intellij.ui.components.panels.NonOpaquePanel;<del>myComponent.add(new JPanel(), gb.next().fillCellHorizontally().weightx(1));<add>myComponent.add(new NonOpaquePanel(), gb.next().fillCellHorizontally().weightx(1));
te	del	<mask>server/VoldemortConfig.java<add>server/VoldemortConfig.java<del>import voldemort.cluster.failuredetector.BannagePeriodFailureDetector;<del>// FIX: need to use ThresholdFailureDetector, but blocked on issue 197.<del>BannagePeriodFailureDetector.class.getName());<add>FailureDetectorConfig.DEFAULT_IMPLEMENTATION_CLASS_NAME);
te	add	<del>en/MorfologikBritishSpellerRuleTest.java<add>en/MorfologikBritishSpellerRuleTest.java<add>//with an abbreviation:<mask>assertEquals(0, rule.match(langTool.getAnalyzedSentence("This is my Ph.D. thesis.")).length);
te	del	<mask>java/GremlinFluentUtility.java<add>java/GremlinFluentUtility.java<del>} else if (pipe instanceof PropertyFilterPipe || pipe instanceof EdgesVerticesPipe) {<add>} else if (pipe instanceof PropertyFilterPipe || pipe instanceof IntervalFilterPipe || pipe instanceof EdgesVerticesPipe) {
te	add	<del>framework/JSLibraryStdDescription.java<add>framework/JSLibraryStdDescription.java<del>* Copyright 2010-2013 JetBrains s.r.o.<add>* Copyright 2010-2014 JetBrains s.r.o.<mask>import org.jetbrains.annotations.TestOnly;<add>@TestOnly
te	del	<del>jmock/ClassImposterizerTest.java<add>jmock/ClassImposterizerTest.java<mask>@Override
te	del	<mask>twirl/TwirlSourceSet.java<add>twirl/TwirlSourceSet.java<add>import org.gradle.api.Incubating;<add>@Incubating
te	add	<del>impl/GenericValueReferenceProvider.java<mask>impl/GenericValueReferenceProvider.java<del>if (domElement.equals(parent.getGenericInfo().getNameDomElement(parent))) {<add>if (domElement.equals(parent.getGenericInfo().getNameDomElement(parent)) && references.length == 0) {
te	del	<del>data/AbstractDatabase.java<add>data/AbstractDatabase.java<mask>* will<del>* prevent any new non-exclusive locks from being acquired while it blocks.<add>* will prevent any new non-exclusive locks from being acquired while it blocks.
te	add	<del>jscomp/PerformanceTracker.java<add>jscomp/PerformanceTracker.java<del>codeChange.reset();<add>// In Compiler, toSource may be called after every pass X. We don't want it<add>// to reset the handler, because recordPassStop for pass X has not been<mask>// called, so we are falsely logging that pass X didn't make changes.<add>if (!passName.equals("toSource")) {<add>codeChange.reset();<add>}
te	add	<del>metastore/TestMetaStoreAuthorization.java<add>metastore/TestMetaStoreAuthorization.java<add>import java.io.IOException;<add>import java.net.ServerSocket;<add><del>private final int port = 10000;<mask>private int port;<add>port = findFreePort();<add><add>private int findFreePort() throws IOException {<add>ServerSocket socket= new ServerSocket(0);<add>int port = socket.getLocalPort();<add>socket.close();<add>return port;<add>}
te	add	<del>parser/Scanner.java<mask>parser/Scanner.java<add>@SuppressWarnings("IdentityBinaryExpression")
te	add	<del>apt/EipAnnotationProcessor.java<add>apt/EipAnnotationProcessor.java<del>"org.apache.camel.model.ProcessorDefinition",<del>"org.apache.camel.model.VerbDefinition"<add>"org.apache.camel.model.ProcessorDefinition",<mask>"org.apache.camel.model.VerbDefinition"<del>private static class EipOptionComparator implements Comparator<add>private static final class EipOptionComparator implements Comparator
te	add	<del>coyote/Response.java<add>coyote/Response.java<del>String charsetValue = m.getCharset().trim();<add>String charsetValue = m.getCharset();<del>if (charsetValue != null && charsetValue.length() > 0) {<del>charsetSet = true;<del>this.characterEncoding = charsetValue;<add>if (charsetValue != null) {<add>charsetValue = charsetValue.trim();<add>if (charsetValue.length() > 0) {<add>charsetSet = true;<add>this.characterEncoding = charsetValue;<mask>}
te	add	<del>sdk/PythonSdkType.java<add>sdk/PythonSdkType.java<del>if (sdk != null) {<mask>if (sdk != null && sdk.getSdkType() instanceof PythonSdkType) {
te	add	<del>deployment/UndertowDeploymentService.java<add>deployment/UndertowDeploymentService.java<del>if (files == null){<del>return;<del>}<del>for(File f : files) {<del>recursiveDelete(f);<mask>if (files != null){<add>for(File f : files) {<add>recursiveDelete(f);<add>}
te	add	<del>content/Intent.java<add>content/Intent.java<del>* {@link android.content.Intent#ACTION_DOCK_STATE_UNDOCKED},<del>* {@link android.content.Intent#ACTION_DOCK_STATE_DESK}, or<del>* {@link android.content.Intent#ACTION_DOCK_STATE_CAR}.<add>* {@link android.content.Intent#EXTRA_DOCK_STATE_UNDOCKED},<add>* {@link android.content.Intent#EXTRA_DOCK_STATE_DESK}, or<mask>* {@link android.content.Intent#EXTRA_DOCK_STATE_CAR}.
te	add	<del>protocol/RemoteMethodInvocation.java<add>protocol/RemoteMethodInvocation.java<add>import com.google.common.base.Objects;<add><mask>@Override<add>public String toString() {<add>return Objects.toStringHelper(this)<add>.add("key", key)<add>.add("arguments", Arrays.toString(arguments))<add>.toString();<add>}
te	del	<mask>flip/FlipViewController.java<add>flip/FlipViewController.java<del>if (!inFlipAnimation)<add>if (!inFlipAnimation) {<add>surfaceView.requestRender(); //ask OpenGL to clear its display<add>}
te	del	<mask>views/ImpassableRoadsLayer.java<add>views/ImpassableRoadsLayer.java<del>float top = y - roadWorkIcon.getHeight() / 2;<add>float top = y - roadWorkIcon.getHeight();
te	del	<mask>builders/HttpSecurity.java<add>builders/HttpSecurity.java<del>* 				.logout().logout().deleteCookies(&quot;remove&quot;).invalidateHttpSession(false)<add>* 				.logout().deleteCookies(&quot;remove&quot;).invalidateHttpSession(false)<del>}<add>}
te	add	<del>async/AsyncLoggingEventAppenderFactory.java<add>async/AsyncLoggingEventAppenderFactory.java<del>* Creates an {@link AsyncAppenderFactory} of type {@link ILoggingEvent}<del>* @return the {@link AsyncAppenderFactory}<mask>* Creates an {@link AsyncAppenderBase} of type {@link ILoggingEvent}<add>* @return the {@link AsyncAppenderBase}
te	del	<mask>index/ExtractGooglecodeAuthorization.java<add>index/ExtractGooglecodeAuthorization.java<del>System.our.ptintln("--");<add>System.out.ptintln("--");<del>private static StringBuilder readAnswer(InputStream input)<add>private StringBuilder readAnswer(InputStream input)
te	add	<del>inject/Provides.java<mask>inject/Provides.java<del>* type is bound to it's returned value. Guice will pass dependencies to the method as parameters.<add>* type is bound to its returned value. Guice will pass dependencies to the method as parameters.
te	add	<del>jingle/JingleConnection.java<mask>jingle/JingleConnection.java<add>content.setTransportId(this.transportId);
te	add	<del>models/AccountModel.java<add>models/AccountModel.java<add>import org.wordpress.android.util.AppLog;<add>} else {<mask>AppLog.e(AppLog.T.API, "Date could not be found from Account JSON response");
te	add	<del>io/DelimitedInputFormat.java<mask>io/DelimitedInputFormat.java<del>private static final String RECORD_DELIMITER = "delimited-format.delimiter";<add>public static final String RECORD_DELIMITER = "delimited-format.delimiter";
te	add	<del>operators/CachedObservable.java<add>operators/CachedObservable.java<add><del>private CacheState<mask>private final CacheState<del><del>/**<del>* Returns the number of events currently cached.<del>* @return<del>*/<del>/* public */ int cachedEventCount() {<del>return state.size();<del>}<del><add>
te	add	<del>fbreader/FBReaderApp.java<add>fbreader/FBReaderApp.java<mask>ZLMainWindowUtil.Instance().setTitle(book.getTitle());
te	add	<del>jcvideoplayer_lib/JCVideoPlayer.java<mask>jcvideoplayer_lib/JCVideoPlayer.java<add>import android.graphics.Rect;<add>import android.graphics.drawable.Drawable;<del>skProgress.setProgressDrawable(resource.getDrawable(skin.seekDrawable));<add>Drawable bg = resource.getDrawable(skin.seekDrawable);<add>Rect bounds = skProgress.getProgressDrawable().getBounds();<add>skProgress.setProgressDrawable(bg);<add>skProgress.getProgressDrawable().setBounds(bounds);
te	add	<del>fvec/Frame.java<add>fvec/Frame.java<del>if(i <mask>if(i 
te	add	<del>webkit/WebView.java<add>webkit/WebView.java<del>int content = nativeDraw(canvas, color, extras, true);<add>// XXX: Revisit splitting content.  Right now it causes a<mask>// synchronization problem with layers.<add>int content = nativeDraw(canvas, color, extras, false);
te	add	<del>containers/SLRUMap.java<add>containers/SLRUMap.java<del>onDropFromCache(key, value);<mask>onDropFromCache(key, oldValue);<del>onDropFromCache(key, value);<add>onDropFromCache(key, oldValue);
te	add	<del>jscomp/GlobalNamespace.java<add>jscomp/GlobalNamespace.java<mask>case Token.CATCH:
te	del	<del>util/LRUSoftCacheTest.java<add>util/LRUSoftCacheTest.java<mask>// 1mb data<del>byte[] buf = new byte[1 * 1024 * 1024];<add>// 5mb data<add>byte[] buf = new byte[5 * 1024 * 1024];
te	add	<del>mdui/SimpleMetadataUIInfo.java<add>mdui/SimpleMetadataUIInfo.java<del>private static final int DEFAULT_IMAGE_SIZE = 48;<mask>private static final int DEFAULT_IMAGE_SIZE = 32;
te	add	<del>plugins/GraphCloner.java<mask>plugins/GraphCloner.java<del>System.out.println("Old node: " + oldNode.getProperty("name"));
te	add	<del>ui/ActivityLauncher.java<mask>ui/ActivityLauncher.java<del>if (true) {<add>if (false) {
te	add	<del>group/ChannelGroup.java<mask>group/ChannelGroup.java<del>*     b.releaseExternalResources();
te	add	<del>reader/ReaderActivityLauncher.java<add>reader/ReaderActivityLauncher.java<del>if (context instanceof Activity) {<mask>if (context instanceof Activity && sourceView != null) {
te	add	<del>activity/MessageCompose.java<add>activity/MessageCompose.java<mask>setTheme(K9.getK9ThemeResourceId(K9.THEME_LIGHT));
te	del	<del>pegdown/Extensions.java<add>pegdown/Extensions.java<mask>* All of the smartypants prettyfications {@see http://daringfireball.net/projects/smartypants/}.<del>* Equivalent to SMARTS || QUOTES<add>* All of the smartypants prettyfications. Equivalent to SMARTS || QUOTES.<add>*<add>* @see <del>* PHP Markdown Extra style abbreviations {@see http://michelf.com/projects/php-markdown/extra/#abbr}.<add>* PHP Markdown Extra style abbreviations.<add>*<add>* @see <del>* Enables the parsing of hard wraps as HTML linebreaks.<del>* Similar to what github does {@see http://github.github.com/github-flavored-markdown}.<add>* Enables the parsing of hard wraps as HTML linebreaks. Similar to what github does.<add>*<add>* @see <del>* {@see http://github.github.com/github-flavored-markdown}.<add>*<add>* @see 
te	del	<mask>aio/DefaultAioChannelFinder.java<add>aio/DefaultAioChannelFinder.java<del>class DefaultAioChannelFinder implements AioChannelFinder {<add>final class DefaultAioChannelFinder implements AioChannelFinder {
te	add	<del>refactor/GoDescriptionProvider.java<add>refactor/GoDescriptionProvider.java<mask>if (o instanceof GoFieldDefinition) return "Field";<add>if (o instanceof GoReceiver) return "Receiver";
te	add	<del>metatest/TestJavaTestDocsGenerator.java<add>metatest/TestJavaTestDocsGenerator.java<del>String directory = "target/testdocs";<mask>String directory = "targe"+System.getProperty("path.separator")+"testdocs";
te	del	<mask>swift/SwiftUnderFileSystem.java<add>swift/SwiftUnderFileSystem.java<del>return null;<add>return "";<del>return null;<add>return "";
te	del	<mask>plans/PlansUtils.java<add>plans/PlansUtils.java<add>/**<add>* Returns the url of the image to display for the passed plan<add>*<add>* @param planId - ID of the global plan<add>* @param iconSize - desired size of the returned image<add>* @return string containing photon-ized plan icon<add>*/<del>if (plan == null) {<add>if (plan == null || !plan.hasIconUrl()) {
te	add	<del>sentiment/SentimentPipeline.java<mask>sentiment/SentimentPipeline.java<del>System.err.println(result.toString());
te	add	<del>impl/ConstantExpressionEvaluator.java<add>impl/ConstantExpressionEvaluator.java<del>private ConstantExpressionEvaluator(Set<add>/**<add>* used in Fabrique<add>*/<add>protected ConstantExpressionEvaluator(Set<del>private static Object _compute(ConstantExpressionEvaluator evaluator, PsiExpression expression) {<add>/**<mask>* used in Fabrique<add>*/<add>protected static Object _compute(ConstantExpressionEvaluator evaluator, PsiExpression expression) {
te	del	<del>patch/ApplyPatchAction.java<add>patch/ApplyPatchAction.java<mask>import com.intellij.openapi.actionSystem.AnAction;<add>import com.intellij.openapi.project.DumbAwareAction;<del>public class ApplyPatchAction extends AnAction {<add>public class ApplyPatchAction extends DumbAwareAction {
te	del	<del>view/KeyboardShortcutInfo.java<add>view/KeyboardShortcutInfo.java<mask>*     {@link KeyEvent#META_SHIFT_ON}, {@link KeyEvent#META_META_ON} and<del>*     {@link KeyEvent#META_ALT_ON}.<add>*     {@link KeyEvent#META_SHIFT_ON}, {@link KeyEvent#META_META_ON},<add>*     {@link KeyEvent#META_ALT_ON}, {@link KeyEvent#META_FUNCTION_ON} and<add>*     {@link KeyEvent#META_SYM_ON}.<del>*     {@link KeyEvent#META_SHIFT_ON}, {@link KeyEvent#META_META_ON} and<del>*     {@link KeyEvent#META_ALT_ON}.<add>*     {@link KeyEvent#META_SHIFT_ON}, {@link KeyEvent#META_META_ON},<add>*     {@link KeyEvent#META_ALT_ON}, {@link KeyEvent#META_FUNCTION_ON} and<add>*     {@link KeyEvent#META_SYM_ON}.<del>* base character was set instead, returns {@link KeyEvent#KEYCODE_UNKNOWN}.<add>* base character was set instead, returns {@link KeyEvent#KEYCODE_UNKNOWN}. Valid keycodes are<add>* defined as constants in {@link KeyEvent}.<del>* Returns the set of modifiers that, combined with the key, trigger this shortcut.<add>* Returns the set of modifiers that, combined with the key, trigger this shortcut. These can<add>* be a combination of {@link KeyEvent#META_CTRL_ON}, {@link KeyEvent#META_SHIFT_ON},<add>* {@link KeyEvent#META_META_ON}, {@link KeyEvent#META_ALT_ON},<add>* {@link KeyEvent#META_FUNCTION_ON} and {@link KeyEvent#META_SYM_ON}.
te	del	<mask>slidinguppanel/SlidingUpPanelLayout.java<add>slidinguppanel/SlidingUpPanelLayout.java<del>if (mDragHelper.continueSettling(true)) {<add>if (mDragHelper != null && mDragHelper.continueSettling(true)) {
te	del	<mask>am/ActivityStack.java<add>am/ActivityStack.java<del>finishActivityLocked(r, Activity.RESULT_CANCELED, null, "force-stop", true);<add>if (finishActivityLocked(r, Activity.RESULT_CANCELED, null, "force-stop",<add>true)) {<add>// r has been deleted from mActivities, accommodate.<add>--numActivities;<add>--activityNdx;<add>}
te	add	<del>support/Expressions.java<add>support/Expressions.java<add>import com.mysema.query.types.expr.NumberOperation;<mask>@SuppressWarnings("unchecked")<add>public static <add>return NumberOperation.create(type, operator, args);<add>}<add>
te	add	<del>proto/EnumType.java<add>proto/EnumType.java<mask>/** An enum constant. */
te	add	<del>attribute/UnixAttributeProvider.java<add>attribute/UnixAttributeProvider.java<add>// TODO(cgdecker): Since we can now guarantee that the owner/group for an inode are our own<add>// implementation of UserPrincipal/GroupPrincipal, it would be nice to have them store a unique<mask>// ID themselves and just get that rather than doing caching here. Then this could be a singleton<add>// like the rest of the AttributeProviders. However, that would require a way for the owner/posix<add>// providers to create their default principals using the lookup service for the specific file<add>// system.<add>
te	add	<del>wizard/AbstractWizard.java<add>wizard/AbstractWizard.java<add>protected JButton getHelpButton() {<add>return myHelpButton;<mask>}<add>
te	del	<del>actionSystem/AnActionEvent.java<add>actionSystem/AnActionEvent.java<mask>* @deprecated use {@link #getData} instead<del>
te	add	<del>results/MessageResult.java<mask>results/MessageResult.java<del>import com.google.gson.Gson;<del>public String getHighlightRangesAsJson() {<del>return new Gson().toJson(getHighlightRanges());<add>public boolean hasHighlightedFields() {<add>return highlightRanges != null;<add>}<add><add>public HighlightedField getHighlightedField(String field) {<add>return new HighlightedField(this, field);
te	del	<del>integration/TestInvoicePayment.java<add>integration/TestInvoicePayment.java<del>Boolean foo = true;<mask>System.out.println(Boolean.TRUE.equals(foo) ? "trye" : false);<add>
te	del	<del>messagelist/MessageListFragment.java<add>messagelist/MessageListFragment.java<add>private LoadConversationTask mLoadConversationTask;<del>Log.d(TAG, "onOpenConversation with threadId: " + mThreadId);<mask>new LoadConversationTask().execute((Void[]) null);<add>new LoadConversationTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, null);<add>public LoadConversationTask() {<add>Log.d(TAG, "LoadConversationTask");<add>}<add>
te	del	<mask>properties/ConfigurationPropertiesBindingPostProcessorTests.java<add>properties/ConfigurationPropertiesBindingPostProcessorTests.java<add>import org.junit.Ignore;<add>@Ignore("WIP")
te	del	<del>shard/IndexShard.java<add>shard/IndexShard.java<mask>logger.debug("shard is now inactive");<add>logger.debug("marking shard as inactive (inactive_time=[{}]) indexing wise", inactiveTime);
te	add	<del>util/Utils.java<add>util/Utils.java<mask>import static org.atmosphere.cpr.ApplicationConfig.SUSPENDED_ATMOSPHERE_RESOURCE_UUID;<add>public static final AtmosphereResource websocketResource(AtmosphereResource r) {<add>String parentUUID = (String) AtmosphereResourceImpl.class.cast(r).getRequest(false).getAttribute(SUSPENDED_ATMOSPHERE_RESOURCE_UUID);<add>if (parentUUID != null) {<add>r = r.getAtmosphereConfig().resourcesFactory().find(parentUUID);<add>}<add>return r;<add>}<add>
te	add	<del>sftp/SftpSimpleConsumeAbsoluteTest.java<add>sftp/SftpSimpleConsumeAbsoluteTest.java<add>@Override<add>protected boolean canTest() {<add>// cannot test on windows<add>return super.canTest() && !isPlatform("windows");<add>}<mask><del><del>if (isPlatform("windows")) {<del>answer = answer.replace('\\', '/');<del>}<del>
te	del	<mask>customcontrols/SCScrollPane.java<add>customcontrols/SCScrollPane.java<del>view.setOpaque(false);
te	add	<del>ha/TransactionConstraintsIT.java<add>ha/TransactionConstraintsIT.java<add>private static final int SLAVE_ONLY_ID = 1;<add><del>.withInstanceSetting( HaSettings.slave_only,  (serverId) -> serverId == 1 ? "true" : "false" );<add>.withInstanceSetting( HaSettings.slave_only,  (serverId) -> serverId == SLAVE_ONLY_ID ? "true" : "false" );<del>assertEquals( 1, cluster.getServerId( db ).toIntegerIndex() );<mask>assertEquals( SLAVE_ONLY_ID, cluster.getServerId( db ).toIntegerIndex() );
te	add	<del>textservice/TextServicesManager.java<add>textservice/TextServicesManager.java<add>" settings.");<add><mask>if (referToSpellCheckerLanguageSettings && !isSpellCheckerEnabled()) {<add>return null;<add>}<add>
te	add	<del>store/ImapStore.java<add>store/ImapStore.java<add><add>try<add>{<add>Security.setProperty("networkaddress.cache.negative.ttl", "0");<add>}<add>catch (Exception e)<add>{<add>Log.w(K9.LOG_TAG, "Could not set DNS negative ttl to 0 for " + getLogId(), e);<mask>}<add><add><add>
te	add	<del>test/DirectiveBasedActionUtils.java<add>test/DirectiveBasedActionUtils.java<del>if (input.startsWith(prefix)) {<mask>if (input.startsWith(prefix) || input.isEmpty()) {
te	del	<mask>proxy/MapProxySupport.java<add>proxy/MapProxySupport.java<del>// avoid second deserialization after returning from this method<add>// return cached value<add>// this ensures the same behavior of a get() call which had to fetch the value and any following get() calls<add>// this also avoids a second deserialization if the near cache in-memory format is OBJECT
te	add	<del>changeSignature/JetChangeSignatureTest.java<mask>changeSignature/JetChangeSignatureTest.java<del>KotlinTestUtils.assertEqualsToFile(new File(afterFilePath), getEditor());<add>KotlinTestUtils.assertEqualsToFile(new File(getTestDataPath() + afterFilePath), getEditor());
te	add	<del>util/InstantiationUtil.java<mask>util/InstantiationUtil.java<del>public static Object readObjectFormConfig(Configuration config, String key, ClassLoader cl) throws IOException, ClassNotFoundException {<add>public static Object readObjectFromConfig(Configuration config, String key, ClassLoader cl) throws IOException, ClassNotFoundException {
te	add	<del>quickfix/CreateMethodFromUsageFix.java<mask>quickfix/CreateMethodFromUsageFix.java<del>NamespaceDescriptor namespaceDescriptor = currentFileContext.get(BindingContext.FILE_TO_NAMESPACE, containingFile);<add>NamespaceDescriptor namespaceDescriptor = currentFileContext.get(BindingContext.FILE_TO_NAMESPACE, currentFile);
te	add	<del>map/EntryProcessorTest.java<add>map/EntryProcessorTest.java<add>import java.io.Serializable;<add>public static class EntryInc extends AbstractEntryProcessor<add><add>@Override<add>public Object process(final Map.Entry<add>final SimpleValue value = entry.getValue();<mask>value.i++;<add>return null;<add>}<add>}<add>
te	add	<del>net/Nio2Endpoint.java<mask>net/Nio2Endpoint.java<add>// Channel will be null when socket is being closed.
te	del	<mask>lock/ConditionTest.java<add>lock/ConditionTest.java<add>// See #3262
te	add	<del>shinebuttonlib/ShineButton.java<add>shinebuttonlib/ShineButton.java<del><add>calPixels();<add>}<add><mask>private void calPixels() {
te	add	<del>task/ShellBolt.java<add>task/ShellBolt.java<del>} else {<del>throw new RuntimeException("Cannot write object to bolt:\n" + write.toString());<mask>} else if (write != null) {<add>throw new RuntimeException("Unknown class type to write: " + write.getClass().getName());
te	add	<del>version/LoanBrokerServerTest.java<add>version/LoanBrokerServerTest.java<del>import org.apache.camel.TestSupport;<mask>import org.apache.camel.test.junit4.TestSupport;
te	add	<del>wm/AppWindowAnimator.java<mask>wm/AppWindowAnimator.java<del>mAnimator = atoken.mAnimator;<add>mAnimator = mService.mAnimator;
te	add	<del>cli/CommandLineClient.java<add>cli/CommandLineClient.java<mask>out.println("  log [<add>out.println("      Print to STDOUT information stored in the local database about the given file paths or");<add>out.println("      all paths known by the database if no path is given. The output format is unstable and");<add>out.println("      might change in future releases.");<add>out.println();
te	add	<del>impl/LayoutSceneImpl.java<add>impl/LayoutSceneImpl.java<del>gc.setColor(new Color(mParams.getCustomBackgroundColor()));<mask>gc.setColor(new Color(mParams.getCustomBackgroundColor(), true));
te	add	<del>local/LocalTransferManager.java<mask>local/LocalTransferManager.java<del>private File getRemoteFile(RemoteFile remoteFile) {<del>return new File(getRemoteFilePath(remoteFile.getClass()), remoteFile.getName());<del>}<del><add>@Override<add>private File getRemoteFile(RemoteFile remoteFile) {<add>return new File(getRemoteFilePath(remoteFile.getClass()), remoteFile.getName());<add>}<add>
te	del	<mask>language/Russian.java<add>language/Russian.java<del>//            WordRepeatRule.class,<add>WordRepeatRule.class,
te	del	<del>bootstrap/BootstrapInfo.java<add>bootstrap/BootstrapInfo.java<del>import java.util.Collections;<del>import java.util.Set;<mask><del><del>/**<del>* Returns set of insecure plugins.<del>* <del>* These are plugins with unresolved issues in third-party libraries,<del>* that require additional privileges as a workaround.<del>*/<del>public static Set<del>return Collections.unmodifiableSet(Security.SPECIAL_PLUGINS.keySet());<del>}
te	add	<del>vertices/AbstractVertex.java<mask>vertices/AbstractVertex.java<add><add>/*<add>* This silences a static analysis warning about overridding equals without<add>* overridding hashcode.<add>*/<add>@Override<add>public int hashCode() {<add>return super.hashCode();<add>}
te	del	<del>net/NioEndpoint.java<add>net/NioEndpoint.java<mask>} catch (SocketTimeoutException sx) {<del>// Ignore: Normal condition
te	del	<mask>gcviewer/GCDocument.java<add>gcviewer/GCDocument.java<add>modelChart.resetPolygonCache();
te	add	<del>header/AbstractHeaderCheck.java<add>header/AbstractHeaderCheck.java<add>import java.util.regex.Pattern;<mask>/** Pattern to detect occurrences of '\n' in text */<add>private static final Pattern ESCAPED_LINE_FEED_PATTERN = Pattern.compile("\\\\n");<del>final String headerExpandedNewLines = header.replaceAll("\\\\n", "\n");<add>final String headerExpandedNewLines = ESCAPED_LINE_FEED_PATTERN<add>.matcher(header).replaceAll("\n");
te	del	<del>posts/EditPostActivity.java<add>posts/EditPostActivity.java<mask>if (shouldShowLocation) {<add>if (mEditPostSettingsFragment.isAdded() && shouldShowLocation) {
te	add	<del>ui/BaseUserAdapter.java<add>ui/BaseUserAdapter.java<del>ProfileActivity.makeIntent(user, context);<mask>context.startActivity(ProfileActivity.makeIntent(user, context));
te	del	<del>repo/GitRepositoryReader.java<add>repo/GitRepositoryReader.java<mask>if (!file.isDirectory()) {<add>if (!file.isDirectory() && !file.getName().equalsIgnoreCase(GitRepositoryFiles.HEAD)) {
te	add	<del>api/RequestBuilders.java<mask>api/RequestBuilders.java<del>protected boolean _strictJsonCompliance = false;<add>protected boolean _strictJsonCompliance = true;
te	add	<del>activity/MessageList.java<add>activity/MessageList.java<del>controller.listLocalMessages(mAccount, mFolderName,  mAdapter.mListener);<mask>controller.listLocalMessagesSynchronous(mAccount, mFolderName,  mAdapter.mListener);
te	add	<del>server/NotificationManagerService.java<add>server/NotificationManagerService.java<add>import android.storage.StorageManager;<mask><add>StorageManager sm = (StorageManager) context.getSystemService(Context.STORAGE_SERVICE);<add>sm.registerListener(new com.android.internal.app.StorageNotification(context));<add>
te	add	<del>mongodb/SecondaryReadTest.java<add>mongodb/SecondaryReadTest.java<add>import org.junit.Ignore;<mask>@Ignore
te	add	<del>metadata/JsonMarshallerTests.java<mask>metadata/JsonMarshallerTests.java<del>System.out.println(outputStream);
te	add	<del>api/RequestServer.java<add>api/RequestServer.java<del>Request.addToNavbar(registerRequest(new GainsLiftTable()),"Gains/Lift Table (Beta)","Score");<mask>Request.addToNavbar(registerRequest(new GainsLiftTable()),  "Gains/Lift Table",     "Score");
te	add	<del>opengl/PGL.java<mask>opengl/PGL.java<del>protected static final String GLSL_ID_REGEX = "(?<add>protected static final String GLSL_ID_REGEX = "(?
te	add	<del>query/Join.java<add>query/Join.java<add>/**<add>* Usually you don't need this value; just in case you are mixing custom<mask>* {@link de.greenrobot.dao.query.WhereCondition.StringCondition} into the query, this value allows to reference<add>* the joined (target) table.<add>*/<add>public String getTablePrefix() {<add>return tablePrefix;<add>}
te	add	<del>application/CommandLineParserTest.java<add>application/CommandLineParserTest.java<del>assertThat(p).hasSize(2);<mask><add>// test environment can already declare some system properties prefixed by "sonar."<add>// so we can't test the exact number "2"<add>assertThat(p.size()).isGreaterThanOrEqualTo(2);
te	del	<mask>junit/ScenarioRunner.java<add>junit/ScenarioRunner.java<del>return Description.createSuiteDescription(step.getKeyword() + step.getName());<add>// use scenario and step as class and method names (in order to generate useable JUnit reports)<add>String className = getName();<add>String methodName = step.getKeyword() + step.getName();<add>String formattedDescription = String.format("%s(%s)", methodName, className);<add>return Description.createSuiteDescription(formattedDescription);
te	add	<del>resultset/ResultSetViewer.java<add>resultset/ResultSetViewer.java<mask>if (!checkForChanges()) {<add>return;<add>}<add>
te	add	<del>sqlite/SQLiteDatabase.java<add>sqlite/SQLiteDatabase.java<add>// STOPSHIP enclose the following warnings with "if (SQLiteDebug.DEBUG_SQL_CACHE)"<add>Log.d(TAG, "Here are the SQL statements in Cache of database: " + mPath);<add>for (String s : mCompiledQueries.keySet()) {<add>Log.d(TAG, "Sql stament in Cache: " + s);<mask>}
te	add	<del>execution/MavenResolveToWorkspaceTest.java<add>execution/MavenResolveToWorkspaceTest.java<del>import com.intellij.openapi.util.text.StringUtil;<add>import com.intellij.openapi.application.AccessToken;<mask>import com.intellij.openapi.application.WriteAction;<add>import com.intellij.openapi.roots.ProjectRootManager;<del>import java.io.*;<add>import java.io.BufferedInputStream;<add>import java.io.FileInputStream;<add>import java.io.IOException;<add>import java.io.InputStream;<add>AccessToken accessToken = WriteAction.start();<add>try {<add>ProjectRootManager.getInstance(myProject).setProjectSdk(createJdk("Java 1.5"));<add>}<add>finally {<add>accessToken.finish();<add>}<add>
te	add	<del>imap/ImapFolderPusher.java<mask>imap/ImapFolderPusher.java<add><add>connection = null;
te	add	<del>scanner/Scanner.java<add>scanner/Scanner.java<add>// ZAP: 2015/12/14 Prevent scans from becoming in undefined state<del>scan(target);<add>try {<add>scan(target);<del>pool.waitAllThreadComplete(0);<del>notifyScannerComplete();<add>pool.waitAllThreadComplete(0);<mask>} catch (Exception e) {<add>log.error("An error occurred while active scanning:", e);<add>} finally {<add>notifyScannerComplete();<add>}
te	del	<mask>calendardatepicker/CalendarDatePickerDialog.java<add>calendardatepicker/CalendarDatePickerDialog.java<del>if (mThemeDark) {<add>if (mThemeDark && mDayOfWeekView != null) {
te	del	<del>output/OpenTSDBWriterTests.java<add>output/OpenTSDBWriterTests.java<del>import java.io.*;<add>import java.io.BufferedReader;<add>import java.io.ByteArrayOutputStream;<add>import java.io.DataOutputStream;<add>import java.io.IOException;<add>import java.io.InputStreamReader;<add>import java.io.OutputStream;<mask>import static com.google.common.collect.ImmutableList.*;<del>import static org.assertj.core.api.Assertions.*;<add>import static com.google.common.collect.ImmutableList.of;<add>import static org.assertj.core.api.Assertions.assertThat;
te	del	<del>widget/RemoteViewsAdapter.java<add>widget/RemoteViewsAdapter.java<del>if (mNotifyDataSetChangedAfterOnServiceConnected) {<del>return;<del>}<mask>
te	del	<del>swipe/SwipeLayout.java<add>swipe/SwipeLayout.java<del>DragEdge currentDragEdge = null;<del>try {<del>currentDragEdge = mCurrentDragEdge;<mask>} catch (Exception e) {<del>e.printStackTrace();<del>}<add>DragEdge currentDragEdge = mCurrentDragEdge;
te	del	<mask>spi/LocalMUCUser.java<add>spi/LocalMUCUser.java<del>// TODO: send error message to user (can't send packets to group you haven't<del>// joined)<add>sendErrorPacket(packet, PacketError.Condition.not_authorized);
te	del	<mask>server/HttpServerExchange.java<add>server/HttpServerExchange.java<del>StreamSinkChannel channel = gatedResponseChannel;<add>StreamSinkChannel channel = new HttpResponseChannel(gatedResponseChannel, bufferPool.allocate(), this);
te	add	<del>swift/SwiftOSXBinaryIntegrationTest.java<add>swift/SwiftOSXBinaryIntegrationTest.java<add>import org.junit.Ignore;<mask>@Ignore("t10220393")<add>@Ignore("t10220393")
te	del	<del>file/FileTreeWatcherTest.java<add>file/FileTreeWatcherTest.java<add>import static org.mockito.Mockito.timeout;<mask>verify(notificationHandler).started(eq(testDirectory));<add>verify(notificationHandler, timeout(10000)).started(eq(testDirectory));<del>verify(notificationHandler).errorOccurred(eq(testDirectory), eq(error));<add>verify(notificationHandler, timeout(10000)).errorOccurred(eq(testDirectory), eq(error));<del>}<add>}
te	del	<del>distributed/ODistributedServerManager.java<add>distributed/ODistributedServerManager.java<del>private ODistributedServerDiscoverySignaler									discoverySignaler;<del>private ODistributedServerDiscoveryListener									discoveryListener;<mask>private ODistributedServerLeaderChecker											leaderCheckerTask;<add>private volatile ODistributedServerDiscoverySignaler				discoverySignaler;<add>private volatile ODistributedServerDiscoveryListener				discoveryListener;<add>private volatile ODistributedServerLeaderChecker						leaderCheckerTask;
te	add	<del>view/Cas30ResponseView.java<mask>view/Cas30ResponseView.java<del>* Renders and prepares CAS2 views. This view is responsible<add>* Renders and prepares CAS3 views. This view is responsible
te	add	<del>services/XmppConnectionService.java<add>services/XmppConnectionService.java<add>mJingleConnectionManager.cancelInTransmission();<del>mMessageArchiveService.executePendingQueries(account);<mask>mMessageArchiveService.executePendingQueries(account);<del>mJingleConnectionManager.cancelInTransmission();
