tr	True	Fix caching of receivers<add>network/ChannelManager.java<add>this.receiverCache.put(sourceChannelID, receiverList);<del>network/ChannelManager.java<del>if (channels.containsKey(sourceChannelID)) {<del>this.receiverCache.put(sourceChannelID, receiverList);<del>}
tr	True	restrict auto popup if there is an identifier following cursor<add>assist/RCompletionManager.java<add>if (isValidForRIdentifier(docDisplay_.getCharacterAtCursor()))<add>// Bail if there is an alpha-numeric character<add>// following the cursor<add>if (isValidForRIdentifier(docDisplay_.getCharacterAtCursor()))<add>return false;<add><del>assist/RCompletionManager.java<del>char charAtCursor = docDisplay_.getCharacterAtCursor();<del>if (Character.isLetter(charAtCursor) ||<del>Character.isDigit(charAtCursor))
tr	False	Removed unused SvnCommand constructor<add>engine/RequestHint.java<add>if (myMethodFilter != null && !mySteppedOut) {<del>engine/RequestHint.java<del>if (myMethodFilter != null) {
tr	True	Relax path matching regex even more<add>deeplinkdispatch/DeepLinkEntry.java<add>private static final String PARAM_VALUE = "([a-zA-Z0-9_#'!+%~,\\-\\.\\@\\$\\:]+)";<del>deeplinkdispatch/DeepLinkEntry.java<del>private static final String PARAM_VALUE = "([a-zA-Z0-9_#'!+%~,\\-\\.\\@\\$]+)";
tr	False	do not show invalid breakpoints when rendering gutter events<add>exec/BuildActionParameters.java<del>exec/BuildActionParameters.java<del>import org.gradle.initialization.BuildClientMetaData;<del>BuildClientMetaData getClientMetaData();<del>
tr	False	stop GL drawing thread before killing WebCore<add>extract/ExtractManagedDependenciesAction.java<del>extract/ExtractManagedDependenciesAction.java<del>dependency.getClassifier().undefine();
tr	False	removing duplicated code i just added<add>s3/S3Client.java<add>throw new GradleException("Cannot use S3 since the module 'java.xml.bind' is not available. "<add>+ "Please add \"-addmods java.xml.bind '-Dorg.gradle.jvmargs=-addmods java.xml.bind'\" to your GRADLE_OPTS.");<del>s3/S3Client.java<del>throw new GradleException("Cannot use S3 since the module 'java.xml.bind' is not available. " +<del>"Please add \"-addmods java.xml.bind '-Dorg.gradle.jvmargs=-addmods java.xml.bind'\" to your GRADLE_OPTS.");
tr	False	add randomness init for random node generator<add>gson/Gson.java<add>import java.util.Map;<add>import java.util.ServiceLoader;<add>* such factories using {@link ServiceLoader}.<add>*<add>* <add>* com.google.gson.GsonBuilder gsonBuilder = new com.google.gson.GsonBuilder();<add>* for (TypeAdapterFactory factory : ServiceLoader.load(TypeAdapterFactory.class)) {<add>*   gsonBuilder.registerTypeAdapterFactory(factory);<add>* }<add>*<add>* // Manual registration is also an option<add>* gsonBuilder.registerTypeAdapterFactory(new GsonAdaptersMyDocument());<add>*<add>* com.google.gson.Gson gson = gsonBuilder.create();<add>* <del>gson/Gson.java<del>import java.util.Map;<del>* such factories {@link com.google.gson.Gson}.
tr	False	add cast to float<add>users/UserImpl.java<add>final String type = obj.get("type");<add>final String id = obj.get("id");<add><add>if (type != null && id != null) {<add>startpage.put("type", type);<add>startpage.put("id", id);<add>}<del>users/UserImpl.java<del>startpage.put("type", obj.get("type"));<del>startpage.put("id", obj.get("id"));
tr	True	Reinstantiated ignored test<add>graphdb/TitanEventualGraphTest.java<del>graphdb/TitanEventualGraphTest.java<del>@Ignore
tr	True	prefer shorter names when sorting import candidate list<add>imports/ImportCandidateHolder.java<add>int lRelevance = getRelevance();<add>int rRelevance = rhs.getRelevance();<add>if (rRelevance != lRelevance) {<add>return rRelevance - lRelevance;<add>}<add>// prefer shorter paths<add>if (myPath != null && rhs.myPath != null) {<add>int lDots = StringUtil.isEmpty(myPath) ? -1 : StringUtil.countChars(myPath, '.');<add>int rDots = StringUtil.isEmpty(rhs.myPath) ? -1 : StringUtil.countChars(rhs.myPath, '.');<add>return lDots - rDots;<add>}<add>return 0;<del>imports/ImportCandidateHolder.java<del>return rhs.getRelevance() - getRelevance();
tr	True	Remove some unused code<add>jscomp/JSModule.java<del>jscomp/JSModule.java<del>static final DiagnosticType CIRCULAR_DEPENDENCY_ERROR =<del>DiagnosticType.error("JSC_CIRCULAR_DEP",<del>"Circular dependency detected: {0}");<del>
tr	True	Fix NPE on specific tile entities when the block break event is canceled<add>common/ForgeHooks.java<add>import net.minecraft.network.packet.Packet;<add>Packet pkt = tileentity.getDescriptionPacket();<add>if (pkt != null)<add>{<add>entityPlayer.playerNetServerHandler.sendPacketToPlayer(pkt);<add>}<del>common/ForgeHooks.java<del>entityPlayer.playerNetServerHandler.sendPacketToPlayer(tileentity.getDescriptionPacket());
tr	False	Removed unused method<add>wm/AppWindowAnimator.java<add>toAppAnimator.hasTransformation = transferWinAnimator.mAppAnimator.hasTransformation;<add>if (toAppAnimator.hasTransformation) {<add>toAppAnimator.transformation.set(transferWinAnimator.mAppAnimator.transformation);<add>} else {<add>toAppAnimator.transformation.clear();<add>}<del>wm/AppWindowAnimator.java
tr	True	Implement POJO display cutoff for DL<add>deeplearning/DeepLearningModel.java<add>@Override protected boolean toJavaCheckTooBig() { return (model_info.size() > 1e6); }<add><del>deeplearning/DeepLearningModel.java
tr	False	Moving closureCheckGetCssName pass to before the later transpilation step<add>themes/ThemeBrowserFragment.java<add>protected static final int THEME_FILTER_ALL_INDEX = 0;<add>protected static final int THEME_FILTER_FREE_INDEX = 1;<add>protected static final int THEME_FILTER_PREMIUM_INDEX = 2;<add><add>case THEME_FILTER_PREMIUM_INDEX:<add>case THEME_FILTER_FREE_INDEX:<add>case THEME_FILTER_ALL_INDEX:<del>themes/ThemeBrowserFragment.java<del>case 2:<del>case 1:<del>case 0:
tr	False	fix a couple javadoc warnings<add>engine/VariableContext.java<add>if (!entry.getKey().equals(name)) {<del>engine/VariableContext.java<del>if (entry.getKey().equals(name)) {
tr	True	add delete users resources<add>users/UsersResource.java<add>@DELETE<add>@Path("{username}")<add>@RequiresPermissions(RestPermissions.USERS_EDIT)<add>public Response deleteUser(@PathParam("username") String username) {<add>final User user = User.load(username, core);<add>if (user.isReadOnly()) {<add>throw new BadRequestException("Cannot delete readonly user " + username);<add>}<add><add>user.destroy();<add>return Response.noContent().build();<add>}<add><del>users/UsersResource.java
tr	True	add shell bolt pending limit in fresh branch<add>storm/Config.java<add>* Max pending tuples in one ShellBolt<add>*/<add>public static final String TOPOLOGY_SHELLBOLT_MAX_PENDING="topology.shellbolt.max.pending";<add>public static final Object TOPOLOGY_SHELLBOLT_MAX_PENDING_SCHEMA = Number.class;<add><add>/**<del>storm/Config.java
tr	False	changed keyword self lookup to use RT get<add>plan/Channel.java<add>case NONE: // excluded by sanity check. left here for verification check completion<add>case PARTITION_FORCED_REBALANCE:<del>plan/Channel.java<del>case NONE: // excluded by sanity check. lust here for verification check completion
tr	True	Return the actual interpolator of the ViewPropertyAnimator<add>view/ViewPropertyAnimator.java<add>* A lazily-created ValueAnimator used in order to get some default animator properties<add>* (duration, start delay, interpolator, etc.).<add>*/<add>private ValueAnimator mTempValueAnimator;<add><add>/**<add>if (mTempValueAnimator == null) {<add>mTempValueAnimator = new ValueAnimator();<add>}<add>return mTempValueAnimator.getDuration();<add>if (mInterpolatorSet) {<add>return mInterpolator;<add>} else {<add>// Just return the default from ValueAnimator, since that's what we'd get if<add>// the value has not been set otherwise<add>if (mTempValueAnimator == null) {<add>mTempValueAnimator = new ValueAnimator();<add>}<add>return mTempValueAnimator.getInterpolator();<add>}<del>view/ViewPropertyAnimator.java<del>return new ValueAnimator().getDuration();<del>return null;
tr	False	trying to fix windows test<add>dev/RuleOverview.java<add>if (lang.isVariant()) {<add>continue;<add>}<del>dev/RuleOverview.java
tr	False	Added comic fields<add>bytecodeviewer/BytecodeViewer.java<add>container.files.put(cn.name + ".class", bytes);<del>bytecodeviewer/BytecodeViewer.java<del>container.files.put(fn, bytes);
tr	False	Don t return a NamingContext if the binder service returns null<add>parsing/JsDocInfoParser.java<add>if (token != JsDocToken.LEFT_CURLY) {<add>parser.addParserWarning("msg.jsdoc.suppress",<add>stream.getLineno(), stream.getCharno());<add>} else {<del>parsing/JsDocInfoParser.java<del>if (token == JsDocToken.LEFT_CURLY) {
tr	False	fix some things about IHeatable<add>hikari/TestMetrics.java<add>config.setInitializationFailFast(false);<add>config.setInitializationFailFast(false);<del>hikari/TestMetrics.java
tr	False	Fixed a couple texture paths<add>server/ConnectionSSLSessionInfo.java<add>serverConnection.getOriginalSinkConduit().flush();<del>server/ConnectionSSLSessionInfo.java
tr	False	removed debug search left sect optimal width<add>changeSignature/OverriderUsageInfo.java<add>import org.jetbrains.annotations.Nullable;<add>/**<add>* @deprecated use {@link #getOverridingMethod()} instead<add>*/<add>@Nullable<add>@Override<add>public PsiMethod getElement() {<add>return (PsiMethod)super.getElement();<add>}<add><del>changeSignature/OverriderUsageInfo.java
tr	True	Send the right stream to the volume UI on tablet changes<add>audio/AudioService.java<add>streamType = mStreamVolumeAlias[streamType];<del>audio/AudioService.java<del>if (!isPlatformVoice() && (streamType == AudioSystem.STREAM_RING)) {<del>streamType = AudioSystem.STREAM_NOTIFICATION;<del>} else {<del>streamType = mStreamVolumeAlias[streamType];<del>}
tr	False	update node status if it becomes healthy again<add>resolveengine/DependencyGraphBuilder.java<add>// If not, then remove our incoming edges, which triggers them to be moved across to the selected configuration<del>resolveengine/DependencyGraphBuilder.java<del>// If not, then move our incoming edges across to the selected configuration
tr	False	add delete users resources<add>server/BluetoothService.java<add>// Continental Automotive, Harman/Becker, Panasonic/Kyushu Ten,<add>// BMW (Motorola PCS)<add>"00:0A:30", "00:1E:AE", "00:1C:D7", "00:80:F0", "00:12:8A"<del>server/BluetoothService.java<del>// Continental Automotive, Harman/Becker, Panasonic/Kyushu Ten<del>"00:0A:30", "00:1E:AE", "00:1C:D7", "00:80:F0"
tr	True	change default web path relative to make web UI work without parameter change<add>http/GHServer.java<add>resHandler.setResourceBase(args.get("jetty.resourcebase", "./web/src/main/webapp"));<del>http/GHServer.java<del>resHandler.setResourceBase(args.get("jetty.resourcebase", "./src/main/webapp"));
tr	True	Fix BatchingPageCache to use always a SYNCHRONOUS writer for the CountsStore<add>store/BatchingPageCache.java<add>import org.neo4j.kernel.impl.store.StoreFactory;<add>// This is a hack necessary to make sure that we write to disk immediately the changes to the<add>// counts store since we circumvent the page cache to read the counts<add>Writer writer = file.getName().contains( StoreFactory.COUNTS_STORE )<add>? SYNCHRONOUS.create( channel, monitor )<add>: writerFactory.create( channel, monitor );<add>BatchingPagedFile pageFile = new BatchingPagedFile( channel, writer, pageSize );<del>store/BatchingPageCache.java<del>BatchingPagedFile pageFile = new BatchingPagedFile( channel,<del>writerFactory.create( channel, monitor ), pageSize );
tr	True	Fixing up the standalone activity<add>phonegap/StandAlone.java<add>import android.app.Activity;<del>phonegap/StandAlone.java<del>import java.lang.reflect.Field;<del>
tr	False	overload AbstractStaticMethodInvocation setPattern Pattern with AbstractStaticMethodInvocation setPattern String<add>titan/FaunusTitanGraph.java<add>import com.thinkaurelius.titan.graphdb.database.idhandling.IDHandler;<add>FaunusVertexRelationLoader loader = new FaunusVertexRelationLoader(IDHandler.getKeyID(row.left.duplicate()));<del>titan/FaunusTitanGraph.java<del>FaunusVertexRelationLoader loader = new FaunusVertexRelationLoader(row.left.duplicate());
tr	True	Check the return value of listFiles on the ifw directory<add>firewall/IntentFirewall.java<add>if (files != null) {<add>for (int i=0; i<add>File file = files[i];<add>if (file.getName().endsWith(".xml")) {<add>readRules(file, resolvers);<add>}<del>firewall/IntentFirewall.java<del>for (int i=0; i<del>File file = files[i];<del>if (file.getName().endsWith(".xml")) {<del>readRules(file, resolvers);
tr	True	Tweak exception handling<add>metadata/TableHandleJacksonModule.java<add>Throwables.propagateIfInstanceOf(e.getCause(), IOException.class);<add>Throwables.propagateIfInstanceOf(e.getCause(), JsonGenerationException.class);<del>metadata/TableHandleJacksonModule.java
tr	False	do not set connection with property that user have not specified<add>engine/VariableContext.java<add>if (!entry.getKey().equals(name)) {<del>engine/VariableContext.java<del>if (entry.getKey().equals(name)) {
tr	True	Fix an NPE when adding short SIP contacts<add>sip/ContactSipImpl.java<add>if (from.startsWith("sip:"))<add>{<add>return from.substring(4);<add>}<add>else if (from.startsWith("sips:"))<add>{<add>return from.substring(5);<add>}<del>sip/ContactSipImpl.java<del>int i = from.substring(0, 5).indexOf(':');<del>if(from.startsWith("sip") && i > 0)<del>return from.substring(i + 1);
tr	False	Added Chromium to fallback browsers list<add>util/RandomUtils.java<add>* <add>return min + new Random().nextInt(max - min);<del>util/RandomUtils.java<del>* <del><del>Random random = new Random();<del>return min + random.nextInt(max - min);
tr	True	Fixed minor typo<add>support/StandardEvaluationContext.java<add>* <del>support/StandardEvaluationContext.java<del>* 
tr	False	add null check to copy selection<add>interceptor/TransactionAspectSupport.java<add>* Clear the cache.<add>this.beanFactory = null;<del>interceptor/TransactionAspectSupport.java<del>* Clear the cached transaction managers.
tr	False	collect statistics from created field types as well as variables<add>db/ColumnFamilyStoreTest.java<add>cfs.truncateBlocking();<del>db/ColumnFamilyStoreTest.java<del>cfs.clearUnsafe();
tr	True	add IAE around frames in condition<add>rapids/AST.java<add>if (captured.isAry()) throw new IllegalArgumentException("Frames not supported in the if's condition.");<del>rapids/AST.java
tr	True	add bike option<add>core/WalkOptions.java<add>public boolean bicycle;<add>this.bicycle = false;<del>core/WalkOptions.java
tr	True	Remove references to framework PointerIcon API<add>view/PointerIconCompatApi24.java<add>return null;<add>return null;<del>view/PointerIconCompatApi24.java<del>return PointerIcon.createCustomIcon(bitmap, hotSpotX, hotSpotY);<del>return PointerIcon.loadCustomIcon(resources, resourceId);
tr	False	Fix quality flaws<add>util/SchemaResolver.java<add>import java.util.Map;<add>protected final Map<del>util/SchemaResolver.java<del>protected final HashMap
tr	True	Removed default libs dependency for zip and tar tasks<add>plugins/JavaPlugin.java<add>jar.dependsOn(PROCESS_RESOURCES_TASK_NAME);<add>jar.dependsOn(COMPILE_TASK_NAME);<del>plugins/JavaPlugin.java<del>task.dependsOn(LIBS_TASK_NAME);<del>task.dependsOn(LIBS_TASK_NAME);
tr	True	Added missing put key in RemoveVec<add>api/RemoveVec.java<add>import water.DKV;<add>DKV.put(source._key, source,fs);<del>api/RemoveVec.java
tr	False	Fix BatchingPageCache to use always a SYNCHRONOUS writer for the CountsStore<add>morfologik/MorfologikSpeller.java<del>morfologik/MorfologikSpeller.java<del>//    boolean isAlphabetic = true;<del>//    if (word.length() == 1) { // dictionaries usually do not contain punctuation<del>//      isAlphabetic = StringTools.isAlphabetic(word.charAt(0));<del>//    }<del>//            && isAlphabetic<del>//            && !containsDigit(word)<del>//            && !speller.isInDictionary(word)<del>//            && !(!StringTools.isMixedCase(word)<del>//                && speller.isInDictionary(word.toLowerCase(conversionLocale)));
tr	False	pre calculate resulting LinkedHashSet size<add>view/Display.java<del>view/Display.java<del><del>final CompatibilityInfo ci = mCompatibilityInfo.getIfNeeded();<del>if (ci != null) {<del>ci.applyToDisplayMetrics(outMetrics);<del>}
tr	False	Don t create immutable wrapper for empty lists<add>media/AudioFormat.java<add>/** Audio data format: PCM 16 bit per sample. Guaranteed to be supported by devices. */<add>/** Audio data format: PCM 8 bit per sample. Not guaranteed to be supported by devices. */<del>media/AudioFormat.java<del>/** Audio data format: PCM 16 bit per sample */<del>/** Audio data format: PCM 8 bit per sample */
tr	False	Don t create immutable wrapper for empty lists<add>ingest/IngestProxyActionFilter.java<add>import org.elasticsearch.common.Randomness;<add>private final AtomicInteger randomNodeGenerator = new AtomicInteger(Randomness.get().nextInt());<del>ingest/IngestProxyActionFilter.java<del>private final AtomicInteger randomNodeGenerator = new AtomicInteger();
tr	True	Remove unnecessary return s Clean up QueryStringDecoder<add>upload/HttpUploadServerInitializer.java<del>upload/HttpUploadServerInitializer.java<del><del>return;
tr	False	SMALLFIX Add back a method required<add>tasks/Sync.java<add>* Synchronizes the contents of a destination directory with some source directories and files.<add>* <add>* This task is like the {@link Copy} task, except the destination directory will only contain the files<add>* copied. All files that exist in the destination directory will be deleted before copying files, unless<add>* a {@link #preserve(Action)} is specified.<add>*<add>* <add>* Examples:<add>* // Sync can be used like a Copy task<add>* // See the Copy documentation for more examples<add>* // You can preserve output that already exists in the<add>* // destination directory. Files matching the preserve<add>* // filter will not be deleted.<add>*     into 'dest'<add>* Returns the filter that defines which files to preserve in the destination directory.<add>* Configures the filter that defines which files to preserve in the destination directory.<del>tasks/Sync.java<del>* Synchronises the contents of a destination directory with some source directories and files.<del>* <del>* // for preserve<del>*     into 'dest'<del>* Returns the filter that defines what files to preserve in the destination directory<del>* Configures the filter that defines what files to preserve in the destination directory.
tr	False	Fixed ParseDataset to remove job when done<add>cluster/Zone.java<add>if(!first.equals(second)) {<del>cluster/Zone.java<del>if(first != second) {
tr	True	Correct some documentation in SquidCursorAdapter<add>utility/SquidCursorAdapter.java<add>* Constructs a SquidCursorAdapter that will use the model class's default id property to implement<add>* {@link #getItemId(int)}.<add>* @see #SquidCursorAdapter(Context, AbstractModel, Property)<del>utility/SquidCursorAdapter.java<del>* Equivalent to SquidCursorAdapter(context, model, null). Should be used for TableModel cursors where the _id<del>* column is present.
tr	True	Fix potential deadlock in CDC state tracking<add>commitlog/CommitLogSegment.java<add>Object cdcStateLock = new Object();<add>synchronized(cdcStateLock)<del>commitlog/CommitLogSegment.java<del>synchronized(this)
tr	True	Fixed MTL loader bug when handling Tr d statement<add>plugins/MTLLoader.java<add>color.a = alpha;<del>plugins/MTLLoader.java<del>color.a = scan.nextFloat();
tr	True	Inspect page workaround for temporary lack of type info<add>api/Inspect.java<add>Freezable f;<add>try {<add>f = val.get();<add>} catch(Exception ex) {<add>// data is not a Freezable, ignore until next version of types<add>f = null;<add>}<del>api/Inspect.java<del>Freezable f = val.get();
tr	True	Ignore illegal state exception support info<add>xprivacy/XActivityThread.java<add>} catch (IllegalStateException ignored) {<add>// No receivers for action ...<del>xprivacy/XActivityThread.java
tr	True	Fixed issues on IO connections at server side<add>binary/OBinaryNetworkProtocolAbstract.java<add>} catch (IOException e) {<del>binary/OBinaryNetworkProtocolAbstract.java<del>} catch (EOFException e) {<del>handleConnectionError(channel, e);<del>sendShutdown();<del>} catch (SocketException e) {
tr	False	Fixed documentation of parameter<add>consumer/HealthCountsStreamTest.java<add>Thread.sleep(500);<del>consumer/HealthCountsStreamTest.java<del>Thread.sleep(100);
tr	False	Defaults ScribeCollector to NOOP_METRICS<add>ninja/Context.java<add>import ninja.bodyparser.BodyParserEngineXml;<add>* {@link BodyParserEngineJson} {@link BodyParserEngineXml}<add>* and {@link BodyParserEngineManager}<del>ninja/Context.java<del>* {@link BodyParserEngineJson} and {@link BodyParserEngineManager}
tr	False	Fixing a bug with the TextToSpeech speech queue processing<add>audio/AudioService.java<add>streamType = mStreamVolumeAlias[streamType];<del>audio/AudioService.java<del>if (!isPlatformVoice() && (streamType == AudioSystem.STREAM_RING)) {<del>streamType = AudioSystem.STREAM_NOTIFICATION;<del>} else {<del>streamType = mStreamVolumeAlias[streamType];<del>}
tr	True	modify EVERY_MESSAGE to EVERY_NOTIFICATION<add>apns/ReconnectPolicy.java<add>EVERY_NOTIFICATION {<del>apns/ReconnectPolicy.java<del>EVERY_MESSAGE {
tr	True	added public access modifier to Parameter member<add>tiled/TmxMapLoader.java<add>public boolean yUp = true;<del>tiled/TmxMapLoader.java<del>boolean yUp = true;
tr	False	Align error handling for being unable to send the preface with the other error handling in this method<add>rx/Observable.java<del>rx/Observable.java<del>
tr	False	Reinstantiated ignored test<add>titan/FaunusTitanGraph.java<add>import com.thinkaurelius.titan.graphdb.database.idhandling.IDHandler;<add>FaunusVertexRelationLoader loader = new FaunusVertexRelationLoader(IDHandler.getKeyID(row.left.duplicate()));<del>titan/FaunusTitanGraph.java<del>FaunusVertexRelationLoader loader = new FaunusVertexRelationLoader(row.left.duplicate());
tr	True	Removed an errant System out println<add>database/DatabaseTest.java<del>database/DatabaseTest.java<del>System.out.println(databaseDirectory.getAbsolutePath());
tr	False	Fixed the CS error and a typo<add>core/PApplet.java<add>//    Class c = Class.forName(name);<add>Class c = Thread.currentThread().getContextClassLoader().loadClass(name);<del>core/PApplet.java<del>Class c = Class.forName(name);
tr	True	delete unuse variable name<add>util/RandomUtils.java<add>* <add>return min + new Random().nextInt(max - min);<del>util/RandomUtils.java<del>* <del><del>Random random = new Random();<del>return min + random.nextInt(max - min);
tr	False	hide setup chunk once it no longer shows errors<add>parser/ParseDataset.java<add>@Override public void onCompletion(CountedCompleter cmp){job.remove();}<add><del>parser/ParseDataset.java<del>job.remove();
tr	False	Fix MultiUserChat enter nickname check<add>hadoop/KeyValueStoreMapReduceIntegrationTest.java<add>new LocalTachyonClusterResource(Constants.GB, BLOCK_SIZE,<del>hadoop/KeyValueStoreMapReduceIntegrationTest.java<del>new LocalTachyonClusterResource(Constants.GB, Constants.KB, BLOCK_SIZE,
tr	False	Added Javadoc for ShowcaseViews addAnimatedGestureToView<add>engine/RequestHint.java<add>if (myMethodFilter != null && !mySteppedOut) {<del>engine/RequestHint.java<del>if (myMethodFilter != null) {
tr	False	added code to hide status bar when REPLY action is chosen on notification and activity needs be shown<add>annotation/SseIntegrationTests.java<add>.await(Duration.ofSeconds(5))<add>.await(Duration.ofSeconds(5))<add>.await(Duration.ofSeconds(5))<del>annotation/SseIntegrationTests.java<del>.await()<del>.await()<del>.await()
tr	False	Remove useless log level setter for analytics<add>configuration/FileSystemSourceCache.java<del>configuration/FileSystemSourceCache.java<del>if (!directory.exists() || !directory.isDirectory()) throw new IllegalArgumentException("Not a directory: " + directory);
tr	True	Put back original author tags that were inadvertantly left out<add>clock/MicrosecondsClock.java<add>/**<add>*<add>* @author Patricio Echague (pechague@gmail.com)<add>*/<del>clock/MicrosecondsClock.java
tr	False	Refactor Extract Dependency moves classifier to parent module<add>smssync/CursorToMessage.java<add>final int duration = msgMap.get(CallLog.Calls.DURATION) == null ? 0 :<add>Integer.parseInt(msgMap.get(CallLog.Calls.DURATION));<del>smssync/CursorToMessage.java<del>final int duration = Integer.parseInt(msgMap.get(CallLog.Calls.DURATION));
tr	False	add builder methods withWidth and withHeight<add>graphInference/InferenceSession.java<add>boolean doesNotContainFalseBound = repeatInferencePhases();<add>for (InferenceVariable inferenceVariable : myInferenceVariables.values()) {<add>inferenceVariable.ignoreInstantiation();<add>}<add>doesNotContainFalseBound = repeatInferencePhases();<add>doesNotContainFalseBound = proceedWithAdditionalConstraints(additionalConstraints);<del>graphInference/InferenceSession.java<del>repeatInferencePhases();<del>repeatInferencePhases();<del>proceedWithAdditionalConstraints(additionalConstraints);
tr	True	template might contain leading whitespaces<add>db/DB2DB.java<add>alterSql = StringUtil.trim(alterSql);<add><del>db/DB2DB.java
tr	False	Add mongodb tests<add>mockito/Mockito.java<add>* For stubbing void methods with throwables see: {@link Mockito#doThrow(Throwable)}<del>mockito/Mockito.java<del>* For stubbing void methods with throwables see: {@link Mockito#stubVoid}
tr	True	Also include e as the cause<add>security/LoginUser.java<add>throw new IOException("Failed to login: " + e.getMessage(), e);<del>security/LoginUser.java<del>throw new IOException("Failed to login: " + e);
tr	True	renamed AudioNotifierImpl to AudioNotifierServiceImpl<add>audionotifier/AudioNotifierActivator.java<add>private AudioNotifierServiceImpl audioNotifier;<add>audioNotifier = new AudioNotifierServiceImpl();<del>audionotifier/AudioNotifierActivator.java<del>private AudioNotifierImpl audioNotifier;<del>audioNotifier = new AudioNotifierImpl();
tr	True	Remove noisy logging<add>segmented/SegmentedRaftLog.java<del>segmented/SegmentedRaftLog.java<del>log.info( "reading entry term at %d. prevIndex:%d, prevTerm:%d", logIndex, state.prevIndex, state.prevTerm );
tr	False	Fix typo in warning message<add>xprivacy/XActivityThread.java<add>} catch (IllegalStateException ignored) {<add>// No receivers for action ...<del>xprivacy/XActivityThread.java
tr	False	Check the return value of listFiles on the ifw directory<add>simple/SimpleDiffViewer.java<add>if (myFoldingModel != null) myFoldingModel.expandAll(expand);<del>simple/SimpleDiffViewer.java<del>public boolean isEnabled() {<del>return myFoldingModel != null;<del>}<del><del>@Override<del>assert myFoldingModel != null;<del>myFoldingModel.expandAll(expand);
tr	True	Fix crash in ToolbarActionBar when setting null custom view<add>app/ToolbarActionBar.java<add>if (view != null) {<add>view.setLayoutParams(layoutParams);<add>}<del>app/ToolbarActionBar.java<del>view.setLayoutParams(layoutParams);
tr	False	Ensure default permissions not dropped on data wipe<add>rapids/AST.java<add>if (captured.isAry()) throw new IllegalArgumentException("Frames not supported in the if's condition.");<del>rapids/AST.java
tr	False	Add a toggle for epoll support<add>metaclass/AbstractStaticMethodInvocation.java<add><add>public void setPattern(String methodPattern) {<add>setPattern(Pattern.compile(methodPattern));<add>}<del>metaclass/AbstractStaticMethodInvocation.java
tr	False	don t preserve coverage data for interfaces<add>extract/ExtractManagedDependenciesAction.java<del>extract/ExtractManagedDependenciesAction.java<del>dependency.getClassifier().undefine();
tr	False	Fix log and restore implementation<add>widget/RecyclerView.java<add>* Returns the number of items in the adapter bound to the parent RecyclerView.<add>* <add>* Note that this number is not necessarily equal to {@link State#getItemCount()}. In<add>* methods where State is available, you should use {@link State#getItemCount()} instead.<add>* For more details, check the documentation for {@link State#getItemCount()}.<add>* @return The number of items in the bound adapter<add>* @see State#getItemCount()<add>* Returns the total number of items that can be laid out. Note that this number is not<add>* necessarily equal to the number of items in the adapter, so you should always use this<add>* number for your position calculations and never access the adapter directly.<add>* <add>* RecyclerView listens for Adapter's notify events and calculates the effects of adapter<add>* data changes on existing Views. These calculations are used to decide which animations<add>* should be run.<add>* <add>* To support predictive animations, RecyclerView may rewrite or reorder Adapter changes to<add>* present the correct state to LayoutManager in pre-layout pass.<add>* <add>* For example, a newly added item is not included in pre-layout item count because<add>* pre-layout reflects the contents of the adapter before the item is added. Behind the<add>* scenes, RecyclerView offsets {@link Recycler#getViewForPosition(int)} calls such that<add>* LayoutManager does not know about the new item's existence in pre-layout. The item will<add>* be available in second layout pass and will be included in the item count. Similar<add>* adjustments are made for moved and removed items as well.<add>* <add>* You can get the adapter's item count via {@link LayoutManager#getItemCount()} method.<add>*<add>* @return The number of items currently available<add>* @see LayoutManager#getItemCount()<del>widget/RecyclerView.java<del>* Return the number of items in the adapter bound to the parent RecyclerView<del>* @return Items in the bound adapter<del>* @return Total number of items to be laid out. Note that, this number is not necessarily<del>* equal to the number of items in the adapter, so you should always use this number for<del>* your position calculations and never call adapter directly.
tr	False	open an API for scala<add>cpr/AtmosphereServlet.java<del>cpr/AtmosphereServlet.java<del>logger.info("Initializing Atmosphere framework: {}", Version.getRawVersion());<del>
tr	False	Remove unused field<add>cluster/MinimumMasterNodesTests.java<add>import org.apache.lucene.util.LuceneTestCase;<add>@LuceneTestCase.AwaitsFix(bugUrl = "boaz is looking at failures in this test class. Example failure: http://build-us-00.elastic.co/job/es_g1gc_master_metal/11653/")<del>cluster/MinimumMasterNodesTests.java<del>@AwaitsFix(bugUrl = "boaz is looking a this. Example failure: http://build-us-00.elastic.co/job/es_g1gc_master_metal/11653/")
tr	True	Add TelecomManager constructor for passing in TelecomServiceImpl<add>telecom/TelecomManager.java<add>private final ITelecomService mTelecomServiceOverride;<add><add>this(context, null);<add>}<add><add>/**<add>* @hide<add>*/<add>public TelecomManager(Context context, ITelecomService telecomServiceImpl) {<add>mTelecomServiceOverride = telecomServiceImpl;<add>if (mTelecomServiceOverride != null) {<add>return mTelecomServiceOverride;<add>}<del>telecom/TelecomManager.java
tr	True	don t show duplicate group for intention actions<add>gotoByName/GotoActionModel.java<add>String groupName = actionWithParentGroup.getAction() instanceof ApplyIntentionAction ? null : actionWithParentGroup.getGroupName();<del>gotoByName/GotoActionModel.java<del>final String groupName = actionWithParentGroup.getGroupName();
tr	True	Remove dead code from EpicenterTranslateClipReveal<add>transition/EpicenterTranslateClipReveal.java<del>transition/EpicenterTranslateClipReveal.java<del>/*<del>// Translate the clip bounds to be centered within the target bounds.<del>final int offsetX = bestRect.centerX() - epicenter.centerX();<del>final int offsetY = bestRect.centerY() - epicenter.centerY();<del>epicenter.offset(offsetX, offsetY);<del>*/
tr	False	removed methods getIntegrateEnvironment and getUpdateEnvironment since they returned resutlt of getUpdateEnvironment result and this was not what user were expecting<add>ui/GroovyMain.java<add>"options:",<add>withArgName("name=value").<add><del>ui/GroovyMain.java<del>null, // header<del>withArgName("key=value").<del><del>private static ClassLoader getLoader(ClassLoader cl) {<del>if (cl!=null) return cl;<del>cl = Thread.currentThread().getContextClassLoader();<del>if (cl!=null) return cl;<del>cl = GroovyMain.class.getClassLoader();<del>if (cl!=null) return cl;<del>return null;<del>}<del>
tr	True	Hide empty state upon refreshed<add>materialistic/ItemFragment.java<add>mEmptyView.setVisibility(View.GONE);<del>materialistic/ItemFragment.java
tr	False	add warning when the config file cannot be found<add>acra/ErrorReporter.java<add>// Immediately send reports for SILENT and TOAST modes.<add>// Immediately send reports int NOTIFICATION mode only if they are all silent.<add><add>if (mReportingInteractionMode == ReportingInteractionMode.TOAST && !onlySilentReports) {<add>// Display the Toast in TOAST mode only if there are non-silent reports.<add><add>// There are reports to send, display the notification<del>acra/ErrorReporter.java<del>if (mReportingInteractionMode == ReportingInteractionMode.TOAST) {
tr	True	Remove unused argument causes autowiring issues<add>autoconfigure/PropertyPlaceholderAutoConfiguration.java<add>public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {<del>autoconfigure/PropertyPlaceholderAutoConfiguration.java<del>import org.springframework.context.ApplicationContext;<del>public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer(<del>ApplicationContext context) {
tr	True	Add some details to the Sync task<add>tasks/Sync.java<add>* Synchronizes the contents of a destination directory with some source directories and files.<add>* <add>* This task is like the {@link Copy} task, except the destination directory will only contain the files<add>* copied. All files that exist in the destination directory will be deleted before copying files, unless<add>* a {@link #preserve(Action)} is specified.<add>*<add>* <add>* Examples:<add>* // Sync can be used like a Copy task<add>* // See the Copy documentation for more examples<add>* // You can preserve output that already exists in the<add>* // destination directory. Files matching the preserve<add>* // filter will not be deleted.<add>*     into 'dest'<add>* Returns the filter that defines which files to preserve in the destination directory.<add>* Configures the filter that defines which files to preserve in the destination directory.<del>tasks/Sync.java<del>* Synchronises the contents of a destination directory with some source directories and files.<del>* <del>* // for preserve<del>*     into 'dest'<del>* Returns the filter that defines what files to preserve in the destination directory<del>* Configures the filter that defines what files to preserve in the destination directory.
tr	True	Maybe fix Execution to allow abstract classes<add>util/Execution.java<add>Class<add>while (mySuper != null && !mySuper.equals(Object.class)) {<add>if (!class2object.containsKey(mySuper)) {<add>class2object.put(mySuper, instances[i]);<add>}<add>mySuper = mySuper.getSuperclass();<add>}<del>util/Execution.java
tr	False	Guarded completion of the AsyncContext to avoid IllegalStateExceptions<add>text/ChunkOutputWidget.java<add>// special behavior for setup chunk<add>{<add>if (isVisible())<add>{<add>setVisible(false);<add>host_.onOutputHeightChanged(0, ensureVisible);<add>}<add>}<add><del>text/ChunkOutputWidget.java<del>// don't sync if we're the setup chunk and we don't have any errors<del>
tr	False	Throw exception if composite subfares list empty<add>mapdb/SerializerPojo.java<add>static private Object constructorId;<add>constructorId = getConstructorId.invoke(null, Object.class);<add>Method newInstance = ObjectStreamClass.class.getDeclaredMethod("newInstance", Class.class, getConstructorId.getReturnType());<del>mapdb/SerializerPojo.java<del>static private int constructorId;<del>constructorId = (Integer) getConstructorId.invoke(null, Object.class);<del>Method newInstance = ObjectStreamClass.class.getDeclaredMethod("newInstance", Class.class, int.class);
tr	True	Exception doesn t catch NoSuchMethodError Throwable does<add>solo/Waiter.java<add>}catch (Throwable ignored) {}<del>solo/Waiter.java<del>}catch (Exception ignored) {}
tr	False	Check the return value of listFiles on the ifw directory<add>people/PeopleInviteFragment.java<add>private static final String KEY_INVITE_IN_PROGRESS = "KEY_INVITE_IN_PROGRESS";<add>outState.putBoolean(KEY_INVITE_IN_PROGRESS, mInviteOperationInProgress);<add><add>mInviteOperationInProgress = savedInstanceState.getBoolean(KEY_INVITE_IN_PROGRESS);<del>people/PeopleInviteFragment.java
tr	True	Fix missing cross ref links in the MediaPlayer java javadoc<add>media/MediaPlayer.java<add>* @see android.media.MediaPlayer.OnInfoListener<add>* @see android.media.MediaPlayer.OnInfoListener<add>* <add>* <del>media/MediaPlayer.java
tr	False	fixing flaky test<add>db/DB2DB.java<add>alterSql = StringUtil.trim(alterSql);<add><del>db/DB2DB.java
tr	True	Fixed the CS error and a typo<add>strategy/GenericFileRenameExclusiveReadLockStrategy.java<add>* After granting the read lock it is released, we just want to make sure that when we start<del>strategy/GenericFileRenameExclusiveReadLockStrategy.java<del>* After granting the read lock it is realeased, we just want to make sure that when we start
tr	True	Fix log and restore implementation<add>cli/RestoreCommand.java<del>cli/RestoreCommand.java<del>import java.util.logging.Logger;<del>private static final Logger logger = Logger.getLogger(RestoreCommand.class.getSimpleName());<del>
tr	True	Fix SparseArrayObjectAdapter clear<add>widget/SparseArrayObjectAdapter.java<add>mItems.removeAt(index);<del>widget/SparseArrayObjectAdapter.java<del>mItems.delete(index);
tr	False	change default web path relative to make web UI work without parameter change<add>sql/Sql.java<add>* free any cached resources.<del>sql/Sql.java<del>* free any caches resources.
tr	True	Changing the way Address creates it s hashcode<add>nio/Address.java<add>int result = port;<add>result = 31 * result + host.hashCode();<add>return result;<del>nio/Address.java<del>return hash(host.getBytes()) * 29 + port;<del>}<del><del>private int hash(byte[] bytes) {<del>int hash = 0;<del>for (byte b : bytes) {<del>hash = (hash * 29) + b;<del>}<del>return hash;
tr	True	do not log conditional tag limitations anymore<add>conditional/ConditionalOSMTagInspector.java<add>Set<add>this(tagsToCheck, createDefaultMapping(value), restrictiveValues, permittedValues, false);<add>Set<del>conditional/ConditionalOSMTagInspector.java<del>Set<del>this(tagsToCheck, createDefaultMapping(value), restrictiveValues, permittedValues, true);<del>Set
tr	False	Fixed bug that caused stats to refresh with every resume and fail to restore previous state<add>book/Bookmark.java<add>if (other != null) {<add>myId = other.myId;<add>}<del>book/Bookmark.java<del>myId = other.myId;
tr	False	fixed size records<add>gotoByName/GotoActionModel.java<add>String groupName = actionWithParentGroup.getAction() instanceof ApplyIntentionAction ? null : actionWithParentGroup.getGroupName();<del>gotoByName/GotoActionModel.java<del>final String groupName = actionWithParentGroup.getGroupName();
tr	True	SMALLFIX Add back a method required<add>client/TachyonFile.java<add>* @param writeType the OutStream's write type which is unused<add>*<add>public FileOutStream getOutStream(WriteType writeType) throws IOException {<add>return getOutStream();<add>}<add><add>/**<add>* @return the {@code OutStream} of this file<add>* @throws IOException when an event that prevents the operation from completing is encountered<add>*/<del>client/TachyonFile.java<del>
tr	True	Change norelease in MappedFieldType to TODO<add>mapper/MappedFieldType.java<add>// TODO: we need to override freeze() and add safety checks that all settings are actually set<del>mapper/MappedFieldType.java<del>// norelease: we need to override freeze() and add safety checks that all settings are actually set
tr	True	improved performance of logger operations<add>updater/Patch.java<add>Runner.logger.info("Backing up files dir: " + toDir.getPath());<add>Runner.logger.info("applying patch file" + patchFile.getName() + " to dir " + toDir.getPath());<del>updater/Patch.java<del>Runner.logger.info("Backing up files dir: " + toDir.getCanonicalFile());<del>Runner.logger.info("applying patch file" + patchFile.getName() + " to dir " + toDir.getCanonicalFile());
tr	True	Remove deprecated code<add>parser/SimpleCharStream.java<del>parser/SimpleCharStream.java<del>@Deprecated<del>/**<del>* @deprecated<del>* @see #getEndColumn<del>*/<del><del>public int getColumn() {<del>return bufcolumn[bufpos];<del>}<del><del>@Deprecated<del>/**<del>* @deprecated<del>* @see #getEndLine<del>*/<del>
tr	True	Fixing consolation error<add>entity/JsMessage.java<add>isUploading, voiceContent.getDuration());<del>entity/JsMessage.java<del>isUploading, voiceContent.getDuration())
tr	True	Java Set the reserved value on the DataHeaderFlyweight with a long rather than int argument<add>protocol/DataHeaderFlyweight.java<add>public DataHeaderFlyweight reservedValue(final long reservedValue)<del>protocol/DataHeaderFlyweight.java<del>public DataHeaderFlyweight reservedValue(final int reservedValue)
tr	True	Add a toggle for epoll support<add>internal/ChannelImplDetector.java<add>private static final boolean EPOLL = Epoll.isAvailable() && Boolean.getBoolean("ratpack.epoll");<del>internal/ChannelImplDetector.java<del>private static final boolean EPOLL = Epoll.isAvailable();
tr	True	Fix DatabaseRebuildToolTest that broke because we changed the implementation of PropertyRecord toString<add>applytx/DumpRecordsCommand.java<add>// We rely on this method having the side-effect of loading the property blocks:<add>record.numberOfProperties();<del>applytx/DumpRecordsCommand.java
tr	True	Add mongodb tests<add>mongodb/MongodbQueryTest.java<add>public void Equals_and_Between() {<add>assertQuery(user.firstName.startsWith("Jaa").and(user.age.between(20, 30)), u2, u1);<add>assertQuery(user.firstName.startsWith("Jaa").and(user.age.goe(20).and(user.age.loe(30))), u2, u1);<add>}<add><add>@Test<del>mongodb/MongodbQueryTest.java
tr	False	Add missing exception check<add>providers/ProviderManager.java<add>doAddExtraDefaultExceptionMappings(exceptionMappings);<del>providers/ProviderManager.java<del>doAddExtraDefaultExceptionMappings(DEFAULT_EXCEPTION_MAPPINGS);
tr	False	Fix testWAVSeekToEnd testcase<add>xml/ResXmlEncoders.java<add>int startPos = 0;<add>startPos = out.length() + 1;<add>enclose = false;<add>wasSpace = true;<add>if (enclose || wasSpace) {<add>out.insert(startPos, '"').append('"');<add>}<del>xml/ResXmlEncoders.java
tr	True	fix nightly compile error due to changed AssetEventListener interface<add>actions/ImportWorldForgeAction.java<add><add>public void assetDependencyNotFound(AssetKey ak, AssetKey ak1) {<add>}<add><add><add>public void assetDependencyNotFound(AssetKey ak, AssetKey ak1) {<add>}<add><del>actions/ImportWorldForgeAction.java
tr	False	Use non deprecated versions of methods<add>form/BooleanFormPropertyRenderer.java<add>import com.vaadin.ui.CheckBox;<add>CheckBox checkBox = new CheckBox(getPropertyLabel(formProperty));<add>checkBox.setRequired(formProperty.isRequired());<add>checkBox.setEnabled(formProperty.isWritable());<add>checkBox.setValue(formProperty.getValue());<add>return checkBox;<del>form/BooleanFormPropertyRenderer.java<del>import com.vaadin.ui.Button;<del>Button button = new Button(getPropertyLabel(formProperty));<del>button.setRequired(formProperty.isRequired());<del>button.setEnabled(formProperty.isWritable());<del>button.setValue(formProperty.getValue());<del>return button;
tr	True	Wooden Power pipe needs no logic<add>pipes/PipePowerWood.java<add>super(new PipeTransportPower(), new PipeLogic(), itemID);<del>pipes/PipePowerWood.java<del>super(new PipeTransportPower(), new PipeLogicWood(), itemID);
tr	False	Disable code that no longer compiles in WalletTool pending fix<add>get/OServerCommandGetStaticContent.java<add>return true;<del>get/OServerCommandGetStaticContent.java<del>return super.beforeExecute(iRequest, iResponse);
tr	True	Flipping the bit on the HIC<add>classifier/HumanInteractionClassifier.java<add><add>/** Default value for the HIC_ENABLE setting: 1 - enabled, 0 - disabled */<add>private static final int HIC_ENABLE_DEFAULT = 1;<add><add>mEnableClassifier = 0 != Settings.Global.getInt(<add>HIC_ENABLE, HIC_ENABLE_DEFAULT);<del>classifier/HumanInteractionClassifier.java<del>mEnableClassifier = Build.IS_DEBUGGABLE && 0 != Settings.Global.getInt(<del>HIC_ENABLE, 0);
tr	False	Fix wrong condition<add>EncodedValue/ArrayEncodedSubValue.java<add>comp = values[i].compareTo(other.values[i]);<del>EncodedValue/ArrayEncodedSubValue.java<del>comp = values[i].compareValue(other.values[i]);
tr	False	annotation demo add protocol<add>task/BaseGetNewsTask.java<add>new SaveNewsListTask(date, resultNewsList).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);<add>}<add><add>if (mListener != null) {<del>task/BaseGetNewsTask.java<del>new SaveNewsListTask(date, resultNewsList).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);<del>}<del><del>if (mListener != null) {
tr	False	Perform a flush when renegotiating<add>app/SimpleCompactHeaderDrawerActivity.java<add>import com.mikepenz.materialdrawer.model.interfaces.Nameable;<add>final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);<add>if (drawerItem instanceof Nameable) {<add>toolbar.setTitle(((Nameable) drawerItem).getNameRes());<add>}<add><del>app/SimpleCompactHeaderDrawerActivity.java<del>Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
tr	True	fix merged comment<add>integrate/SvnIntegrateChangesTask.java<add>CommitChangeListDialog.commitAlienChanges(myProject, clb.getChanges(), myVcs, myMerger.getComment(), myMerger.getComment());<del>integrate/SvnIntegrateChangesTask.java<del>CommitChangeListDialog.commitAlienChanges(myProject, clb.getChanges(), myVcs,<del>SvnBundle.message("action.Subversion.integrate.changes.alien.commit.changelist.title"), myMerger.getComment());
tr	False	Consider mScrollX when drawing the checkMarkDrawable<add>jaxrs/ParameterProcessor.java<add>LOGGER.debug("found inner property " + innerProperty);<del>jaxrs/ParameterProcessor.java<del>LOGGER.debug("yay - found inner property " + innerProperty);
tr	True	Register the UI Thread as a sensitive thread to the runtime<add>app/ActivityThread.java<add>// Register the UI Thread as a sensitive thread to the runtime.<add>VMRuntime.registerSensitiveThread();<del>app/ActivityThread.java
tr	True	Remove an unnecessary animation<add>phone/PhoneStatusBar.java<add>boolean mNotificationPanelIsFullScreenWidth;<add>mNotificationPanelIsFullScreenWidth =<add>(mNotificationPanel.getLayoutParams().width == ViewGroup.LayoutParams.MATCH_PARENT);<add>| (mNotificationPanelIsFullScreenWidth ? 0 : View.STATUS_BAR_DISABLE_SYSTEM_INFO));<del>phone/PhoneStatusBar.java<del>| View.STATUS_BAR_DISABLE_SYSTEM_INFO);
tr	True	Fix MultiUserChat enter nickname check<add>muc/MultiUserChat.java<del>muc/MultiUserChat.java<del>StringUtils.requireNotNullOrEmpty(nickname, "Nickname must not be null or blank.");
tr	False	Add some javadoc to AudioRecord plus updates based on code review comments<add>internal/TerminalDetector.java<add>// Use jna-posix to determine if we're connected to a terminal<add>if (!PosixUtil.current().isatty(element)) {<add>return false;<add>}<add><add>// Dumb terminal doesn't support control codes. Should really be using termcap database.<add>String term = System.getenv("TERM");<add>if (term != null && term.equals("dumb")) {<add>return false;<add>}<add><add>// Assume a terminal<add>return true;<del>internal/TerminalDetector.java<del>// Use jna-posix<del>return PosixUtil.current().isatty(element);
tr	True	remove warning about cast<add>adapter/KnownHostsAdapter.java<add>ArrayList filteredList = (ArrayList)results.values;<add>for (Object c : filteredList) {<add>add((String)c);<add>}<del>adapter/KnownHostsAdapter.java<del>ArrayList<del>for (String c : filteredList) {<del>add(c);<del>}
tr	False	Added Javadoc for ShowcaseViews addAnimatedGestureToView<add>app/Language.java<add>"zh"  // Chinese<add>Arrays.sort(SUPPORTED);<add><add>synchronized (Language.class) {<del>app/Language.java<del>"zh" // chinese<del>synchronized(Language.class) {
tr	True	Added getString String key Object params method<add>utils/I18N.java<add>import java.text.MessageFormat;<add>import java.util.MissingResourceException;<add><add>public String getString(String key, Object... params  ) {<add>try {<add>return MessageFormat.format(this.getString(key), params);<add>} catch (MissingResourceException e) {<add>return '!' + key + '!';<add>}<add>}<del>utils/I18N.java
tr	False	remove redundant loop<add>water/Weaver.java<add>private synchronized CtClass javassistLoadClass(String name) {<add><add>private synchronized CtClass javassistLoadClass( CtClass cc ) throws NotFoundException, CannotCompileException {<del>water/Weaver.java<del>public synchronized CtClass javassistLoadClass(String name) {<del>public synchronized CtClass javassistLoadClass( CtClass cc ) throws NotFoundException, CannotCompileException {
tr	True	every static resource returned a no cache header<add>get/OServerCommandGetStaticContent.java<add>return true;<del>get/OServerCommandGetStaticContent.java<del>return super.beforeExecute(iRequest, iResponse);
tr	True	added cause of SSLHandshakeException<add>impl/HttpClientImpl.java<add>import java.util.Optional;<add>SSLHandshakeException sslException = new SSLHandshakeException("Failed to create SSL connection");<add>Optional.ofNullable(fut2.cause()).ifPresent(sslException::initCause);<add>connectionFailed(context, ch, connectErrorHandler, sslException,<add>listener);<del>impl/HttpClientImpl.java<del>connectionFailed(context, ch, connectErrorHandler, new SSLHandshakeException("Failed to create SSL connection"),<del>listener);
tr	False	Remove unnessary logging<add>network/HttpSender.java<add>// ZAP: 2016/12/12 Add initiator constant for Forced Browse requests<add>public static final int FORCED_BROWSE_INITIATOR = 11;<del>network/HttpSender.java
tr	False	Fix an NPE when adding short SIP contacts<add>widget/CheckedTextView.java<add>checkMarkDrawable.setBounds(mScrollX + left, top, mScrollX + right, bottom);<del>widget/CheckedTextView.java<del>checkMarkDrawable.setBounds( left, top, right, bottom);
tr	False	Previous cleanup missed one string<add>impl/PythonLanguageLevelPusher.java<add>private static final FileAttribute PERSISTENCE = new FileAttribute("python_language_level_persistence", 1, true);<del>impl/PythonLanguageLevelPusher.java<del>private static final FileAttribute PERSISTENCE = new FileAttribute("python_language_level_persistence", 1);
tr	True	Fixed address resolution<add>ec2/AwsEc2UnicastHostsProvider.java<add>address = instance.getPublicIpAddress();<del>ec2/AwsEc2UnicastHostsProvider.java<del>address = instance.getPublicDnsName();
tr	True	Reverted wrong distributed timeouts<add>config/OGlobalConfiguration.java<add>"Maximum timeout in milliseconds to wait for CRUD remote tasks", Integer.class, 3000l),<add>"Maximum timeout in milliseconds to wait for Command remote tasks", Integer.class, 5000l),<add>"Maximum timeout in milliseconds to wait for database deployment", Long.class, 1200000l),<del>config/OGlobalConfiguration.java<del>"Maximum timeout in milliseconds to wait for CRUD remote tasks", Integer.class, 300000000l),<del>"Maximum timeout in milliseconds to wait for Command remote tasks", Integer.class, 500000000l),<del>"Maximum timeout in milliseconds to wait for database deployment", Long.class, 120000000l),
tr	False	Have DefaultDatabaseProvider return filename<add>web/WebMvcAutoConfiguration.java<add>// Defined as a nested config to ensure WebMvcConfigurerAdapter is not read when not<del>web/WebMvcAutoConfiguration.java<del>// Defined as a nested config to ensure WebMvcConfigurerAdapter it not read when not
tr	False	fixed an issue where the material map entry was passed to the material contentEqual instead of the material<add>lang/Keyword.java<add>return RT.get(obj, this);<del>lang/Keyword.java<del>if(obj == null)<del>return null;<del>return ((IPersistentMap) obj).valAt(this);
tr	False	Fix log and restore implementation<add>javacv/IPCameraFrameGrabber.java<add>throw new Exception(e.getMessage(), e);<add>// Don't set the url to null, it may be needed to restart this object<del>javacv/IPCameraFrameGrabber.java<del>e.printStackTrace();<del>url = null;
tr	False	Fixed typo in javadoc<add>graphInference/InferenceSession.java<add>boolean doesNotContainFalseBound = repeatInferencePhases();<add>for (InferenceVariable inferenceVariable : myInferenceVariables.values()) {<add>inferenceVariable.ignoreInstantiation();<add>}<add>doesNotContainFalseBound = repeatInferencePhases();<add>doesNotContainFalseBound = proceedWithAdditionalConstraints(additionalConstraints);<del>graphInference/InferenceSession.java<del>repeatInferencePhases();<del>repeatInferencePhases();<del>proceedWithAdditionalConstraints(additionalConstraints);
tr	True	added Comparable to default imports<add>lang/RT.java<add>Symbol.create("Comparable"), "java.lang.Comparable",<del>lang/RT.java
tr	True	fixed status bar color in dark theme<add>support/LinkHandlerActivity.java<add>mMainContent.setDrawColor(!ThemeUtils.isDarkTheme(getCurrentThemeResourceId()));<del>support/LinkHandlerActivity.java<del>mMainContent.setDrawColor(true);
tr	False	Remove unnecessary new DiagnosticGroup call in DiagnosticGroups<add>annotation/SseIntegrationTests.java<add>.await(Duration.ofSeconds(5))<add>.await(Duration.ofSeconds(5))<add>.await(Duration.ofSeconds(5))<del>annotation/SseIntegrationTests.java<del>.await()<del>.await()<del>.await()
tr	False	fix quality flaw Enabled test<add>http2/Http2HeadersEncoder.java<add>* Always return {@code false} for {@link SensitivityDetector#isSensitive(CharSequence, CharSequence)}.<add><add>/**<add>* Always return {@code true} for {@link SensitivityDetector#isSensitive(CharSequence, CharSequence)}.<add>*/<add>SensitivityDetector ALWAYS_SENSITIVE = new SensitivityDetector() {<add>@Override<add>public boolean isSensitive(CharSequence name, CharSequence value) {<add>return true;<add>}<add>};<del>http2/Http2HeadersEncoder.java<del>* Always return {@code false} for {@link SensitivityDetector#isSensitive(ByteString, ByteString)}.
tr	False	Remove unused code<add>phonegap/StandAlone.java<add>import android.app.Activity;<del>phonegap/StandAlone.java<del>import java.lang.reflect.Field;<del>
tr	False	Fixed use after free error looking up IP addresses<add>quickFix/CreateFileFix.java<add>if (ApplicationManager.getApplication().isUnitTestMode()) {<add>System.out.println("CreateFileFix.CreateFileFix");<add>System.out.println(newFileName);<add>System.out.println(isDirectory);<add>System.out.println(FileTypeManager.getInstance().getFileTypeByFileName(newFileName));<add>System.out.println(FileTypeManager.getInstance().getFileTypeByFileName(newFileName).isBinary());<add>}<del>quickFix/CreateFileFix.java
tr	False	Can t find com sun xml internal messaging saaj soap LocalStrings bundle<add>util/StreamCharBuffer.java<add>static final long serialVersionUID = 5486972234419632945L;<del>util/StreamCharBuffer.java
tr	False	enter handler fixed<add>bitmap/BitmapTextureAtlas.java<add>// TODO What about GLES20.glPixelStorei(GLES20.GL_UNPACK_ALIGNMENT, 1); in here?<add><add>//	final ByteBuffer image = ByteBuffer.allocateDirect(height * stride).order(ByteOrder.nativeOrder());<del>bitmap/BitmapTextureAtlas.java<del>//	final ByteBuffer image = ByteBuffer.allocateDirect(height * stride)<del>//			.order(ByteOrder.nativeOrder());
tr	False	Add check for project disposed<add>admin/AdminRunningInstancesPanel.java<add>String theValue = null;<add>try {<add>theValue = variableRendererManager.getStringRepresentation(variables.get(variable));<add>} catch(Exception e) {<add>theValue = "N/A";<add>}<del>admin/AdminRunningInstancesPanel.java<del>String theValue = variableRendererManager.getStringRepresentation(variables.get(variable));
tr	True	Make checkstyle happy<add>composite/GradleCompositeException.java<add>/**<add>* Thrown when there is some problem using a Gradle composite.<add>*<add>* @since 2.12<add>*/<del>composite/GradleCompositeException.java
tr	True	Resume home activity can skip resume and cause ANR<add>am/ActivityStack.java<add>} else if (!isOnHomeDisplay()) {<add>return false;<add>} else if (!isHomeStack()){<add>if (DEBUG_STATES) Slog.d(TAG,<add>return mStackSupervisor.resumeHomeStackTask(returnTaskType, prev);<del>am/ActivityStack.java<del>} else {<del>if (DEBUG_STATES && isOnHomeDisplay()) Slog.d(TAG,<del>// Only resume home if on home display<del>return isOnHomeDisplay() &&<del>mStackSupervisor.resumeHomeStackTask(returnTaskType, prev);
tr	False	don t preserve coverage data for interfaces<add>tts/TtsService.java<add>processSpeechQueue();<add>processSpeechQueue();<del>tts/TtsService.java<del>processSpeechQueue();<del>processSpeechQueue();
tr	True	restored API to fix compatibility with Kotlin plugin<add>changeSignature/OverriderUsageInfo.java<add>import org.jetbrains.annotations.Nullable;<add>/**<add>* @deprecated use {@link #getOverridingMethod()} instead<add>*/<add>@Nullable<add>@Override<add>public PsiMethod getElement() {<add>return (PsiMethod)super.getElement();<add>}<add><del>changeSignature/OverriderUsageInfo.java
tr	False	throw exception if no java rules were found happens if you start from a wrong directory<add>orm/HibernateCriteriaBuilder.java<add>* @param types List of types for the projected values<add>* @param types List of types for the projected values<del>orm/HibernateCriteriaBuilder.java<del>* @param type List of types for the projected values<del>* @param type List of types for the projected values
tr	False	Replace synchronous setting of a flag with async setting of the flag<add>model/UIPrefsAccessor.java<add>// we disabled the internal viewer for qtwebkit but have<add>// now restored it since we are using safari<add>/*<add>*/<del>model/UIPrefsAccessor.java<del>// the internal viewer no longer works on osx
tr	False	changed keyword self lookup to use RT get<add>net/NioClient.java<add>private boolean closeCalled = false;<add>connectionClosed();<add>public synchronized void connectionClosed() {<add>if (!closeCalled) {<add>closeCalled = true;<add>upstreamParser.connectionClosed();<add>}<del>net/NioClient.java<del>upstreamParser.connectionClosed();<del>public void connectionClosed() {<del>upstreamParser.connectionClosed();
tr	True	increased the timeout to make sure the test passes even on slow boxes<add>file/FileRouteTest.java<add>result.setDefaulResultWaitMillis(5000);<del>file/FileRouteTest.java
tr	True	Removed javadoc for task method<add>api/Project.java<del>api/Project.java<del>* <del>* this project. If no such task exists, an exception is thrown.<del>*<del>* <del>* more details.<del>*<del>* @param path the path of the task to be returned<del>* @return The task. Never returns null.<del>* @throws UnknownTaskException If no task with the given path exists.<del>*/<del>Task task(String path) throws UnknownTaskException;<del><del>/**
tr	False	Remove unuse Inject on ItemPresenter class<add>ninja/Context.java<add>import ninja.bodyparser.BodyParserEngineXml;<add>* {@link BodyParserEngineJson} {@link BodyParserEngineXml}<add>* and {@link BodyParserEngineManager}<del>ninja/Context.java<del>* {@link BodyParserEngineJson} and {@link BodyParserEngineManager}
tr	False	Fix loading for individual<add>plan/Channel.java<add>case NONE: // excluded by sanity check. left here for verification check completion<add>case PARTITION_FORCED_REBALANCE:<del>plan/Channel.java<del>case NONE: // excluded by sanity check. lust here for verification check completion
tr	True	Removed ignored parameters<add>stampede/CliConfig.java<del>stampede/CliConfig.java<del>@Parameter(names={"--cursor-timeout"}, descriptionKey="config.mongo.cursorTimeout")<del>private String cursorTimeout;<del>public String getCursorTimeout() {<del>return cursorTimeout;<del>}<del>if (cursorTimeout != null) {<del>addParam("/replication/cursorTimeout", cursorTimeout);<del>}
tr	False	Tweak exception handling<add>plugins/PlayApplicationPlugin.java<add>void failIfInjectedRouterIsUsedwithOldVersion(ModelMap<add>playApplicationBinaries.afterEach(new Action<add>public void execute(PlayApplicationBinarySpec playApplicationBinary) {<add>if (!playApplicationBinary.getApplication().getUseStaticRouter()) {<add>final PlayPlatform playPlatform = playApplicationBinary.getTargetPlatform();<del>plugins/PlayApplicationPlugin.java<del>void failIfInjectedRouterIsUsedwithOldVersion(ModelMap<del>playApplications.afterEach(new Action<del>public void execute(PlayApplicationSpec playApplication) {<del>if (!playApplication.getUseStaticRouter()) {<del>final PlayPlatform playPlatform = resolveTargetPlatform(playApplication, platforms);
tr	False	Fix build warnings introduced by Move default rule key building logic to CachingBuildEngine<add>sip/SipSessionGroup.java<add>case Response.CALL_IS_BEING_FORWARDED:<add>case Response.QUEUED:<add>case Response.SESSION_PROGRESS:<add>// feedback any provisional responses (except TRYING) as<add>// ring back for better UX<del>sip/SipSessionGroup.java<del>import android.net.sip.SipSessionAdapter;
tr	True	enhance inline docu<add>ninja/Context.java<add>import ninja.bodyparser.BodyParserEngineXml;<add>* {@link BodyParserEngineJson} {@link BodyParserEngineXml}<add>* and {@link BodyParserEngineManager}<del>ninja/Context.java<del>* {@link BodyParserEngineJson} and {@link BodyParserEngineManager}
tr	True	Do not crash appwdiget host when a pending intent send fails<add>widget/RemoteViews.java<add>android.util.Log.e(LOG_TAG, "Cannot send pending intent: ", e);<del>widget/RemoteViews.java<del>throw new ActionException(e.toString());
tr	False	Fixed disable of event logger<add>linkview/LinkViewOverlayService.java<add>if (componentName.getClassName().equals("com.chrislacy.linkview.MainActivity")) {<add>//Log.d("LinkView", "Ignore " + componentName.getClassName());<add>continue;<add>}<add><del>linkview/LinkViewOverlayService.java
tr	False	fix some things about IHeatable<add>themes/ThemeBrowserFragment.java<add>protected static final int THEME_FILTER_ALL_INDEX = 0;<add>protected static final int THEME_FILTER_FREE_INDEX = 1;<add>protected static final int THEME_FILTER_PREMIUM_INDEX = 2;<add><add>case THEME_FILTER_PREMIUM_INDEX:<add>case THEME_FILTER_FREE_INDEX:<add>case THEME_FILTER_ALL_INDEX:<del>themes/ThemeBrowserFragment.java<del>case 2:<del>case 1:<del>case 0:
tr	True	Fix formatting still looks weird with new CSS changes<add>deeplearning/DeepLearningModel.java<add>if (!model_info.get_params().adaptive_rate) sb.append("<add>sb.append("<del>deeplearning/DeepLearningModel.java<del>sb.append("
tr	False	Implemented another find method in DBCollection<add>integrate/SvnIntegrateChangesTask.java<add>CommitChangeListDialog.commitAlienChanges(myProject, clb.getChanges(), myVcs, myMerger.getComment(), myMerger.getComment());<del>integrate/SvnIntegrateChangesTask.java<del>CommitChangeListDialog.commitAlienChanges(myProject, clb.getChanges(), myVcs,<del>SvnBundle.message("action.Subversion.integrate.changes.alien.commit.changelist.title"), myMerger.getComment());
tr	False	Fix caching of receivers<add>core/RoutingContext.java<add><add>LOG.debug("Origin vertex {}", this.origin);<add>LOG.debug("Origin vertex inbound edges {}", this.origin.getIncoming());<add>LOG.debug("Origin vertex outbound edges {}", this.origin.getOutgoing());<add><add>LOG.debug("Destination vertex {}", this.target);<add>LOG.debug("Destination vertex inbound edges {}", this.target.getIncoming());<add>LOG.debug("Destination vertex outbound edges {}", this.target.getOutgoing());<del>core/RoutingContext.java
tr	False	remove unused import<add>rx/Observable.java<add>import rx.operators.OperationDistinctUntilChanged;<add>* Returns an Observable that forwards all sequentially distinct items emitted from the source Observable.<add>*<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public Observable<add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this));<add>}<add><add>/**<add>* Returns an Observable that forwards all items emitted from the source Observable that are sequentially distinct according to<add>* a key selector function.<add>*<add>* @param keySelector<add>*            a function that projects an emitted item to a key value which is used for deciding whether an item is sequentially<add>*            distinct from another one or not<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public <add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this, keySelector));<add>}<add><add>/**<del>rx/Observable.java
tr	True	Remove unnecessary new DiagnosticGroup call in DiagnosticGroups<add>jscomp/DiagnosticGroups.java<add>JsMessageVisitor.MESSAGE_HAS_NO_DESCRIPTION);<del>jscomp/DiagnosticGroups.java<del>new DiagnosticGroup(JsMessageVisitor.MESSAGE_HAS_NO_DESCRIPTION));
tr	True	Remove unused title in ContributionManagerDialog<add>contrib/ContributionManagerDialog.java<add>.showYesNoQuestion(editor, Language.text("contributions"),<add>Language.text("contributions.unsaved_changes"),<add>Language.text("contributions.unsaved_changes.prompt"));<del>contrib/ContributionManagerDialog.java<del>String title;
tr	False	Fix NPE crash updating dates when no internet connection<add>notifications/NotificationsListFragment.java<add><add>EventBus.getDefault().removeStickyEvent(NotificationEvents.NoteModerationFailed.class);<del>notifications/NotificationsListFragment.java<del><del>EventBus.getDefault().removeStickyEvent(NotificationEvents.NoteModerationFailed.class);
tr	True	suppress move event when drag initiated<add>events/MouseDragHandler.java<add><add>// Suppress the native mouse move event to ensure e.g. text is not<add>// highlighted as we scroll over other elements<add>event.getNativeEvent().stopPropagation();<add>event.getNativeEvent().preventDefault();<del>events/MouseDragHandler.java
tr	True	FredrichO fixed multiple fragments in stats lists on tablet<add>stats/StatsAbsListViewFragment.java<add>getChildFragmentManager().beginTransaction().replace(R.id.stats_pager_container, fragment).commit();<del>stats/StatsAbsListViewFragment.java<del>getChildFragmentManager().beginTransaction().add(R.id.stats_pager_container, fragment).commit();
tr	True	Fix a call to checkArgument in SimpleTimeLimiter newProxy to use string substitution<add>concurrent/SimpleTimeLimiter.java<add>checkArgument(timeoutDuration > 0, "bad timeout: %s", timeoutDuration);<del>concurrent/SimpleTimeLimiter.java<del>checkArgument(timeoutDuration > 0, "bad timeout: " + timeoutDuration);
tr	True	Fix cloudmade ETA<add>routing/RouteProvider.java<add>last.distance = (int) (distanceToEnd[last.routePointOffset] - distanceToEnd[offset]);<del>routing/RouteProvider.java
tr	False	restrict auto popup if there is an identifier following cursor<add>exec/BuildActionParameters.java<del>exec/BuildActionParameters.java<del>import org.gradle.initialization.BuildClientMetaData;<del>BuildClientMetaData getClientMetaData();<del>
tr	False	Simplify osmo menu<add>proxy/AbstractProxyServlet.java<add>if (clientRequest.isAsyncStarted())<add>{<add>AsyncContext asyncContext = clientRequest.getAsyncContext();<add>asyncContext.complete();<add>}<add>catch (Throwable x)<del>proxy/AbstractProxyServlet.java<del>import java.io.IOException;<del>AsyncContext asyncContext = clientRequest.getAsyncContext();<del>asyncContext.complete();<del>catch (IOException x)
tr	False	forget old instantiations before reduction need for incorporation<add>android/About.java<add>TextView appTitle = (TextView) findViewById(R.id.about_first_line);<del>android/About.java<del>TextView appTitle = (TextView) findViewById(R.id.about_first_line);
tr	False	Add description for barbarism category<add>helper/DomainNameChecker.java<add>Collection<add>for (List<del>helper/DomainNameChecker.java<del>Collection<del>for (Object subjectAltName : subjectAltNames) {<del>List
tr	False	Remove unnecessary synchronization<add>contrib/ContributionManagerDialog.java<add>.showYesNoQuestion(editor, Language.text("contributions"),<add>Language.text("contributions.unsaved_changes"),<add>Language.text("contributions.unsaved_changes.prompt"));<del>contrib/ContributionManagerDialog.java<del>String title;
tr	True	I like this variant better<add>hikari/TestMetrics.java<add>config.setInitializationFailFast(false);<add>config.setInitializationFailFast(false);<del>hikari/TestMetrics.java
tr	False	Replace synchronous setting of a flag with async setting of the flag<add>projectView/NavigateFromSourceTest.java<add>"     -[Class1.java]\n" +<add>"      [Class11]\n" +<del>projectView/NavigateFromSourceTest.java<del>"     [Class11]\n" +
tr	False	Fixing concurrency issue hopefully<add>annotation/EnableCaching.java<add>*         cacheManager.setCaches(Arrays.asList(new ConcurrentMapCache("default")));<add>*         cacheManager.setCaches(Arrays.asList(new ConcurrentMapCache("default")));<del>annotation/EnableCaching.java<del>*         cacheManager.addCaches(Arrays.asList(new ConcurrentMapCache("default")));<del>*         cacheManager.addCaches(Arrays.asList(new ConcurrentMapCache("default")));
tr	False	Don t output control characters when terminal is a dumb terminal<add>parser/Parser.java<add>String href = urlAnchorPair.getHref().trim();<add>String hrefLoweredCase = href.toLowerCase();<add>if (!hrefLoweredCase.contains("javascript:") && !hrefLoweredCase.contains("mailto:") && !hrefLoweredCase.contains("@")) {<del>parser/Parser.java<del>String href = urlAnchorPair.getHref();<del>href = href.trim().toLowerCase();<del>if (!href.contains("javascript:") && !href.contains("mailto:") && !href.contains("@")) {
tr	False	don t use reference comparison with Integers<add>factory/TileHopper.java<add>if (CoreProxy.proxy.isRenderWorld(worldObj) || worldObj.getWorldTime() % 2 != 0)<del>factory/TileHopper.java<del>if (CoreProxy.proxy.isRenderWorld(worldObj) || worldObj.getWorldTime() % 5 != 0)
tr	True	hotfix metrics Make JmxMeter class static<add>jmx/JMXReporter.java<add>private static class JmxMeter extends AbstractBean implements JmxMeterMBean {<del>jmx/JMXReporter.java<del>private class JmxMeter extends AbstractBean implements JmxMeterMBean {
tr	True	fixed message release handling in WrongUrlHandler<add>handler/WrongUrlHandler.java<add>import io.netty.channel.ChannelHandler.Sharable;<add>return;<add>super.channelRead(ctx, msg);<del>handler/WrongUrlHandler.java<del>import io.netty.channel.ChannelHandler.Sharable;<del>import io.netty.util.ReferenceCountUtil;<del>ReferenceCountUtil.release(msg);
tr	True	catch all exceptions thrown by xml pull parser<add>xml/XmlReader.java<add>} catch (Exception e) {<add>throw new IOException("xml parser mishandled "+e.getClass().getName(), e);<del>xml/XmlReader.java<del>} catch (ArrayIndexOutOfBoundsException e) {<del>throw new IOException(<del>"xml parser mishandled ArrayIndexOufOfBounds", e);<del>} catch (StringIndexOutOfBoundsException e) {<del>throw new IOException(<del>"xml parser mishandled StringIndexOufOfBounds", e);<del>} catch (NullPointerException e) {<del>throw new IOException("xml parser mishandled NullPointerException",<del>e);<del>} catch (IndexOutOfBoundsException e) {<del>throw new IOException("xml parser mishandled IndexOutOfBound", e);
tr	True	force quit fsnotifier if it s unresponsible<add>local/FileWatcher.java<add>boolean forceQuite = true;<add>forceQuite = !processHandler.waitFor(500);<add>if (forceQuite) {<add>LOG.warn("File watcher is still alive. Doing a force quit.");<add>}<add>if (forceQuite) {<add>processHandler.destroyProcess();<add>}<del>local/FileWatcher.java<del>processHandler.destroyProcess();
tr	True	fix some things about IHeatable<add>energy/TileEngineIron.java<add>public void updateHeat() {<del>energy/TileEngineIron.java<del>public void updateHeatLevel() {
tr	False	Remove noisy logging<add>editors/EditingTargetCodeExecution.java<add>display, docId);<del>editors/EditingTargetCodeExecution.java<del>target.getDocDisplay(), docId);
tr	False	DSC alarm now sends user code over serial interface<add>util/KeyUtil.java<add>if(LOG.isDebugEnabled()) {<add>LOG.debug("Private key file: {}", tlsKeyFile);<add>LOG.debug("Certificate file: {}", tlsCertFile);<add>LOG.debug("Aliases: {}", join(ks.aliases()));<add>}<del>util/KeyUtil.java<del>LOG.info("KeyStore: {}, aliases: {}", ks, join(ks.aliases()));
tr	False	Rename supervisor policy ALWAYS_ESCALATE ESCALATE<add>start/Main.java<add>showActiveSecurityPolicies();<add>private void showActiveSecurityPolicies()<add>{<add>// System.out.println("Active Security Policies: ");<add><add>// TODO: put security policy dump here<add>}<add><del>start/Main.java
tr	True	init foldings for all opened editors otherwise saved folding state will not be restored for them<add>impl/FileEditorManagerImpl.java<add>if (editor instanceof TextEditorImpl) {<del>impl/FileEditorManagerImpl.java<del>if (current && editor instanceof TextEditorImpl) {
tr	True	Exclude title body and status fields from initial proposal email<add>tickets/TicketNotifier.java<add>fieldExclusions.add(Field.status);<add>fieldExclusions.add(Field.title);<add>fieldExclusions.add(Field.body);<del>tickets/TicketNotifier.java
tr	True	log background msgs not foreground msgs<add>parser/MessageParser.java<add>if (Config.BACKGROUND_STANZA_LOGGING && mXmppConnectionService.checkListeners()) {<del>parser/MessageParser.java<del>if (Config.BACKGROUND_STANZA_LOGGING && !mXmppConnectionService.checkListeners()) {
tr	False	Fix CS error<add>edit/Entity.java<add>import net.osmand.data.LatLon;<add>import net.osmand.osm.edit.OSMSettings.OSMTagKey;<add><add>import java.io.Serializable;<add>public abstract class Entity implements Serializable {<del>edit/Entity.java<del>import net.osmand.data.LatLon;<del>import net.osmand.osm.edit.OSMSettings.OSMTagKey;<del><del>public abstract class Entity {
tr	False	throw exception if no java rules were found happens if you start from a wrong directory<add>rx/Observable.java<del>rx/Observable.java<del>
tr	True	Moving pancake sorting to sort package<add>array/PanCakeSorting.java<add>package com.interview.sort;<del>array/PanCakeSorting.java<del>package com.interview.array;
tr	False	Changing the way Address creates it s hashcode<add>datasets/ReaderDatabase.java<add>//copyDatabase(db);<del>datasets/ReaderDatabase.java<del>copyDatabase(db);
tr	True	ModuleUtil findModuleForPsiElement should not return null in case of completion in injected PsiFile<add>module/ModuleUtil.java<add>if (element instanceof PsiFileSystemItem && (!(element instanceof PsiFile) || element.getContext() == null)) {<del>module/ModuleUtil.java<del>if (element instanceof PsiFileSystemItem) {
tr	False	SMALLFIX Add back a method required<add>integration/AbstractTransportTest.java<add><add>try {<add>requestObserver.onNext(StreamingOutputCallRequest.newBuilder()<add>.setPayload(Payload.newBuilder()<add>.setBody(ByteString.copyFrom(new byte[27182])))<add>.build());<add>} catch (IllegalStateException expected) {<add>// This can happen if the stream has already been terminated due to deadline exceeded.<add>}<del>integration/AbstractTransportTest.java<del>requestObserver.onNext(StreamingOutputCallRequest.newBuilder()<del>.setPayload(Payload.newBuilder()<del>.setBody(ByteString.copyFrom(new byte[27182])))<del>.build());
tr	False	Fix method names<add>controller/MessagingController.java<del>controller/MessagingController.java<del>int totalDone = 0;<del><del><del>totalDone++;
tr	True	Retain search activity title upon rotation<add>reader/ReaderPostListActivity.java<add>setTitle(String.format(getString(R.string.reader_title_search_results), query));<add>if (savedInstanceState == null) {<del>reader/ReaderPostListActivity.java<del>import android.text.TextUtils;<del>if (!TextUtils.isEmpty(query) && savedInstanceState == null) {<del>setTitle(String.format(getString(R.string.reader_title_search_results), query));
tr	False	Added TODO in BitmapTextureAtlas<add>jscomp/JSModule.java<del>jscomp/JSModule.java<del>static final DiagnosticType CIRCULAR_DEPENDENCY_ERROR =<del>DiagnosticType.error("JSC_CIRCULAR_DEP",<del>"Circular dependency detected: {0}");<del>
tr	True	Add BMW kits made by Motorola PCS to autoblack list for Bluetooth<add>server/BluetoothService.java<add>// Continental Automotive, Harman/Becker, Panasonic/Kyushu Ten,<add>// BMW (Motorola PCS)<add>"00:0A:30", "00:1E:AE", "00:1C:D7", "00:80:F0", "00:12:8A"<del>server/BluetoothService.java<del>// Continental Automotive, Harman/Becker, Panasonic/Kyushu Ten<del>"00:0A:30", "00:1E:AE", "00:1C:D7", "00:80:F0"
tr	False	Forcing termination of pool when timeout is reached in concurrency test<add>hbase/HBaseStoreManager.java<add><add>static {<add>// Verify that shortCfNameMap is injective<add>Preconditions.checkArgument(null != shortCfNameMap);<add>Collection<add>Preconditions.checkArgument(Sets.newHashSet(shorts).size() == shorts.size());<add>}<del>hbase/HBaseStoreManager.java
tr	True	fix a typo of the error message in XmlTokenizerLanguage<add>tokenizer/XMLTokenizeLanguage.java<add>ObjectHelper.notNull(path, "path");<del>tokenizer/XMLTokenizeLanguage.java<del>ObjectHelper.notNull(path, "token");
tr	False	Suppress flaky test HeapTest testOomeLarge<add>http2/Http2HeadersEncoder.java<add>* Always return {@code false} for {@link SensitivityDetector#isSensitive(CharSequence, CharSequence)}.<add><add>/**<add>* Always return {@code true} for {@link SensitivityDetector#isSensitive(CharSequence, CharSequence)}.<add>*/<add>SensitivityDetector ALWAYS_SENSITIVE = new SensitivityDetector() {<add>@Override<add>public boolean isSensitive(CharSequence name, CharSequence value) {<add>return true;<add>}<add>};<del>http2/Http2HeadersEncoder.java<del>* Always return {@code false} for {@link SensitivityDetector#isSensitive(ByteString, ByteString)}.
tr	False	Added tests for double and float types as primitiveType declarations<add>storm/Config.java<add>* Max pending tuples in one ShellBolt<add>*/<add>public static final String TOPOLOGY_SHELLBOLT_MAX_PENDING="topology.shellbolt.max.pending";<add>public static final Object TOPOLOGY_SHELLBOLT_MAX_PENDING_SCHEMA = Number.class;<add><add>/**<del>storm/Config.java
tr	True	Adjusting lock level<add>lazy/ScopeProvider.java<add>writableScope.changeLockLevel(WritableScope.LockLevel.BOTH);<del>lazy/ScopeProvider.java<del>
tr	True	Add cancel button to sort<add>xprivacy/ActivityMain.java<add>alertDialogBuilder.setNegativeButton(ActivityMain.this.getString(android.R.string.cancel),<add>new DialogInterface.OnClickListener() {<add>@Override<add>public void onClick(DialogInterface dialog, int which) {<add>// Do nothing<add>}<add>});<del>xprivacy/ActivityMain.java
tr	False	remove redundant cast<add>ninja/Context.java<add>import ninja.bodyparser.BodyParserEngineXml;<add>* {@link BodyParserEngineJson} {@link BodyParserEngineXml}<add>* and {@link BodyParserEngineManager}<del>ninja/Context.java<del>* {@link BodyParserEngineJson} and {@link BodyParserEngineManager}
tr	False	annotation demo add protocol<add>integrationtests/TransportSQLActionTest.java<del>integrationtests/TransportSQLActionTest.java<del>public void testSelectFromSysNodes() throws Exception {<del>execute("select * from sys.nodes");<del>}<del><del>@Test
tr	True	Rename non native menu type<add>menu/MenuBuilder.java<add>public static final int TYPE_ACTION_BAR = 1;<del>menu/MenuBuilder.java<del>public static final int TYPE_NATIVE = 1;
tr	False	Fix Wifi test<add>commandLine/SvnCommand.java<del>commandLine/SvnCommand.java<del>public SvnCommand(File workingDirectory, @NotNull SvnCommandName commandName, @NotNull @NonNls String exePath) {<del>this(workingDirectory, commandName, exePath, null);<del>}<del>
tr	False	Fix javadoc copy paste error<add>dev/RuleOverview.java<add>int overallJavaCount = 0;<add>overallJavaCount++;<add><add>if (overallJavaCount == 0) {<add>throw new RuntimeException("No Java rules found");<add>}<del>dev/RuleOverview.java
tr	True	Made afterPropertiesSet use instance variable instead of static variable<add>providers/ProviderManager.java<add>doAddExtraDefaultExceptionMappings(exceptionMappings);<del>providers/ProviderManager.java<del>doAddExtraDefaultExceptionMappings(DEFAULT_EXCEPTION_MAPPINGS);
tr	True	Validate PlayApplicationBinarySpec instead of PlayApplicationSpec<add>plugins/PlayApplicationPlugin.java<add>void failIfInjectedRouterIsUsedwithOldVersion(ModelMap<add>playApplicationBinaries.afterEach(new Action<add>public void execute(PlayApplicationBinarySpec playApplicationBinary) {<add>if (!playApplicationBinary.getApplication().getUseStaticRouter()) {<add>final PlayPlatform playPlatform = playApplicationBinary.getTargetPlatform();<del>plugins/PlayApplicationPlugin.java<del>void failIfInjectedRouterIsUsedwithOldVersion(ModelMap<del>playApplications.afterEach(new Action<del>public void execute(PlayApplicationSpec playApplication) {<del>if (!playApplication.getUseStaticRouter()) {<del>final PlayPlatform playPlatform = resolveTargetPlatform(playApplication, platforms);
tr	True	updating keylistener too<add>experimental/DebugEditor.java<add>import java.awt.event.KeyListener;<add>// The toolbar responds to shift down/up events<add>// in order to show the alt version of toolbar buttons.<add>// With toolbar switch, KeyListener has to be changed as well<add>for (KeyListener kl : textarea.getKeyListeners()) {<add>if(kl instanceof EditorToolbar)<add>{<add>textarea.removeKeyListener(kl);<add>textarea.addKeyListener(toolbar);<add>break;<add>}<add>}<del>experimental/DebugEditor.java
tr	False	removed invalid check from test<add>rx/Observable.java<add>import rx.operators.OperationDistinctUntilChanged;<add>* Returns an Observable that forwards all sequentially distinct items emitted from the source Observable.<add>*<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public Observable<add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this));<add>}<add><add>/**<add>* Returns an Observable that forwards all items emitted from the source Observable that are sequentially distinct according to<add>* a key selector function.<add>*<add>* @param keySelector<add>*            a function that projects an emitted item to a key value which is used for deciding whether an item is sequentially<add>*            distinct from another one or not<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public <add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this, keySelector));<add>}<add><add>/**<del>rx/Observable.java
tr	True	Fixed query error message<add>server/SopremoExecutionThread.java<add>"The job was not successfully executed: "<add>StringUtils.stringifyException(e));<del>server/SopremoExecutionThread.java<del>"The job was not successfully submitted to the nephele job manager: "
tr	True	paramo now resolves signature for all types<add>paramo/MethodParameter.java<add>* It consist of parameter name and parameter bytecode signature<add>* (including generics info).<add>* Generics information is available, too.<del>paramo/MethodParameter.java<del>* It consist of a name and a signature.<del>* It works for both generic and non-generic types.
tr	True	putAll was using default Executor Service to put in parallel<add>impl/ConcurrentMapManager.java<add>node.factory.getExecutorService("hz:putAll").execute(dt);<del>impl/ConcurrentMapManager.java<del>node.factory.getExecutorService().execute(dt);
tr	True	Moved the new sync migrator into a more sensical package<add>tags/AstridNewSyncMigrator.java<add>package com.todoroo.astrid.actfm.sync;<add>import com.todoroo.astrid.tags.TagMetadata;<del>tags/AstridNewSyncMigrator.java<del>package com.todoroo.astrid.tags;
tr	False	get string with parser context during debug<add>solo/Waiter.java<add>}catch (Throwable ignored) {}<del>solo/Waiter.java<del>}catch (Exception ignored) {}
tr	False	added Comparable to default imports<add>client/DefaultDaemonStarter.java<del>client/DefaultDaemonStarter.java<del>//Useful for debugging purposes - simply uncomment and connect to debug<del>if (System.getProperty("org.gradle.daemon.debug", "false").equalsIgnoreCase("true")) {<del>daemonArgs.add("-Xdebug");<del>daemonArgs.add("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006");<del>}
tr	False	Remove unused method Lexer nextTokenOrRuleToken<add>record/ORecordLazyList.java<add>if (database == null)<del>record/ORecordLazyList.java<del>if (sourceRecord == null || sourceRecord.getDatabase() == null)
tr	True	Updated shape merge API<add>opengl2/PGraphicsOpenGL2.java<add>public void mergeShapes(boolean val) {<add>mergeRecShapes = val;<del>opengl2/PGraphicsOpenGL2.java<del>public void mergeRecord() {<del>mergeRecShapes = true;<del>public void noMergeRecord() {<del>mergeRecShapes = false;<del>}<del>
tr	False	Add Nullable to IssueDto<add>cli/Arguments.java<add>@Parameter(names = { "-D", "--enable-additional-properties" }, description = "Enable additional properties support on generated types, regardless of the input schema(s)")<add>private boolean isIncludeAdditionalProperties = false;<add>return isIncludeAdditionalProperties;<del>cli/Arguments.java<del>@Parameter(names = { "-D", "--disable-additional-properties" }, description = "Disable additional properties support on generated types, regardless of the input schema(s)")<del>private boolean disableAdditionalProperties = false;<del>return disableAdditionalProperties;
tr	False	skip language variants for the website overview<add>provisioning/JdbcUserDetailsManager.java<add>* enableAuthorities} property is set to false, calls to createUser, updateUser and deleteUser will not store the<add>* authorities from the <add>* between authorities which were loaded for an individual or for a group of which the individual is a member,<add>* it's important that you take this into account when using this implementation for managing your users.<add>if (getEnableAuthorities()) {<add>deleteUserAuthorities(username);<add>}<del>provisioning/JdbcUserDetailsManager.java<del>* enableAuthorities} property is set to false, calls to createUser and updateUser will not store the<del>* authorities from the <del>* loaded for an individual or for a group of which the individual is a member, it's important that you take this<del>* into account when using this implementation for managing your users.<del>deleteUserAuthorities(username);
tr	False	Removed printStackTrace in initializeTimeout<add>widget/TextView.java<add>i.setFlags(i.getFlags() | Intent.FLAG_ACTIVITY_NEW_TASK);<del>widget/TextView.java
tr	True	Lengthened wait period in shortCircuited HealthCounts unit test<add>consumer/HealthCountsStreamTest.java<add>Thread.sleep(500);<del>consumer/HealthCountsStreamTest.java<del>Thread.sleep(100);
tr	False	Defaults ScribeCollector to NOOP_METRICS<add>formatter/FormattedAuditEvent.java<add>* The message template string that will be used to present the audit event to humans.<add>String messageTemplate();<add>* All information that is needed by the {@link #messageTemplate()} should be in here.<del>formatter/FormattedAuditEvent.java<del>* The format string that will be used to present the audit event to humans.<del>String formatString();<del>* All information that is needed by the {@link #formatString()} should be in here.
tr	True	Relax ServerBootstrap type constraint to support UDT properly<add>bootstrap/ServerBootstrap.java<add>public final class ServerBootstrap extends AbstractBootstrap<del>bootstrap/ServerBootstrap.java<del>public final class ServerBootstrap extends AbstractBootstrap
tr	True	skip copyright for tests<add>createConstructorParameterFromField/afterVarargs.java<del>createConstructorParameterFromField/afterVarargs.java<del>/*<del>* Copyright 2000-2011 JetBrains s.r.o.<del>*<del>* Licensed under the Apache License, Version 2.0 (the "License");<del>* you may not use this file except in compliance with the License.<del>* You may obtain a copy of the License at<del>*<del>* http://www.apache.org/licenses/LICENSE-2.0<del>*<del>* Unless required by applicable law or agreed to in writing, software<del>* distributed under the License is distributed on an "AS IS" BASIS,<del>* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<del>* See the License for the specific language governing permissions and<del>* limitations under the License.<del>*/<del>
tr	True	Adding boilerplate for jetty security work Jesse is doing<add>start/Main.java<add>showActiveSecurityPolicies();<add>private void showActiveSecurityPolicies()<add>{<add>// System.out.println("Active Security Policies: ");<add><add>// TODO: put security policy dump here<add>}<add><del>start/Main.java
tr	True	don t preserve coverage data for interfaces<add>coverage/SourceLineCounterUtil.java<add>return !counter.isInterface();<del>coverage/SourceLineCounterUtil.java<del>return true;
tr	False	Using comboxBox for boolean type rendering instead fo button<add>mockito/Mockito.java<add>* For stubbing void methods with throwables see: {@link Mockito#doThrow(Throwable)}<del>mockito/Mockito.java<del>* For stubbing void methods with throwables see: {@link Mockito#stubVoid}
tr	True	Clarify RecyclerView LayoutManager getItemCount behavior<add>widget/RecyclerView.java<add>* Returns the number of items in the adapter bound to the parent RecyclerView.<add>* <add>* Note that this number is not necessarily equal to {@link State#getItemCount()}. In<add>* methods where State is available, you should use {@link State#getItemCount()} instead.<add>* For more details, check the documentation for {@link State#getItemCount()}.<add>* @return The number of items in the bound adapter<add>* @see State#getItemCount()<add>* Returns the total number of items that can be laid out. Note that this number is not<add>* necessarily equal to the number of items in the adapter, so you should always use this<add>* number for your position calculations and never access the adapter directly.<add>* <add>* RecyclerView listens for Adapter's notify events and calculates the effects of adapter<add>* data changes on existing Views. These calculations are used to decide which animations<add>* should be run.<add>* <add>* To support predictive animations, RecyclerView may rewrite or reorder Adapter changes to<add>* present the correct state to LayoutManager in pre-layout pass.<add>* <add>* For example, a newly added item is not included in pre-layout item count because<add>* pre-layout reflects the contents of the adapter before the item is added. Behind the<add>* scenes, RecyclerView offsets {@link Recycler#getViewForPosition(int)} calls such that<add>* LayoutManager does not know about the new item's existence in pre-layout. The item will<add>* be available in second layout pass and will be included in the item count. Similar<add>* adjustments are made for moved and removed items as well.<add>* <add>* You can get the adapter's item count via {@link LayoutManager#getItemCount()} method.<add>*<add>* @return The number of items currently available<add>* @see LayoutManager#getItemCount()<del>widget/RecyclerView.java<del>* Return the number of items in the adapter bound to the parent RecyclerView<del>* @return Items in the bound adapter<del>* @return Total number of items to be laid out. Note that, this number is not necessarily<del>* equal to the number of items in the adapter, so you should always use this number for<del>* your position calculations and never call adapter directly.
tr	True	Fix CacheManager example in Javadoc<add>annotation/EnableCaching.java<add>*         cacheManager.setCaches(Arrays.asList(new ConcurrentMapCache("default")));<add>*         cacheManager.setCaches(Arrays.asList(new ConcurrentMapCache("default")));<del>annotation/EnableCaching.java<del>*         cacheManager.addCaches(Arrays.asList(new ConcurrentMapCache("default")));<del>*         cacheManager.addCaches(Arrays.asList(new ConcurrentMapCache("default")));
tr	True	Fix crash in toString for an unparsed block header object<add>core/Block.java<add>+ getPrevBlockHash().toString() + "\n" + "   merkle root: " + getMerkleRoot().toString() + "\n"<add>"   time: [" + time + "] " + new Date(time * 1000).toString() + "\n"<add>"   difficulty target (nBits): " + difficultyTarget + "\n" + "   nonce: " + nonce + "\n");<del>core/Block.java<del>+ prevBlockHash.toString() + "\n" + "   merkle root: " + getMerkleRoot().toString() + "\n"
tr	True	fixed possible NPE<add>book/Bookmark.java<add>if (other != null) {<add>myId = other.myId;<add>}<del>book/Bookmark.java<del>myId = other.myId;
tr	True	Fixing concurrency issue hopefully<add>processor/MulticastProcessor.java<add>completedExchanges.decrement();<del>processor/MulticastProcessor.java<del>completedExchanges.decrement();
tr	False	Ignore illegal state exception support info<add>ui/OverviewFragment.java<add>CheatSheet.setup(ratings, R.string.menu_rate_episode);<del>ui/OverviewFragment.java<del>CheatSheet.setup(ratings, R.string.menu_rate_trakt);
tr	False	Use a preference theme for Switch widget in SwitchScreenPreference<add>widget/TextView.java<add>i.setFlags(i.getFlags() | Intent.FLAG_ACTIVITY_NEW_TASK);<del>widget/TextView.java
tr	True	Copy opaque over shape in GradientDrawable copy constructor<add>drawable/GradientDrawable.java<add>mOpaqueOverShape = state.mOpaqueOverShape;<del>drawable/GradientDrawable.java
tr	True	Updated FreemarkerViewRenderer to load the default Freemarker encoding map<add>freemarker/FreemarkerViewRenderer.java<add>configuration.loadBuiltInEncodingMap();<del>freemarker/FreemarkerViewRenderer.java
tr	True	Adding logic to show magic links<add>ui/ActivityLauncher.java<add>import com.mixpanel.android.mpmetrics.MixpanelAPI;<add>import com.mixpanel.android.mpmetrics.Tweak;<add><add>private static Tweak<add>if (showMagicLinksLogin.get() && WPActivityUtils.isEmailClientAvailable(activity)) {<del>ui/ActivityLauncher.java<del>if (shouldShowMagicLinkSignIn(activity)) {
tr	False	Fix checkstyle issue<add>strategy/GenericFileRenameExclusiveReadLockStrategy.java<add>* After granting the read lock it is released, we just want to make sure that when we start<del>strategy/GenericFileRenameExclusiveReadLockStrategy.java<del>* After granting the read lock it is realeased, we just want to make sure that when we start
tr	False	Hide empty state upon refreshed<add>sql/Sql.java<add>* free any cached resources.<del>sql/Sql.java<del>* free any caches resources.
tr	True	Remove stale testMultiIDAcquisition override<add>infinispan/InfinispanCacheAdapterLockStoreTest.java<del>infinispan/InfinispanCacheAdapterLockStoreTest.java<del>//TODO: should this test work in-memory?<del>@Override<del>public void testMultiIDAcquisition() {}
tr	True	Create AnalysisReportDao object to test the DAO<add>compute/AnalysisReportDaoTest.java<add>static final String DEFAULT_PROJECT_KEY = "123456789-987654321";<add>DbSession session;<add>AnalysisReportDao underTest = new AnalysisReportDao(system2);<del>compute/AnalysisReportDaoTest.java<del>import org.junit.rules.TemporaryFolder;<del>private static final String DEFAULT_PROJECT_KEY = "123456789-987654321";<del><del>@Rule<del>public TemporaryFolder temp = new TemporaryFolder();<del><del>AnalysisReportDao underTest = db.getDbClient().analysisReportDao();<del>private DbSession session;<del>db.truncateTables();
tr	True	Fix Bug with forced repartitioning in DOP changes<add>plan/Channel.java<add>case NONE: // excluded by sanity check. left here for verification check completion<add>case PARTITION_FORCED_REBALANCE:<del>plan/Channel.java<del>case NONE: // excluded by sanity check. lust here for verification check completion
tr	True	Remove unused import from test code<add>checkstyle/DebugChecker.java<del>checkstyle/DebugChecker.java<del>import com.puppycrawl.tools.checkstyle.api.CheckstyleException;<del>
tr	False	Implement POJO display cutoff for DL<add>showcaseview/ShowcaseViews.java<add>/**<add>* Add an animated gesture to the view at position viewIndex.<add>* @param viewIndex The position of the view the gesture should be added to (beginning with 0 for the view which had been added as the first one)<add>* @see com.espian.showcaseview.ShowcaseView#animateGesture(float, float, float, float)<add>*/<del>showcaseview/ShowcaseViews.java
tr	False	Removed printStackTrace in initializeTimeout<add>users/UsersResource.java<add>@DELETE<add>@Path("{username}")<add>@RequiresPermissions(RestPermissions.USERS_EDIT)<add>public Response deleteUser(@PathParam("username") String username) {<add>final User user = User.load(username, core);<add>if (user.isReadOnly()) {<add>throw new BadRequestException("Cannot delete readonly user " + username);<add>}<add><add>user.destroy();<add>return Response.noContent().build();<add>}<add><del>users/UsersResource.java
tr	True	Add backoff intervals to the retry cache invoker<add>infinispan/InfinispanBackingCacheEntryStoreSource.java<add>private CacheInvoker invoker = new RetryingCacheInvoker(new BatchCacheInvoker(), 10, 100);<del>infinispan/InfinispanBackingCacheEntryStoreSource.java<del>private CacheInvoker invoker = new RetryingCacheInvoker(new BatchCacheInvoker(), 0, 0);
tr	True	Fix missing AUC for training data in DL<add>deeplearning/DeepLearningModel.java<add>err.training_AUC = mm._auc;<del>deeplearning/DeepLearningModel.java
tr	False	prefer shorter names when sorting import candidate list<add>conf/NeuralNetConfiguration.java<add>private transient ObjectMapper mapper = mapper();<del>conf/NeuralNetConfiguration.java<del>private ObjectMapper mapper = mapper();
tr	False	Fixed bug on negative cluster id<add>editors/EditingTargetCodeExecution.java<add>display, docId);<del>editors/EditingTargetCodeExecution.java<del>target.getDocDisplay(), docId);
tr	False	remove warning about cast<add>alerts/AlertSender.java<add>if (core.getConfiguration().isEmailTransportUseSsl()) {<add>email.setSslSmtpPort(Integer.toString(core.getConfiguration().getEmailTransportPort()));<add>}<del>alerts/AlertSender.java
tr	False	Make objectmapper transient<add>editors/EditingTargetCodeExecution.java<add>display, docId);<del>editors/EditingTargetCodeExecution.java<del>target.getDocDisplay(), docId);
tr	False	Fixed strange compilation error that only happens with some java compilers<add>widget/TabWidget.java<add>* Sets the drawable to use as the right part of the strip below the<add>* @param drawable the right strip drawable<add>* Sets the drawable to use as the right part of the strip below the<add>* right strip drawable<del>widget/TabWidget.java<del>* Sets the drawable to use as the left part of the strip below the<del>* @param drawable the left strip drawable<del>* Sets the drawable to use as the left part of the strip below the<del>* left strip drawable
tr	False	Inspect page workaround for temporary lack of type info<add>solo/Waiter.java<add>}catch (Throwable ignored) {}<del>solo/Waiter.java<del>}catch (Exception ignored) {}
tr	False	Renamed PacketNotificator to PacketCopier<add>linkview/LinkViewOverlayService.java<add>if (componentName.getClassName().equals("com.chrislacy.linkview.MainActivity")) {<add>//Log.d("LinkView", "Ignore " + componentName.getClassName());<add>continue;<add>}<add><del>linkview/LinkViewOverlayService.java
tr	False	Copy opaque over shape in GradientDrawable copy constructor<add>db/ColumnFamilyStoreTest.java<add>cfs.truncateBlocking();<del>db/ColumnFamilyStoreTest.java<del>cfs.clearUnsafe();
tr	True	Added TODO in BitmapTextureAtlas<add>bitmap/BitmapTextureAtlas.java<add>// TODO What about GLES20.glPixelStorei(GLES20.GL_UNPACK_ALIGNMENT, 1); in here?<add><add>//	final ByteBuffer image = ByteBuffer.allocateDirect(height * stride).order(ByteOrder.nativeOrder());<del>bitmap/BitmapTextureAtlas.java<del>//	final ByteBuffer image = ByteBuffer.allocateDirect(height * stride)<del>//			.order(ByteOrder.nativeOrder());
tr	True	fix test data<add>projectView/NavigateFromSourceTest.java<add>"     -[Class1.java]\n" +<add>"      [Class11]\n" +<del>projectView/NavigateFromSourceTest.java<del>"     [Class11]\n" +
tr	False	Add missing exception check<add>network/HttpSender.java<add>// ZAP: 2016/12/12 Add initiator constant for Forced Browse requests<add>public static final int FORCED_BROWSE_INITIATOR = 11;<del>network/HttpSender.java
tr	False	forget old instantiations before reduction need for incorporation<add>video/Capture.java<add>* captureEvent method that receives a Capture argument. This method will<del>video/Capture.java<del>* captureEvent method that receives a GSMovie argument. This method will
tr	False	undid stub generation workaround because it s not correct<add>launcher/FMLServerTweaker.java<add>classLoader.addClassLoaderExclusion("org.objectweb.asm.");<del>launcher/FMLServerTweaker.java
tr	False	Drop the unused private getLoader update the help text a bit for clarity<add>fixtures/DaemonGradleExecuter.java<add>if (customDaemonRegistryDir != null) {<del>fixtures/DaemonGradleExecuter.java<del>if (customDaemonRegistryDir != null && !distribution.isUsingOwnUserHomeDir()) {
tr	True	do not show invalid breakpoints when rendering gutter events<add>ui/PositionHighlighter.java<add>if (((BreakpointWithHighlighter)breakpoint).isVisible() && breakpoint.isValid()) {<del>ui/PositionHighlighter.java<del>if (((BreakpointWithHighlighter)breakpoint).isVisible()) {
tr	True	fixed copyright headers<add>spdy/Controller.java<add>// ========================================================================<add>// Copyright 2012-2012 Mort Bay Consulting Pty. Ltd.<add>// ------------------------------------------------------------------------<add>// All rights reserved. This program and the accompanying materials<add>// are made available under the terms of the Eclipse Public License v1.0<add>// and Apache License v2.0 which accompanies this distribution.<add>// The Eclipse Public License is available at<add>// http://www.eclipse.org/legal/epl-v10.html<add>// The Apache License v2.0 is available at<add>// http://www.opensource.org/licenses/apache2.0.php<add>// You may elect to redistribute this code under either of these licenses.<add>// ========================================================================<del>spdy/Controller.java<del>/*<del>* Copyright (c) 2012 the original author or authors.<del>*<del>* Licensed under the Apache License, Version 2.0 (the "License");<del>* you may not use this file except in compliance with the License.<del>* You may obtain a copy of the License at<del>*<del>*     http://www.apache.org/licenses/LICENSE-2.0<del>*<del>* Unless required by applicable law or agreed to in writing, software<del>* distributed under the License is distributed on an "AS IS" BASIS,<del>* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<del>* See the License for the specific language governing permissions and<del>* limitations under the License.<del>*/
tr	True	Adds static final TYPE_CANCEL<add>smackx/Form.java<add>public static final String TYPE_CANCEL = "cancel";<del>smackx/Form.java
tr	True	corrected field name used in reflection<add>impl/TextAttributesReaderTest.java<add>Field field = TextAttributes.class.getDeclaredField("myEnforceEmpty");<del>impl/TextAttributesReaderTest.java<del>Field field = TextAttributes.class.getDeclaredField("myEnforcedDefaults");
tr	True	Fixed the problem with the calendar sort order using the column name<add>provider/CalendarContract.java<add>public static final String DEFAULT_SORT_ORDER = CALENDAR_DISPLAY_NAME;<del>provider/CalendarContract.java<del>public static final String DEFAULT_SORT_ORDER = "displayName";
tr	False	Removed unnecessary args these are added higher up<add>database/DatabaseTest.java<del>database/DatabaseTest.java<del>System.out.println(databaseDirectory.getAbsolutePath());
tr	False	Fix javadoc for SuppressWarningsDeprecated<add>util/Execution.java<add>Class<add>while (mySuper != null && !mySuper.equals(Object.class)) {<add>if (!class2object.containsKey(mySuper)) {<add>class2object.put(mySuper, instances[i]);<add>}<add>mySuper = mySuper.getSuperclass();<add>}<del>util/Execution.java
tr	False	arg more compile errors fixed<add>rx/Observable.java<add>import rx.operators.OperationDistinctUntilChanged;<add>* Returns an Observable that forwards all sequentially distinct items emitted from the source Observable.<add>*<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public Observable<add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this));<add>}<add><add>/**<add>* Returns an Observable that forwards all items emitted from the source Observable that are sequentially distinct according to<add>* a key selector function.<add>*<add>* @param keySelector<add>*            a function that projects an emitted item to a key value which is used for deciding whether an item is sequentially<add>*            distinct from another one or not<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public <add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this, keySelector));<add>}<add><add>/**<del>rx/Observable.java
tr	False	ui updating fix<add>index/ExtractGooglecodeAuthorization.java<add>System.out.println("--");<del>index/ExtractGooglecodeAuthorization.java<del>System.out.ptintln("--");
tr	False	don t show duplicate group for intention actions<add>applytx/DumpRecordsCommand.java<add>// We rely on this method having the side-effect of loading the property blocks:<add>record.numberOfProperties();<del>applytx/DumpRecordsCommand.java
tr	True	Fixed typecast exception<add>saripaar/AnnotationToRuleConverter.java<add>Rule<add>rules.toArray(ruleArray);<add><add>return Rules.and(message, ruleArray);<del>saripaar/AnnotationToRuleConverter.java<del>return Rules.and(message, (Rule
tr	True	don t write fileTypeChangedCounter default value<add>impl/FileTypeManagerImpl.java<add>import com.intellij.openapi.components.*;<add><add>int value = fileTypeChangedCount.get();<add>if (value != 0) {<add>JDOMExternalizer.write(parentNode, "fileTypeChangedCounter", value);<add>}<del>impl/FileTypeManagerImpl.java<del>import com.intellij.openapi.components.ExportableApplicationComponent;<del>import com.intellij.openapi.components.RoamingType;<del>import com.intellij.openapi.components.StoragePathMacros;<del>JDOMExternalizer.write(parentNode, "fileTypeChangedCounter", fileTypeChangedCount.get());
tr	True	Attribute value index check<add>resultset/ResultSetModel.java<add>final int index = attribute.getOrdinalPosition();<add>if (index >= row.values.length) {<add>log.debug("Bad attribute - index out of row values' bounds");<add>return null;<add>} else {<add>return row.values[index];<add>}<del>resultset/ResultSetModel.java<del>return row.values[attribute.getOrdinalPosition()];
tr	True	changed keyword self lookup to use RT get<add>lang/Keyword.java<add>return RT.get(obj, this);<del>lang/Keyword.java<del>if(obj == null)<del>return null;<del>return ((IPersistentMap) obj).valAt(this);
tr	False	Updating the Need Help<add>logging/GrailsConsole.java<add>return DefaultGroovyMethods.join((Iterable)this, CATEGORY_SEPARATOR) + CATEGORY_SEPARATOR;<del>logging/GrailsConsole.java<del>return DefaultGroovyMethods.join(this, CATEGORY_SEPARATOR) + CATEGORY_SEPARATOR;
tr	False	Moved a TODO from a public interface to the implementation<add>standalone/CommandLineParameters.java<add><add>@Parameter(names = {"--useTransfersTxt"},<add>description = "use transfers.txt file for the gtfsBundle (GTFS)")<add>boolean useTransfersTxt;<del>standalone/CommandLineParameters.java
tr	False	Remove stale testMultiIDAcquisition override<add>stampede/CliConfig.java<del>stampede/CliConfig.java<del>@Parameter(names={"--cursor-timeout"}, descriptionKey="config.mongo.cursorTimeout")<del>private String cursorTimeout;<del>public String getCursorTimeout() {<del>return cursorTimeout;<del>}<del>if (cursorTimeout != null) {<del>addParam("/replication/cursorTimeout", cursorTimeout);<del>}
tr	True	Ask people not to reformat since this is imported code<add>binning/Metaphone3.java<add>* A request from the author: Please comment and sign any changes you make to<add>* the Metaphone 3 reference implementation.<add>* <add>* Please do NOT reformat this module to Google Refine's coding standard,<add>* but instead keep the original format so that it can be more easily compare<add>* to any modified fork of the original.<del>binning/Metaphone3.java<del>* A request from the author: Please comment and sign any changes you make to the Metaphone 3 reference implementation.
tr	True	Remove Metrics allMetrics<add>metrics/Metrics.java<del>metrics/Metrics.java<del>import java.util.Map;<del>* Returns an unmodifiable map of all metrics and their names.<del>*<del>* @return an unmodifiable map of all metrics and their names<del>*/<del>public static Map<del>return DEFAULT_REGISTRY.allMetrics();<del>}<del><del>/**
tr	True	Feedback any provisional responses in addition to RING<add>sip/SipSessionGroup.java<add>case Response.CALL_IS_BEING_FORWARDED:<add>case Response.QUEUED:<add>case Response.SESSION_PROGRESS:<add>// feedback any provisional responses (except TRYING) as<add>// ring back for better UX<del>sip/SipSessionGroup.java<del>import android.net.sip.SipSessionAdapter;
tr	False	Fix build warnings introduced by Move default rule key building logic to CachingBuildEngine<add>impl/ConfigurationSettingsEditorWrapper.java<add><add>if (!stepsRows.isEmpty()) {<add>myStepsPanel.setLayout(new GridLayout(stepsRows.size(), 1));<add>for (StepBeforeLaunchRow stepRow : stepsRows) {<add>myStepsPanel.add(stepRow);<add>}<add>}<add>else {<add>myStepsPanel.setVisible(false);<del>impl/ConfigurationSettingsEditorWrapper.java<del>myStepsPanel.setLayout(new GridLayout(stepsRows.size(), 1));<del>for (StepBeforeLaunchRow stepRow : stepsRows) {<del>myStepsPanel.add(stepRow);
tr	True	Add the option to set transfersTxtDefinesStationPaths option to use the transfers txt from the gtfs feed<add>standalone/CommandLineParameters.java<add><add>@Parameter(names = {"--useTransfersTxt"},<add>description = "use transfers.txt file for the gtfsBundle (GTFS)")<add>boolean useTransfersTxt;<del>standalone/CommandLineParameters.java
tr	True	Silent reports were still displaying a Toast on application start with TOAST mode<add>acra/ErrorReporter.java<add>// Immediately send reports for SILENT and TOAST modes.<add>// Immediately send reports int NOTIFICATION mode only if they are all silent.<add><add>if (mReportingInteractionMode == ReportingInteractionMode.TOAST && !onlySilentReports) {<add>// Display the Toast in TOAST mode only if there are non-silent reports.<add><add>// There are reports to send, display the notification<del>acra/ErrorReporter.java<del>if (mReportingInteractionMode == ReportingInteractionMode.TOAST) {
tr	False	Log all notification interceptions<add>view/DefaultView.java<add>lock.lock();<add>lock.unlock();<del>view/DefaultView.java
tr	True	forget old instantiations before reduction need for incorporation<add>graphInference/InferenceSession.java<add>boolean doesNotContainFalseBound = repeatInferencePhases();<add>for (InferenceVariable inferenceVariable : myInferenceVariables.values()) {<add>inferenceVariable.ignoreInstantiation();<add>}<add>doesNotContainFalseBound = repeatInferencePhases();<add>doesNotContainFalseBound = proceedWithAdditionalConstraints(additionalConstraints);<del>graphInference/InferenceSession.java<del>repeatInferencePhases();<del>repeatInferencePhases();<del>proceedWithAdditionalConstraints(additionalConstraints);
tr	False	do not call IdeFocusManager on minor focus requests<add>xprivacy/XActivityThread.java<add>} catch (IllegalStateException ignored) {<add>// No receivers for action ...<del>xprivacy/XActivityThread.java
tr	True	check myDisposed in read action too<add>livePreview/SearchResults.java<add>if (myDisposed || project != null && project.isDisposed()) return;<del>livePreview/SearchResults.java<del>if (project != null && project.isDisposed()) return;
tr	True	Add check for project disposed<add>actions/MavenShowEffectivePom.java<add>if (project.isDisposed()) return;<add><del>actions/MavenShowEffectivePom.java
tr	True	Fix broken merge<add>hadoop/ColumnFamilyOutputFormat.java<add>import org.apache.thrift.transport.TTransport;<add>private static final Logger logger = LoggerFactory.getLogger(ColumnFamilyOutputFormat.class);<add><del>hadoop/ColumnFamilyOutputFormat.java
tr	False	Fix ShadowConnectivityManager constructor<add>annotation/SseIntegrationTests.java<add>.await(Duration.ofSeconds(5))<add>.await(Duration.ofSeconds(5))<add>.await(Duration.ofSeconds(5))<del>annotation/SseIntegrationTests.java<del>.await()<del>.await()<del>.await()
tr	False	Fix CacheManager example in Javadoc<add>sql/Sql.java<add>* free any cached resources.<del>sql/Sql.java<del>* free any caches resources.
tr	True	Add some javadoc to AudioRecord plus updates based on code review comments<add>media/AudioFormat.java<add>/** Audio data format: PCM 16 bit per sample. Guaranteed to be supported by devices. */<add>/** Audio data format: PCM 8 bit per sample. Not guaranteed to be supported by devices. */<del>media/AudioFormat.java<del>/** Audio data format: PCM 16 bit per sample */<del>/** Audio data format: PCM 8 bit per sample */
tr	False	add default tuning config for index task<add>impl/ConfigurationSettingsEditorWrapper.java<add><add>if (!stepsRows.isEmpty()) {<add>myStepsPanel.setLayout(new GridLayout(stepsRows.size(), 1));<add>for (StepBeforeLaunchRow stepRow : stepsRows) {<add>myStepsPanel.add(stepRow);<add>}<add>}<add>else {<add>myStepsPanel.setVisible(false);<del>impl/ConfigurationSettingsEditorWrapper.java<del>myStepsPanel.setLayout(new GridLayout(stepsRows.size(), 1));<del>for (StepBeforeLaunchRow stepRow : stepsRows) {<del>myStepsPanel.add(stepRow);
tr	True	annotation demo add protocol<add>server/MotanDemoServiceImpl.java<add>@MotanService(export = "demoMotan:8002")<del>server/MotanDemoServiceImpl.java<del>@MotanService(export = "8002")
tr	False	Fix infinite loop in LzoTextLoader<add>string/ORecordSerializerJSON.java<add>json.writeAttribute(identLevel + 1, true, fieldName, encode(record.field(fieldName)));<add>private Object encode(final Object iValue) {<add>if (iValue instanceof String) {<add>final String encoded = ((String) iValue).replace('"', '\'');<add>return encoded;<add>} else<add>return iValue;<add>}<add><del>string/ORecordSerializerJSON.java<del>json.writeAttribute(identLevel + 1, true, fieldName, record.field(fieldName));
tr	False	Added setter method for account status checker<add>cpr/AtmosphereServlet.java<del>cpr/AtmosphereServlet.java<del>logger.info("Initializing Atmosphere framework: {}", Version.getRawVersion());<del>
tr	False	Refactor Extract Dependency moves classifier to parent module<add>composite/GradleCompositeException.java<add>/**<add>* Thrown when there is some problem using a Gradle composite.<add>*<add>* @since 2.12<add>*/<del>composite/GradleCompositeException.java
tr	False	DSC alarm now sends user code over serial interface<add>metadata/TableHandleJacksonModule.java<add>Throwables.propagateIfInstanceOf(e.getCause(), IOException.class);<add>Throwables.propagateIfInstanceOf(e.getCause(), JsonGenerationException.class);<del>metadata/TableHandleJacksonModule.java
tr	True	put Emergency first<add>data/AmenityType.java<add>EMERGENCY("emergency"), // [TAG] emergency services //$NON-NLS-1$ //$NON-NLS-2$<add>HEALTHCARE("amenity"), // hospitals, doctors, ... //$NON-NLS-1$ //$NON-NLS-2$<add><del>data/AmenityType.java<del>HEALTHCARE("amenity"), // hospitals, doctors, ... //$NON-NLS-1$ //$NON-NLS-2$<del>EMERGENCY("emergency"), // [TAG] emergency services //$NON-NLS-1$ //$NON-NLS-2$<del>
tr	False	Exception doesn t catch NoSuchMethodError Throwable does<add>mongodb/MongodbQueryTest.java<add>public void Equals_and_Between() {<add>assertQuery(user.firstName.startsWith("Jaa").and(user.age.between(20, 30)), u2, u1);<add>assertQuery(user.firstName.startsWith("Jaa").and(user.age.goe(20).and(user.age.loe(30))), u2, u1);<add>}<add><add>@Test<del>mongodb/MongodbQueryTest.java
tr	False	Fix typo into javadoc<add>dev/RuleOverview.java<add>if (lang.isVariant()) {<add>continue;<add>}<del>dev/RuleOverview.java
tr	False	Fix the network handler for forge<add>commitlog/CommitLogSegment.java<add>Object cdcStateLock = new Object();<add>synchronized(cdcStateLock)<del>commitlog/CommitLogSegment.java<del>synchronized(this)
tr	True	insert missing blank<add>render/BaseOsmandRender.java<add>boolean r = renderPolylineImpl(tag, val, zoom, rc, o, layer, nightMode, moreDetail);<del>render/BaseOsmandRender.java<del>boolean r = renderPolylineImpl(tag,val, zoom, rc, o, layer, nightMode, moreDetail);
tr	False	Modify the log level<add>saripaar/AnnotationToRuleConverter.java<add>Rule<add>rules.toArray(ruleArray);<add><add>return Rules.and(message, ruleArray);<del>saripaar/AnnotationToRuleConverter.java<del>return Rules.and(message, (Rule
tr	True	zooming now uses the ScaleGestureDetector from android<add>shadows/ShadowMotionEvent.java<add>public float getRawX() {<add>return getX();<add>}<add><add>@Implementation<add>public float getRawY() {<add>return getY();<add>}<add><add>@Implementation<add>@Implementation<add>public final float getPressure(int pointerIndex) {<add>return 1.0f;<add>}<add><del>shadows/ShadowMotionEvent.java
tr	False	Fixed documentation of parameter<add>widget/TextView.java<add>i.setFlags(i.getFlags() | Intent.FLAG_ACTIVITY_NEW_TASK);<del>widget/TextView.java
tr	False	update comment to reflect message layout<add>core/PImage.java<add>return true;<del>core/PImage.java<del><del>
tr	False	removed invalid check from test<add>form/BooleanFormPropertyRenderer.java<add>import com.vaadin.ui.CheckBox;<add>CheckBox checkBox = new CheckBox(getPropertyLabel(formProperty));<add>checkBox.setRequired(formProperty.isRequired());<add>checkBox.setEnabled(formProperty.isWritable());<add>checkBox.setValue(formProperty.getValue());<add>return checkBox;<del>form/BooleanFormPropertyRenderer.java<del>import com.vaadin.ui.Button;<del>Button button = new Button(getPropertyLabel(formProperty));<del>button.setRequired(formProperty.isRequired());<del>button.setEnabled(formProperty.isWritable());<del>button.setValue(formProperty.getValue());<del>return button;
tr	True	add test case for check failure in case of save of invalid rid<add>document/ODatabaseDocumentTxTest.java<add>import com.orientechnologies.orient.core.exception.ODatabaseException;<add><add>@Test(expectedExceptions = AssertionError.class)<add>public void testSaveInvalidRid() {<add>ODatabaseDocumentTx db = new ODatabaseDocumentTx("memory: rid_" + ODatabaseDocumentTxTest.class.getSimpleName());<add>db.create();<add>try {<add>ODocument doc = new ODocument();<add><add>doc.field("test", new ORecordId(-2, 10));<add><add>db.save(doc);<add><add>} finally {<add>db.drop();<add>}<add>}<add><add>}<del>document/ODatabaseDocumentTxTest.java<del>}
tr	True	removed debug search left sect optimal width<add>floatingsearchview/FloatingSearchView.java<add>SEARCH_BAR_LEFT_SECTION_DESIRED_WIDTH = Util.dpToPx(270);<add>//todo go over<add>//todo go over<add>//todo go over<add>* todo go over<add>*<del>floatingsearchview/FloatingSearchView.java<del>SEARCH_BAR_LEFT_SECTION_DESIRED_WIDTH = Util.dpToPx(175);//Util.dpToPx(150+4+48+20);
tr	False	disable event expansion<add>mongodb/MongodbQueryTest.java<add>public void Equals_and_Between() {<add>assertQuery(user.firstName.startsWith("Jaa").and(user.age.between(20, 30)), u2, u1);<add>assertQuery(user.firstName.startsWith("Jaa").and(user.age.goe(20).and(user.age.loe(30))), u2, u1);<add>}<add><add>@Test<del>mongodb/MongodbQueryTest.java
tr	False	Expanded the filename filter for snapshot paths<add>commandLine/SvnCommand.java<del>commandLine/SvnCommand.java<del>public SvnCommand(File workingDirectory, @NotNull SvnCommandName commandName, @NotNull @NonNls String exePath) {<del>this(workingDirectory, commandName, exePath, null);<del>}<del>
tr	False	stop smart step into on return<add>db/DB2DB.java<add>alterSql = StringUtil.trim(alterSql);<add><del>db/DB2DB.java
tr	True	removed unnecessary explicit cast<add>helper/DomainNameChecker.java<add>Collection<add>for (List<del>helper/DomainNameChecker.java<del>Collection<del>for (Object subjectAltName : subjectAltNames) {<del>List
tr	True	Camel commands useable for remote JVMs using jolokia<add>commands/ContextSuspendCommand.java<add>camelController.suspendContext(contextName);<del>commands/ContextSuspendCommand.java<del>camelController.resumeContext(contextName);
tr	False	Recursive navigator tree read fixed<add>changes/ChangeCollector.java<add>handler.addParameters("--name-status", "--diff-filter=ADCMRUX", "-M", "HEAD");<del>changes/ChangeCollector.java<del>handler.addParameters("--name-status", "--diff-filter=ADMRUX", "-M", "HEAD");
tr	False	Remove unnessary logging<add>lazy/ScopeProvider.java<add>writableScope.changeLockLevel(WritableScope.LockLevel.BOTH);<del>lazy/ScopeProvider.java<del>
tr	False	Removed unused SvnCommand constructor<add>java/GetCharacterListTest.java<add>import static org.mockito.Mockito.when;<add>@Test public void testThatCharactersUsecaseWithOffsetIsCalledOnce() throws Exception {<add>GetCharactersUsecase charactersUsecase = givenACharactersUsecase();<add>int fakeCurrentOffset = 20;<add><add>when(mockRepository.getCharacters(fakeCurrentOffset)).thenReturn(getFakeObservableCharacterList());<add>charactersUsecase.executeIncreasingOffset();<add><add>Mockito.verify(mockRepository, only()).getCharacters(fakeCurrentOffset);<add>}<add><del>java/GetCharacterListTest.java
tr	True	removed log error<add>stores/ProjectStoreImpl.java<add>LOG.info(e);<del>stores/ProjectStoreImpl.java<del>LOG.error(e);
tr	True	Disable code that no longer compiles in WalletTool pending fix<add>tools/WalletTool.java<add>System.err.println("Seed string must be mnemonic words");<add>return;<add>/*<add>*/<del>tools/WalletTool.java
tr	False	Updated the copyright notice to current year<add>tts/TtsService.java<add>processSpeechQueue();<add>processSpeechQueue();<del>tts/TtsService.java<del>processSpeechQueue();<del>processSpeechQueue();
tr	False	Fixed bug on negative cluster id<add>factory/TileHopper.java<add>if (CoreProxy.proxy.isRenderWorld(worldObj) || worldObj.getWorldTime() % 2 != 0)<del>factory/TileHopper.java<del>if (CoreProxy.proxy.isRenderWorld(worldObj) || worldObj.getWorldTime() % 5 != 0)
tr	True	Make IndexChangedListener public<add>index/IndexDatabase.java<add>public void addIndexChangedListener(IndexChangedListener listener) {<add>public void removeIndexChangedListener(IndexChangedListener listener) {<del>index/IndexDatabase.java<del>void addIndexChangedListener(IndexChangedListener listener) {<del>void removeIndexChangedListener(IndexChangedListener listener) {
tr	False	Do not crash appwdiget host when a pending intent send fails<add>deeplinkdispatch/DeepLinkEntry.java<add>private static final String PARAM_VALUE = "([a-zA-Z0-9_#'!+%~,\\-\\.\\@\\$\\:]+)";<del>deeplinkdispatch/DeepLinkEntry.java<del>private static final String PARAM_VALUE = "([a-zA-Z0-9_#'!+%~,\\-\\.\\@\\$]+)";
tr	False	zooming now uses the ScaleGestureDetector from android<add>aggregations/AggregatorFactories.java<del>aggregations/AggregatorFactories.java<del>// NOCOMMIT work out dependency order of reducer factories<del>System.out.println("ORDERED REDUCERS: " + orderedReducerNames);
tr	False	removed unused autoStartOtr variable<add>parser/Parser.java<add>String href = urlAnchorPair.getHref().trim();<add>String hrefLoweredCase = href.toLowerCase();<add>if (!hrefLoweredCase.contains("javascript:") && !hrefLoweredCase.contains("mailto:") && !hrefLoweredCase.contains("@")) {<del>parser/Parser.java<del>String href = urlAnchorPair.getHref();<del>href = href.trim().toLowerCase();<del>if (!href.contains("javascript:") && !href.contains("mailto:") && !href.contains("@")) {
tr	False	add builder methods withWidth and withHeight<add>prefs/SiteSettingsFragment.java<add>removePreference(R.string.pref_key_site_general, R.string.pref_key_site_language);<add>removePreference(R.string.pref_key_site_writing, R.string.pref_key_site_category);<add>removePreference(R.string.pref_key_site_writing, R.string.pref_key_site_format);<del>prefs/SiteSettingsFragment.java
tr	False	Fix a transparent flicker due to wrong crop<add>array/PanCakeSorting.java<add>package com.interview.sort;<del>array/PanCakeSorting.java<del>package com.interview.array;
tr	False	Added comic fields<add>master/LocalTachyonCluster.java<del>master/LocalTachyonCluster.java<del>private TachyonConf mClientConf;
tr	True	Remove backup of sleep policy setting<add>provider/Settings.java<del>provider/Settings.java<del>WIFI_SLEEP_POLICY,
tr	False	Fix possible NPE<add>app/Language.java<add>"zh"  // Chinese<add>Arrays.sort(SUPPORTED);<add><add>synchronized (Language.class) {<del>app/Language.java<del>"zh" // chinese<del>synchronized(Language.class) {
tr	False	Allowing negative keys in IntObjectHashMap<add>server/MotanDemoServiceImpl.java<add>@MotanService(export = "demoMotan:8002")<del>server/MotanDemoServiceImpl.java<del>@MotanService(export = "8002")
tr	True	Fix checkstyle issue<add>s3/S3Client.java<add>throw new GradleException("Cannot use S3 since the module 'java.xml.bind' is not available. "<add>+ "Please add \"-addmods java.xml.bind '-Dorg.gradle.jvmargs=-addmods java.xml.bind'\" to your GRADLE_OPTS.");<del>s3/S3Client.java<del>throw new GradleException("Cannot use S3 since the module 'java.xml.bind' is not available. " +<del>"Please add \"-addmods java.xml.bind '-Dorg.gradle.jvmargs=-addmods java.xml.bind'\" to your GRADLE_OPTS.");
tr	True	Re englishing an error message<add>extensions/ServerExtension.java<add>throw new IllegalArgumentException( "Name contains illegal characters" );<del>extensions/ServerExtension.java<del>throw new IllegalArgumentException( "Name contained illegal characters" );
tr	True	Fixing test issue<add>facebook/SessionTests.java<add>assertTrue(e.getMessage().contains("Cannot pass a publish or manage permission"));<add>assertTrue(e.getMessage().contains("Cannot pass a publish or manage permission"));<del>facebook/SessionTests.java<del>assertTrue(e.getMessage().contains("Cannot pass a publish permission"));<del>assertTrue(e.getMessage().contains("Cannot pass a publish permission"));
tr	False	Redraw search autocomplete dropdown after config change<add>webrender/WebRenderer.java<add>protected Context mContext;<add>mContext = context;<del>webrender/WebRenderer.java
tr	True	hide upload panel if there s no providers for stored before launch task configs r jeka<add>impl/ConfigurationSettingsEditorWrapper.java<add><add>if (!stepsRows.isEmpty()) {<add>myStepsPanel.setLayout(new GridLayout(stepsRows.size(), 1));<add>for (StepBeforeLaunchRow stepRow : stepsRows) {<add>myStepsPanel.add(stepRow);<add>}<add>}<add>else {<add>myStepsPanel.setVisible(false);<del>impl/ConfigurationSettingsEditorWrapper.java<del>myStepsPanel.setLayout(new GridLayout(stepsRows.size(), 1));<del>for (StepBeforeLaunchRow stepRow : stepsRows) {<del>myStepsPanel.add(stepRow);
tr	True	Renamed method to UserModel canCreate String repository<add>gitblit/GitFilter.java<add>if (user.canCreate(repository)) {<del>gitblit/GitFilter.java<del>if (user.canCreateOnPush(repository)) {
tr	True	Can t find com sun xml internal messaging saaj soap LocalStrings bundle<add>ide/BootstrapClassLoaderUtil.java<add>if (Boolean.valueOf(System.getProperty(PROPERTY_ALLOW_BOOTSTRAP_RESOURCES, "true"))) {<del>ide/BootstrapClassLoaderUtil.java<del>if (Boolean.valueOf(System.getProperty(PROPERTY_ALLOW_BOOTSTRAP_RESOURCES, "false"))) {
tr	False	fixed property name<add>linkview/LinkViewOverlayService.java<add>if (componentName.getClassName().equals("com.chrislacy.linkview.MainActivity")) {<add>//Log.d("LinkView", "Ignore " + componentName.getClassName());<add>continue;<add>}<add><del>linkview/LinkViewOverlayService.java
tr	True	Suppress flaky test HeapTest testOomeLarge<add>unit_tests/HeapTest.java<add>// TODO: flaky test<add>//@MediumTest<del>unit_tests/HeapTest.java<del>@MediumTest
tr	False	handle multiple linker warnings in agent detection<add>sip/ContactSipImpl.java<add>if (from.startsWith("sip:"))<add>{<add>return from.substring(4);<add>}<add>else if (from.startsWith("sips:"))<add>{<add>return from.substring(5);<add>}<del>sip/ContactSipImpl.java<del>int i = from.substring(0, 5).indexOf(':');<del>if(from.startsWith("sip") && i > 0)<del>return from.substring(i + 1);
tr	False	Fix style issues<add>mongodb/DBCollection.java<add>public DBCursor find(final DBObject filter) {<add>return find(filter, null);<add>}<add><del>mongodb/DBCollection.java
tr	True	Use non deprecated versions of methods<add>logging/GrailsConsole.java<add>return DefaultGroovyMethods.join((Iterable)this, CATEGORY_SEPARATOR) + CATEGORY_SEPARATOR;<del>logging/GrailsConsole.java<del>return DefaultGroovyMethods.join(this, CATEGORY_SEPARATOR) + CATEGORY_SEPARATOR;
tr	True	Add description for barbarism category<add>rules/CategoryIds.java<add>/** A words or expressions that are badly formed according to traditional philological rules,<add>* for example a word formed from elements of different languages */<del>rules/CategoryIds.java
tr	True	Moved a TODO from a public interface to the implementation<add>result/VersionSelectionReasons.java<add><add>//TODO At some point we want to provide information if version was requested in the graph.<add>//Perhaps a method like isRequested(). Not requested means that some particular version was forced but no dependency have requested this version.<del>result/VersionSelectionReasons.java
tr	True	switching to context classloader<add>core/PApplet.java<add>//    Class c = Class.forName(name);<add>Class c = Thread.currentThread().getContextClassLoader().loadClass(name);<del>core/PApplet.java<del>Class c = Class.forName(name);
tr	True	Keep snapshot order matching the shared elements<add>app/ActivityTransitionCoordinator.java<add>View snapshot = null;<add>// Even null snapshots are added so they remain in the same order as shared elements.<add>snapshots.add(snapshot);<del>app/ActivityTransitionCoordinator.java<del>View snapshot = null;<del>snapshots.add(snapshot);
tr	True	Remove debugging code<add>sc/StaticTypesStatementWriter.java<del>sc/StaticTypesStatementWriter.java<del>private int foo(String[] arr) {<del>int counter=0;<del>for (String s : arr) {<del>//if(counter++ > 100) break;<del>System.out.println(s);<del>continue;<del>}<del>return counter;<del>}<del>
tr	False	ModuleUtil findModuleForPsiElement should not return null in case of completion in injected PsiFile<add>service/RemoteImService.java<add>int otrPolicy = OtrPolicy.OPPORTUNISTIC;<del>service/RemoteImService.java<del>private boolean autoStartOtr = false;<del>int otrPolicy = OtrPolicy.OPPORTUNISTIC;<del>autoStartOtr = false;<del>
tr	True	Fix chunking issue when write is called with empty buffer<add>conduits/ChunkedStreamSinkConduit.java<add>if(!src.hasRemaining()) {<add>terminateWrites();<add>return 0;<add>}<del>conduits/ChunkedStreamSinkConduit.java
tr	True	Fixed some permissions<add>commands/ChunkCommands.java<add>@CommandPermissions({"worldedit.delchunks"})<del>commands/ChunkCommands.java<del>@CommandPermissions({"delchunks"})
tr	False	Fix the network handler for forge<add>transition/EpicenterTranslateClipReveal.java<del>transition/EpicenterTranslateClipReveal.java<del>/*<del>// Translate the clip bounds to be centered within the target bounds.<del>final int offsetX = bestRect.centerX() - epicenter.centerX();<del>final int offsetY = bestRect.centerY() - epicenter.centerY();<del>epicenter.offset(offsetX, offsetY);<del>*/
tr	False	fixed bug with detecting changes with copied files<add>app/SearchDialog.java<add>mSearchAutoComplete.showDropDownAfterLayout();<del>app/SearchDialog.java
tr	False	removed invalid check from test<add>app/ActivityTransitionCoordinator.java<add>View snapshot = null;<add>// Even null snapshots are added so they remain in the same order as shared elements.<add>snapshots.add(snapshot);<del>app/ActivityTransitionCoordinator.java<del>View snapshot = null;<del>snapshots.add(snapshot);
tr	True	throw exception if no java rules were found happens if you start from a wrong directory<add>dev/RuleOverview.java<add>int overallJavaCount = 0;<add>overallJavaCount++;<add><add>if (overallJavaCount == 0) {<add>throw new RuntimeException("No Java rules found");<add>}<del>dev/RuleOverview.java
tr	False	Drop the unused private getLoader update the help text a bit for clarity<add>config/OGlobalConfiguration.java<add>"Maximum timeout in milliseconds to wait for CRUD remote tasks", Integer.class, 3000l),<add>"Maximum timeout in milliseconds to wait for Command remote tasks", Integer.class, 5000l),<add>"Maximum timeout in milliseconds to wait for database deployment", Long.class, 1200000l),<del>config/OGlobalConfiguration.java<del>"Maximum timeout in milliseconds to wait for CRUD remote tasks", Integer.class, 300000000l),<del>"Maximum timeout in milliseconds to wait for Command remote tasks", Integer.class, 500000000l),<del>"Maximum timeout in milliseconds to wait for database deployment", Long.class, 120000000l),
tr	True	Changed Log level for BaseIndex<add>search/BaseIndex.java<add>LOG.debug("UPDATE _id:{} in index {}", key, this.getIndexName());<del>search/BaseIndex.java<del>LOG.info("UPDATE _id:{} in index {}", key, this.getIndexName());
tr	False	Adding console log capability to PhoneGap<add>answers/ReturnsElementsOf.java<add>* <add>public class ReturnsElementsOf implements Answer<add>private final LinkedList<add>public ReturnsElementsOf(Collection<add>this.elements = new LinkedList<del>answers/ReturnsElementsOf.java<del>* <del>@SuppressWarnings("unchecked")<del>public class ReturnsElementsOf implements Answer {<del>final LinkedList elements;<del>public ReturnsElementsOf(Collection elements) {<del>this.elements = new LinkedList(elements);
tr	False	Fixed typo for NETHER_WARTS<add>parser/SimpleCharStream.java<del>parser/SimpleCharStream.java<del>@Deprecated<del>/**<del>* @deprecated<del>* @see #getEndColumn<del>*/<del><del>public int getColumn() {<del>return bufcolumn[bufpos];<del>}<del><del>@Deprecated<del>/**<del>* @deprecated<del>* @see #getEndLine<del>*/<del>
tr	False	Fixed potential renderer error<add>entity/Creature.java<add>* Represents a Creature. Creatures are non-intelligent monsters or animals which<add>* have very simple abilities.<add>public interface Creature extends LivingEntity {<add>* @param target New LivingEntity to target, or null to clear the target<add><add>/**<add>* Gets the current target of this Creature<add>*<add>* @return Current target of this creature, or null if none exists<add>*/<add>public LivingEntity getTarget();<del>entity/Creature.java<del>* Represents a Creature. Any LivingEntity that is not human is a Creature.<del>* @author Cogito<del>*<del>public interface Creature extends LivingEntity{<del>* @param target New LivingEntity to target
tr	False	Removed unused SvnCommand constructor<add>rules/Rule.java<add>Set<add>if (relevantIDs != null && relevantIDs.contains(getId())) {<add>return true;<add>} else {<add>return false;<del>rules/Rule.java<del>Language[] languages = Language.LANGUAGES;<del>for (int i = 0; i <del>Set<del>if (relevantIDs != null && relevantIDs.contains(getId()))<del>return true;<del>return false;
tr	True	Allowing negative keys in IntObjectHashMap<add>collection/IntObjectHashMap.java<add>int hash = key % keys.length;<add>if (hash <add>hash += keys.length;<add>}<add>return hash;<del>collection/IntObjectHashMap.java<del>return key % keys.length;
tr	False	Remove some unused code<add>segmented/SegmentedRaftLog.java<del>segmented/SegmentedRaftLog.java<del>log.info( "reading entry term at %d. prevIndex:%d, prevTerm:%d", logIndex, state.prevIndex, state.prevTerm );
tr	True	Make objectmapper transient<add>conf/NeuralNetConfiguration.java<add>private transient ObjectMapper mapper = mapper();<del>conf/NeuralNetConfiguration.java<del>private ObjectMapper mapper = mapper();
tr	True	Removed unnecessary args these are added higher up<add>client/DefaultDaemonStarter.java<del>client/DefaultDaemonStarter.java<del>//Useful for debugging purposes - simply uncomment and connect to debug<del>if (System.getProperty("org.gradle.daemon.debug", "false").equalsIgnoreCase("true")) {<del>daemonArgs.add("-Xdebug");<del>daemonArgs.add("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006");<del>}
tr	True	preserve order of tests in patter configuration<add>configuration/TestNGConfiguration.java<add>Set<del>configuration/TestNGConfiguration.java<del>Set
tr	False	removed unused javadoc param tag<add>metrics/Metrics.java<del>metrics/Metrics.java<del>import java.util.Map;<del>* Returns an unmodifiable map of all metrics and their names.<del>*<del>* @return an unmodifiable map of all metrics and their names<del>*/<del>public static Map<del>return DEFAULT_REGISTRY.allMetrics();<del>}<del><del>/**
tr	True	add type to List<add>de/WordCoherencyRuleTest.java<add>import de.danielnaber.languagetool.rules.RuleMatch;<add>List<del>de/WordCoherencyRuleTest.java<del>List matches = null;
tr	False	Removing unusable settings from self hosted<add>storm/Config.java<add>@isPositiveNumber(includeZero = true)<del>storm/Config.java<del>@isPositiveNumber
tr	True	Check hive vectorized execution reduce enabled Spark Branch Jimmy via Xuefu<add>physical/Vectorizer.java<add>} else if (baseWork instanceof ReduceWork<add>&& HiveConf.getBoolVar(pctx.getConf(),<add>HiveConf.ConfVars.HIVE_VECTORIZATION_REDUCE_ENABLED)) {<del>physical/Vectorizer.java<del>} else if (baseWork instanceof ReduceWork) {
tr	True	Don t create immutable wrapper for empty lists<add>asynchttpclient/AsyncHttpClientConfig.java<add>return requestFilters.isEmpty() ? Collections.emptyList() : Collections.unmodifiableList(requestFilters);<add>return responseFilters.isEmpty() ? Collections.emptyList() :  Collections.unmodifiableList(responseFilters);<del>asynchttpclient/AsyncHttpClientConfig.java<del>* @return <del>*<del>* @since 2.0.0<del>*/<del>public boolean hasRequestFilters() {<del>return !requestFilters.isEmpty();<del>}<del><del>/**<del>return Collections.unmodifiableList(requestFilters);<del>}<del><del>/**<del>* @return <del>* @since 2.0.0<del>*/<del>public boolean hasResponseFilters() {<del>return !responseFilters.isEmpty();<del>return Collections.unmodifiableList(responseFilters);
tr	True	Fix ColumnFamilyStoreTest testSliceByNamesCommandOldMetadata<add>db/ColumnFamilyStoreTest.java<add>cfs.truncateBlocking();<del>db/ColumnFamilyStoreTest.java<del>cfs.clearUnsafe();
tr	True	Rename supervisor policy ALWAYS_ESCALATE ESCALATE<add>behaviors/LocalSupervisor.java<add>ESCALATE {<del>behaviors/LocalSupervisor.java<del>ALWAYS_ESCALATE {
tr	False	Also include e as the cause<add>assist/RCompletionManager.java<add>if (isValidForRIdentifier(docDisplay_.getCharacterAtCursor()))<add>// Bail if there is an alpha-numeric character<add>// following the cursor<add>if (isValidForRIdentifier(docDisplay_.getCharacterAtCursor()))<add>return false;<add><del>assist/RCompletionManager.java<del>char charAtCursor = docDisplay_.getCharacterAtCursor();<del>if (Character.isLetter(charAtCursor) ||<del>Character.isDigit(charAtCursor))
tr	True	Recursive navigator tree read fixed<add>navigator/DBNDatabaseNode.java<add>if (monitor.isCanceled()) {<add>return;<add>}<del>navigator/DBNDatabaseNode.java
tr	True	update comment to reflect message layout<add>command/PublicationMessageFlyweight.java<add>* |                        Channel Length                         |<add>* +---------------------------------------------------------------+<add>* |                           Channel                            ...<add>*...                                                              |<del>command/PublicationMessageFlyweight.java<del>* |      Channel Length         |           Channel             ...<del>* |                                                             ...
tr	True	Perform a flush when renegotiating<add>server/ConnectionSSLSessionInfo.java<add>serverConnection.getOriginalSinkConduit().flush();<del>server/ConnectionSSLSessionInfo.java
tr	False	Fixed bad case of lowercasing the URL which is wrong as URLs are case sensitive<add>db/RadosClient.java<add>* YCSB binding for <add>* See {@code rados/README.md} for details.<del>db/RadosClient.java<del>// import org.json.JSONString;<del>* YCSB binding for <del>* See {@code redis/README.md} for details.<del>// result.put(name, new StringByteIterator(json.getJSONString(name).getString()));<del>// JSONObject json = new JSONObject(values);<del>
tr	True	Fixing a bug with the TextToSpeech speech queue processing<add>tts/TtsService.java<add>processSpeechQueue();<add>processSpeechQueue();<del>tts/TtsService.java<del>processSpeechQueue();<del>processSpeechQueue();
tr	False	Added a HttpInput integration test<add>assist/RCompletionManager.java<add>if (isValidForRIdentifier(docDisplay_.getCharacterAtCursor()))<add>// Bail if there is an alpha-numeric character<add>// following the cursor<add>if (isValidForRIdentifier(docDisplay_.getCharacterAtCursor()))<add>return false;<add><del>assist/RCompletionManager.java<del>char charAtCursor = docDisplay_.getCharacterAtCursor();<del>if (Character.isLetter(charAtCursor) ||<del>Character.isDigit(charAtCursor))
tr	False	fix merged comment<add>parsing/AbstractJetParsing.java<add>import org.jetbrains.annotations.TestOnly;<add>@SuppressWarnings("UnusedDeclaration")<add>@TestOnly<add>public String currentContext() {<add>String marker = "~!!!~";<add>int range = 50;<add><add>CharSequence text = myBuilder.getOriginalText();<add><add>int start = Math.max(0, myBuilder.getCurrentOffset() - range);<add>int end = Math.min(text.length() - 1, myBuilder.getCurrentOffset() + 50 + marker.length());<add><add>return new StringBuilder(text)<add>.insert(myBuilder.getCurrentOffset(), marker)<add>.substring(start, end);<add>}<del>parsing/AbstractJetParsing.java
tr	False	Toggling keyboard and swapping adapter when SearchView is expanded collapsed<add>xml/XmlReader.java<add>} catch (Exception e) {<add>throw new IOException("xml parser mishandled "+e.getClass().getName(), e);<del>xml/XmlReader.java<del>} catch (ArrayIndexOutOfBoundsException e) {<del>throw new IOException(<del>"xml parser mishandled ArrayIndexOufOfBounds", e);<del>} catch (StringIndexOutOfBoundsException e) {<del>throw new IOException(<del>"xml parser mishandled StringIndexOufOfBounds", e);<del>} catch (NullPointerException e) {<del>throw new IOException("xml parser mishandled NullPointerException",<del>e);<del>} catch (IndexOutOfBoundsException e) {<del>throw new IOException("xml parser mishandled IndexOutOfBound", e);
tr	False	Fix checkstyle issue<add>store/BatchingPageCache.java<add>import org.neo4j.kernel.impl.store.StoreFactory;<add>// This is a hack necessary to make sure that we write to disk immediately the changes to the<add>// counts store since we circumvent the page cache to read the counts<add>Writer writer = file.getName().contains( StoreFactory.COUNTS_STORE )<add>? SYNCHRONOUS.create( channel, monitor )<add>: writerFactory.create( channel, monitor );<add>BatchingPagedFile pageFile = new BatchingPagedFile( channel, writer, pageSize );<del>store/BatchingPageCache.java<del>BatchingPagedFile pageFile = new BatchingPagedFile( channel,<del>writerFactory.create( channel, monitor ), pageSize );
tr	True	Reduce log noise in KeyUtil initKeyStore<add>util/KeyUtil.java<add>if(LOG.isDebugEnabled()) {<add>LOG.debug("Private key file: {}", tlsKeyFile);<add>LOG.debug("Certificate file: {}", tlsCertFile);<add>LOG.debug("Aliases: {}", join(ks.aliases()));<add>}<del>util/KeyUtil.java<del>LOG.info("KeyStore: {}, aliases: {}", ks, join(ks.aliases()));
tr	False	Fix log and restore implementation<add>git/PatchsetReceivePack.java<add>LOGGER.info(MessageFormat.format("Preparing {0} patchset command for \"{1}\" received from {2}",<add>repository.name, cmd.getRefName(), user.username));<del>git/PatchsetReceivePack.java
tr	True	Fixed use after free error looking up IP addresses<add>io/NetworkOs.java<add>freeifaddrs(interfaces);<add>freeifaddrs(interfaces);<del>io/NetworkOs.java<del>freeifaddrs(interfaces);
tr	True	Remove unnecessary synchronization<add>checks/UniquePropertiesCheck.java<add>final Object oldValue = super.put(key, value);<add>if (oldValue != null && key instanceof String) {<add>final String keyString = (String) key;<add>duplicatedStrings.add(keyString);<add>return oldValue;<del>checks/UniquePropertiesCheck.java<del>/**<del>* Lock for this class to synchronize on<del>*/<del>private final Object lock = new Object();<del>synchronized (lock) {<del>final Object oldValue = super.put(key, value);<del>if (oldValue != null && key instanceof String) {<del>final String keyString = (String) key;<del>duplicatedStrings.add(keyString);<del>}<del>return oldValue;
tr	True	Add a comment on the spell checker framework<add>server/TextServicesManagerService.java<add>// If no spell checker is enabled, just return. The user should explicitly<add>// enable the spell checker.<del>server/TextServicesManagerService.java
tr	True	Staring still needs the URL so dont assign null<add>javacv/IPCameraFrameGrabber.java<add>throw new Exception(e.getMessage(), e);<add>// Don't set the url to null, it may be needed to restart this object<del>javacv/IPCameraFrameGrabber.java<del>e.printStackTrace();<del>url = null;
tr	False	Implemented another find method in DBCollection<add>spdy/Controller.java<add>// ========================================================================<add>// Copyright 2012-2012 Mort Bay Consulting Pty. Ltd.<add>// ------------------------------------------------------------------------<add>// All rights reserved. This program and the accompanying materials<add>// are made available under the terms of the Eclipse Public License v1.0<add>// and Apache License v2.0 which accompanies this distribution.<add>// The Eclipse Public License is available at<add>// http://www.eclipse.org/legal/epl-v10.html<add>// The Apache License v2.0 is available at<add>// http://www.opensource.org/licenses/apache2.0.php<add>// You may elect to redistribute this code under either of these licenses.<add>// ========================================================================<del>spdy/Controller.java<del>/*<del>* Copyright (c) 2012 the original author or authors.<del>*<del>* Licensed under the Apache License, Version 2.0 (the "License");<del>* you may not use this file except in compliance with the License.<del>* You may obtain a copy of the License at<del>*<del>*     http://www.apache.org/licenses/LICENSE-2.0<del>*<del>* Unless required by applicable law or agreed to in writing, software<del>* distributed under the License is distributed on an "AS IS" BASIS,<del>* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<del>* See the License for the specific language governing permissions and<del>* limitations under the License.<del>*/
tr	True	Add a variation of the underscore helper that takes a locale<add>support/IgnitedStrings.java<add>import java.util.Locale;<add>* Turns a camel case string into an underscored one, e.g. "HelloWorld" becomes "hello_world".<add>* This variant uses a specific locale, which can be useful to e.g. force conversion from I to i<add>* on Turkish devices, where the lower case i uses a special character.<add>*<add>*<add>* @param camelCaseString<add>*            the string to underscore<add>* @param locale<add>*            the locale that should be used for the string conversion<add>* @return the underscored string<add>*/<add>public static String underscore(String camelCaseString, Locale locale) {<add>String[] words = splitByCharacterTypeCamelCase(camelCaseString);<add>return TextUtils.join("_", words).toLowerCase(locale);<add>}<add><add>/**<del>support/IgnitedStrings.java
tr	False	Fix broken merge<add>audio/AudioService.java<add>streamType = mStreamVolumeAlias[streamType];<del>audio/AudioService.java<del>if (!isPlatformVoice() && (streamType == AudioSystem.STREAM_RING)) {<del>streamType = AudioSystem.STREAM_NOTIFICATION;<del>} else {<del>streamType = mStreamVolumeAlias[streamType];<del>}
tr	False	add test case for check failure in case of save of invalid rid<add>storemigration/PreStartupStoreUpgraderTest.java<add>assertTrue(lines[0].contains("To enable automatic upgrade, please set configuration parameter " +<add>"\"allow_store_upgrade=true\"")  );<del>storemigration/PreStartupStoreUpgraderTest.java<del>assertEquals("To enable automatic upgrade, please set configuration parameter " +<del>"\"allow_store_upgrade=true\"", lines[0] );
tr	False	corrected field name used in reflection<add>persistent/PersistentFSImpl.java<add>ApplicationManager.getApplication().assertWriteAccessAllowed();<add><del>persistent/PersistentFSImpl.java
tr	True	Also fixed this case of internal QP structure<add>trees/QPTreeTransformerTest.java<add>String output = "(ROOT (S (NP (DT This)) (VP (VBZ costs) (NP (QP (QP ($ $) (QP (CD 1) (CD million))) (CC or) (NP (JJR more))))) (. .)))";<del>trees/QPTreeTransformerTest.java<del>// TODO: the end result of NP on the left side should be QP with internal structure<del>String output = "(ROOT (S (NP (DT This)) (VP (VBZ costs) (NP (QP (NP ($ $) (CD 1) (CD million)) (CC or) (NP (JJR more))))) (. .)))";
tr	False	add back printDecodeTime and noShutDown options to OnlineTuner<add>tiled/TmxMapLoader.java<add>public boolean yUp = true;<del>tiled/TmxMapLoader.java<del>boolean yUp = true;
tr	True	fixed an issue where the material map entry was passed to the material contentEqual instead of the material<add>scene/BatchNode.java<add>if (g.getMaterial().contentEquals(mat.getKey())) {<del>scene/BatchNode.java<del>if (g.getMaterial().contentEquals(mat)) {
tr	True	o Fixed a copy paste typo in an exception<add>xaframework/XaContainer.java<add>txIdFactory = txIdFactory != null ? txIdFactory : TxIdGenerator.DEFAULT;<del>xaframework/XaContainer.java
tr	False	Fix NPE on specific tile entities when the block break event is canceled<add>main/SitePickerActivity.java<add>toggleKeyboard();<add>SitePickerSearchAdapter sitePickerSearchAdapter = new SitePickerSearchAdapter();<add>mRecycleView.swapAdapter(sitePickerSearchAdapter, true);<add>toggleKeyboard();<add><add>mRecycleView.swapAdapter(getAdapter(), true);<add>getAdapter().loadSites();<add><add>private void toggleKeyboard() {<add>InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);<add>imm.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);<add>}<del>main/SitePickerActivity.java<del>InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);<del>imm.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);
tr	False	Simplify osmo menu<add>BasicSample/EmailValidator.java<del>BasicSample/EmailValidator.java<del>* @param emailPattern The {@link Pattern} used to validate the given email.
tr	False	Fixing test issue<add>commands/ContextSuspendCommand.java<add>camelController.suspendContext(contextName);<del>commands/ContextSuspendCommand.java<del>camelController.resumeContext(contextName);
tr	False	fixed copyright headers<add>net/ConnectivityManager.java<add>* still be released normally by calling {@link unregisterNetworkCallback}.<del>net/ConnectivityManager.java<del>* still be released normally by calling {@link releaseNetworkRequest}.
tr	True	open an API for scala<add>moveClassesOrPackages/MoveClassesOrPackagesDialog.java<add>protected boolean isMoveToPackage() {<add>protected String getTargetPackage() {<del>moveClassesOrPackages/MoveClassesOrPackagesDialog.java<del>private boolean isMoveToPackage() {<del>private String getTargetPackage() {
tr	True	Fix quality flaws<add>index/RuleNormalizer.java<del>index/RuleNormalizer.java<del>import javax.annotation.CheckForNull;<del>import javax.annotation.Nullable;<del><del>@CheckForNull<del>private CharacteristicDto characteristic(@Nullable Integer subCharacteristicId, DbSession session) {<del>if (subCharacteristicId != null) {<del>CharacteristicDto subCharacteristic = db.debtCharacteristicDao().selectById(subCharacteristicId, session);<del>if (subCharacteristic != null) {<del>Integer characteristicId = subCharacteristic.getParentId();<del>if (characteristicId != null) {<del>return db.debtCharacteristicDao().selectById(characteristicId);<del>}<del>}<del>}<del>return null;<del>}
tr	True	fixed bug with detecting changes with copied files<add>changes/ChangeCollector.java<add>handler.addParameters("--name-status", "--diff-filter=ADCMRUX", "-M", "HEAD");<del>changes/ChangeCollector.java<del>handler.addParameters("--name-status", "--diff-filter=ADMRUX", "-M", "HEAD");
tr	False	Staring still needs the URL so dont assign null<add>coverage/SourceLineCounterUtil.java<add>return !counter.isInterface();<del>coverage/SourceLineCounterUtil.java<del>return true;
tr	False	undid stub generation workaround because it s not correct<add>nio/Address.java<add>int result = port;<add>result = 31 * result + host.hashCode();<add>return result;<del>nio/Address.java<del>return hash(host.getBytes()) * 29 + port;<del>}<del><del>private int hash(byte[] bytes) {<del>int hash = 0;<del>for (byte b : bytes) {<del>hash = (hash * 29) + b;<del>}<del>return hash;
tr	False	unneccessary AfterClass annotation removed in spring test<add>telecom/TelecomManager.java<add>private final ITelecomService mTelecomServiceOverride;<add><add>this(context, null);<add>}<add><add>/**<add>* @hide<add>*/<add>public TelecomManager(Context context, ITelecomService telecomServiceImpl) {<add>mTelecomServiceOverride = telecomServiceImpl;<add>if (mTelecomServiceOverride != null) {<add>return mTelecomServiceOverride;<add>}<del>telecom/TelecomManager.java
tr	False	Remove noisy logging<add>model/UIPrefsAccessor.java<add>// we disabled the internal viewer for qtwebkit but have<add>// now restored it since we are using safari<add>/*<add>*/<del>model/UIPrefsAccessor.java<del>// the internal viewer no longer works on osx
tr	True	Fixed disable of event logger<add>storm/Config.java<add>@isPositiveNumber(includeZero = true)<del>storm/Config.java<del>@isPositiveNumber
tr	False	Fix block renderer to not be hugely inefficient<add>store/BatchingPageCache.java<add>import org.neo4j.kernel.impl.store.StoreFactory;<add>// This is a hack necessary to make sure that we write to disk immediately the changes to the<add>// counts store since we circumvent the page cache to read the counts<add>Writer writer = file.getName().contains( StoreFactory.COUNTS_STORE )<add>? SYNCHRONOUS.create( channel, monitor )<add>: writerFactory.create( channel, monitor );<add>BatchingPagedFile pageFile = new BatchingPagedFile( channel, writer, pageSize );<del>store/BatchingPageCache.java<del>BatchingPagedFile pageFile = new BatchingPagedFile( channel,<del>writerFactory.create( channel, monitor ), pageSize );
tr	True	Fix javadoc for the NetworkRequest version of requestNetwork<add>net/ConnectivityManager.java<add>* still be released normally by calling {@link unregisterNetworkCallback}.<del>net/ConnectivityManager.java<del>* still be released normally by calling {@link releaseNetworkRequest}.
tr	True	collect statistics from created field types as well as variables<add>introduceField/IntroduceFieldDialog.java<add>myTypeSelectorManager.typeSelected(getFieldType());<del>introduceField/IntroduceFieldDialog.java
tr	False	Fixed documentation of parameter<add>unit_tests/HeapTest.java<add>// TODO: flaky test<add>//@MediumTest<del>unit_tests/HeapTest.java<del>@MediumTest
tr	True	Remove unused field<add>master/LocalTachyonCluster.java<del>master/LocalTachyonCluster.java<del>private TachyonConf mClientConf;
tr	False	Fix ColumnFamilyStoreTest testSliceByNamesCommandOldMetadata<add>patterns/JMSFilterTest.java<add>public class JMSFilterTest extends FilterTest {<del>patterns/JMSFilterTest.java<del>public class JMSFilterTest extends CamelTestSupport {<del><del>@EndpointInject(uri = "mock:result")<del>protected MockEndpoint resultEndpoint;<del><del>@Produce(uri = "direct:start")<del>protected ProducerTemplate template;<del><del>public void testSendMatchingMessage() throws Exception {<del>String expectedBody = "<del><del>resultEndpoint.expectedBodiesReceived(expectedBody);<del><del>template.sendBodyAndHeader(expectedBody, "foo", "bar");<del><del>resultEndpoint.assertIsSatisfied();<del>}<del><del>public void testSendNotMatchingMessage() throws Exception {<del>resultEndpoint.expectedMessageCount(0);<del><del>template.sendBodyAndHeader("<del><del>resultEndpoint.assertIsSatisfied();<del>}
tr	True	disable event expansion<add>repl/ReplFromTerminal.java<add>consoleReader.setExpandEvents(false);<del>repl/ReplFromTerminal.java
tr	False	Statically check HBase short CF name integrity<add>engine/RequestHint.java<add>if (myMethodFilter != null && !mySteppedOut) {<del>engine/RequestHint.java<del>if (myMethodFilter != null) {
tr	True	get string with parser context during debug<add>parsing/AbstractJetParsing.java<add>import org.jetbrains.annotations.TestOnly;<add>@SuppressWarnings("UnusedDeclaration")<add>@TestOnly<add>public String currentContext() {<add>String marker = "~!!!~";<add>int range = 50;<add><add>CharSequence text = myBuilder.getOriginalText();<add><add>int start = Math.max(0, myBuilder.getCurrentOffset() - range);<add>int end = Math.min(text.length() - 1, myBuilder.getCurrentOffset() + 50 + marker.length());<add><add>return new StringBuilder(text)<add>.insert(myBuilder.getCurrentOffset(), marker)<add>.substring(start, end);<add>}<del>parsing/AbstractJetParsing.java
tr	True	ui updating fix<add>views/HistoryDialog.java<add>myUpdateQueue.setRestartTimerOnAdd(true);<del>views/HistoryDialog.java
tr	True	added code to hide status bar when REPLY action is chosen on notification and activity needs be shown<add>push/NotificationsProcessingService.java<add>hideStatusBar();<add>private void hideStatusBar() {<add>Intent closeIntent = new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);<add>sendBroadcast(closeIntent);<add>}<add><del>push/NotificationsProcessingService.java<del>
tr	True	Fix an issue with Jetpack Stats where the default<add>stats/StatsAbstractFragment.java<add>import org.wordpress.android.util.AccountHelper;<add>&& !currentBlog.hasValidJetpackCredentials() && !AccountHelper.getDefaultAccount().hasAccessToken()) {<del>stats/StatsAbstractFragment.java<del>&& !currentBlog.hasValidJetpackCredentials()) {
tr	False	Encoded special characters<add>plugins/JavaPlugin.java<add>jar.dependsOn(PROCESS_RESOURCES_TASK_NAME);<add>jar.dependsOn(COMPILE_TASK_NAME);<del>plugins/JavaPlugin.java<del>task.dependsOn(LIBS_TASK_NAME);<del>task.dependsOn(LIBS_TASK_NAME);
tr	True	Improve HostedRoom API<add>muc/HostedRoom.java<add>import org.jivesoftware.smack.util.Objects;<add>import org.jxmpp.jid.EntityBareJid;<add>private final EntityBareJid jid;<add>jid = Objects.requireNonNull(item.getEntityID().asEntityBareJidIfPossible(),<add>"The discovered item must be an entity bare JID");<add>public EntityBareJid getJid() {<del>muc/HostedRoom.java<del>import org.jxmpp.jid.Jid;<del>private final Jid jid;<del>jid = item.getEntityID();<del>public Jid getJid() {
tr	True	removed debug comment<add>jaxrs/ParameterProcessor.java<add>LOGGER.debug("found inner property " + innerProperty);<del>jaxrs/ParameterProcessor.java<del>LOGGER.debug("yay - found inner property " + innerProperty);
tr	False	findbugs Remove dead code in GitblitParamUrlCodingStrategy<add>server/ConnectionSSLSessionInfo.java<add>serverConnection.getOriginalSinkConduit().flush();<del>server/ConnectionSSLSessionInfo.java
tr	False	Add javadocs to TopRowUpstream<add>autoconfigure/PropertyPlaceholderAutoConfiguration.java<add>public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {<del>autoconfigure/PropertyPlaceholderAutoConfiguration.java<del>import org.springframework.context.ApplicationContext;<del>public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer(<del>ApplicationContext context) {
tr	True	Set include additional properties correctly<add>cli/Arguments.java<add>@Parameter(names = { "-D", "--enable-additional-properties" }, description = "Enable additional properties support on generated types, regardless of the input schema(s)")<add>private boolean isIncludeAdditionalProperties = false;<add>return isIncludeAdditionalProperties;<del>cli/Arguments.java<del>@Parameter(names = { "-D", "--disable-additional-properties" }, description = "Disable additional properties support on generated types, regardless of the input schema(s)")<del>private boolean disableAdditionalProperties = false;<del>return disableAdditionalProperties;
tr	True	Align error handling for being unable to send the preface with the other error handling in this method<add>http2/Http2UpgradeHandler.java<add>throw new ProtocolException(sm.getString("upgradeHandler.sendPrefaceFail"), ioe);<del>http2/Http2UpgradeHandler.java<del>throw new IllegalStateException(sm.getString("upgradeHandler.sendPrefaceFail"), ioe);
tr	True	Add more explanation for notifyChannelRetuned<add>tv/TvInputService.java<add>* Informs the application that the current channel is re-tuned for some reason and the<add>* session now displays the content from a new channel. This is used to handle special cases<add>* such as when the current channel becomes unavailable, it is necessary to send the user to<add>* a certain channel or the user changes channel in some other way (e.g. by using a<add>* dedicated remote).<add>* @param channelUri The URI of the new channel.<del>tv/TvInputService.java<del>import android.media.tv.TvInputService.HardwareSession;<del>* Notifies the channel of the session is retuned by TV input.<del>* @param channelUri The URI of a channel.
tr	False	remove redundant cast<add>internal/ChannelImplDetector.java<add>private static final boolean EPOLL = Epoll.isAvailable() && Boolean.getBoolean("ratpack.epoll");<del>internal/ChannelImplDetector.java<del>private static final boolean EPOLL = Epoll.isAvailable();
tr	False	Do not crash appwdiget host when a pending intent send fails<add>widget/CheckedTextView.java<add>checkMarkDrawable.setBounds(mScrollX + left, top, mScrollX + right, bottom);<del>widget/CheckedTextView.java<del>checkMarkDrawable.setBounds( left, top, right, bottom);
tr	False	Fix some more javadoc in Capture java<add>views/TaskStackView.java<add>if (!Constants.DebugFlags.App.EnableFastToggleRecents && launchTargetTask != null) {<add>setFocusedTask(mStack.indexOfTask(launchTargetTask), false /* scrollToTask */,<add>false /* animated */, false /* requestViewFocus */);<add>} else {<add>RecentsActivityLaunchState launchState = mConfig.getLaunchState();<add>int taskOffset = launchState.launchedFromHome ? -1 : -2;<add>setFocusedTask(mStack.getTaskCount() + taskOffset, false /* scrollToTask */,<add>false /* animated */, false /* requestViewFocus */);<add>}<del>views/TaskStackView.java<del>RecentsActivityLaunchState launchState = mConfig.getLaunchState();<del>int taskOffset = launchState.launchedFromHome ? -1 : -2;<del>setFocusedTask(mStack.getTaskCount() + taskOffset, false /* scrollToTask */,<del>false /* animated */, false /* requestViewFocus */);
tr	True	add sychronized flag to loadClass to ensure since internal structures are not thread safe<add>tools/RootLoader.java<add>protected synchronized Class loadClass(final String name, boolean resolve) throws ClassNotFoundException {<del>tools/RootLoader.java<del>protected Class loadClass(final String name, boolean resolve) throws ClassNotFoundException {
tr	False	Add cancel button to sort<add>core/RoutingContext.java<add><add>LOG.debug("Origin vertex {}", this.origin);<add>LOG.debug("Origin vertex inbound edges {}", this.origin.getIncoming());<add>LOG.debug("Origin vertex outbound edges {}", this.origin.getOutgoing());<add><add>LOG.debug("Destination vertex {}", this.target);<add>LOG.debug("Destination vertex inbound edges {}", this.target.getIncoming());<add>LOG.debug("Destination vertex outbound edges {}", this.target.getOutgoing());<del>core/RoutingContext.java
tr	False	Remove noisy logging<add>compute/AnalysisReportDaoTest.java<add>static final String DEFAULT_PROJECT_KEY = "123456789-987654321";<add>DbSession session;<add>AnalysisReportDao underTest = new AnalysisReportDao(system2);<del>compute/AnalysisReportDaoTest.java<del>import org.junit.rules.TemporaryFolder;<del>private static final String DEFAULT_PROJECT_KEY = "123456789-987654321";<del><del>@Rule<del>public TemporaryFolder temp = new TemporaryFolder();<del><del>AnalysisReportDao underTest = db.getDbClient().analysisReportDao();<del>private DbSession session;<del>db.truncateTables();
tr	False	enhance inline docu<add>get/OServerCommandGetStaticContent.java<add>return true;<del>get/OServerCommandGetStaticContent.java<del>return super.beforeExecute(iRequest, iResponse);
tr	False	annotation demo add protocol<add>projectView/NavigateFromSourceTest.java<add>"     -[Class1.java]\n" +<add>"      [Class11]\n" +<del>projectView/NavigateFromSourceTest.java<del>"     [Class11]\n" +
tr	True	Add detail to Javadoc<add>net/SocketEvent.java<add>* An error has occurred that does not had a dedicated event type. Currently<add>* this is only used by NIO2 to signal the failure of a completion handler.<del>net/SocketEvent.java<del>* An error has occurred that does not had a dedicated event type.
tr	True	rm duplicate MethodExpressionHandler from GlobalMethodSecurityConfiguration<add>configuration/GlobalMethodSecurityConfiguration.java<add>getExpressionHandler());<add>preInvocationAdvice.setExpressionHandler(getExpressionHandler());<del>configuration/GlobalMethodSecurityConfiguration.java<del>methodExpressionHandler());<del>* Creates the {@link MethodSecurityExpressionHandler} to be used.<del>*<del>* @return<del>*/<del>@Bean<del>public MethodSecurityExpressionHandler methodExpressionHandler() {<del>return new DefaultMethodSecurityExpressionHandler();<del>}<del><del>/**<del>preInvocationAdvice.setExpressionHandler(methodExpressionHandler());
tr	True	stop GL drawing thread before killing WebCore<add>webkit/WebView.java<add>if (mNativeClass != 0) nativeStopGL();<add>private native void     nativeStopGL();<del>webkit/WebView.java
tr	True	Fix threading problems with drawables<add>policy/BackdropFrameRenderer.java<add>mResizingBackgroundDrawable = resizingBackgroundDrawable != null<add>? resizingBackgroundDrawable.getConstantState().newDrawable()<add>: null;<add>mCaptionBackgroundDrawable = captionBackgroundDrawableDrawable != null<add>? captionBackgroundDrawableDrawable.getConstantState().newDrawable()<add>: null;<add>mUserCaptionBackgroundDrawable = userCaptionBackgroundDrawable != null<add>? userCaptionBackgroundDrawable.getConstantState().newDrawable()<add>: null;<del>policy/BackdropFrameRenderer.java<del>mResizingBackgroundDrawable = resizingBackgroundDrawable;<del>mCaptionBackgroundDrawable = captionBackgroundDrawableDrawable;<del>mUserCaptionBackgroundDrawable = userCaptionBackgroundDrawable;
tr	True	don t use reference comparison with Integers<add>cluster/Zone.java<add>if(!first.equals(second)) {<del>cluster/Zone.java<del>if(first != second) {
tr	False	delete unuse variable name<add>autoconfigure/PropertyPlaceholderAutoConfiguration.java<add>public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {<del>autoconfigure/PropertyPlaceholderAutoConfiguration.java<del>import org.springframework.context.ApplicationContext;<del>public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer(<del>ApplicationContext context) {
tr	True	Rename formatString to messageTemplate in FormattedAuditEvent<add>formatter/FormattedAuditEvent.java<add>* The message template string that will be used to present the audit event to humans.<add>String messageTemplate();<add>* All information that is needed by the {@link #messageTemplate()} should be in here.<del>formatter/FormattedAuditEvent.java<del>* The format string that will be used to present the audit event to humans.<del>String formatString();<del>* All information that is needed by the {@link #formatString()} should be in here.
tr	True	Improve logging of received patchset command<add>git/PatchsetReceivePack.java<add>LOGGER.info(MessageFormat.format("Preparing {0} patchset command for \"{1}\" received from {2}",<add>repository.name, cmd.getRefName(), user.username));<del>git/PatchsetReceivePack.java
tr	False	do not set connection with property that user have not specified<add>mongodb/MongodbQueryTest.java<add>public void Equals_and_Between() {<add>assertQuery(user.firstName.startsWith("Jaa").and(user.age.between(20, 30)), u2, u1);<add>assertQuery(user.firstName.startsWith("Jaa").and(user.age.goe(20).and(user.age.loe(30))), u2, u1);<add>}<add><add>@Test<del>mongodb/MongodbQueryTest.java
tr	True	Added setter method for account status checker<add>preauth/PreAuthenticatedAuthenticationProvider.java<add><add>/**<add>* Sets the strategy which will be used to validate the loaded <add>* for the user. Defaults to an {@link AccountStatusUserDetailsChecker}.<add>* @param userDetailsChecker<add>*/<add>public void setUserDetailsChecker(UserDetailsChecker userDetailsChecker) {<add>Assert.notNull(userDetailsChecker, "userDetailsChacker cannot be null");<add>this.userDetailsChecker = userDetailsChecker;<add>}<del>preauth/PreAuthenticatedAuthenticationProvider.java<del>
tr	True	Fix build warnings introduced by Move default rule key building logic to CachingBuildEngine<add>java/DefaultJavaLibraryTest.java<del>java/DefaultJavaLibraryTest.java<del>pathResolver = pathResolver;<del>pathResolver = pathResolver;<del>pathResolver = pathResolver;
tr	False	Ignore MainActivity for linkview<add>configuration/GlobalMethodSecurityConfiguration.java<add>getExpressionHandler());<add>preInvocationAdvice.setExpressionHandler(getExpressionHandler());<del>configuration/GlobalMethodSecurityConfiguration.java<del>methodExpressionHandler());<del>* Creates the {@link MethodSecurityExpressionHandler} to be used.<del>*<del>* @return<del>*/<del>@Bean<del>public MethodSecurityExpressionHandler methodExpressionHandler() {<del>return new DefaultMethodSecurityExpressionHandler();<del>}<del><del>/**<del>preInvocationAdvice.setExpressionHandler(methodExpressionHandler());
tr	False	Added tests for double and float types as primitiveType declarations<add>api/Inspect.java<add>Freezable f;<add>try {<add>f = val.get();<add>} catch(Exception ex) {<add>// data is not a Freezable, ignore until next version of types<add>f = null;<add>}<del>api/Inspect.java<del>Freezable f = val.get();
tr	False	Remove unnecessary synchronization<add>stampede/CliConfig.java<del>stampede/CliConfig.java<del>@Parameter(names={"--cursor-timeout"}, descriptionKey="config.mongo.cursorTimeout")<del>private String cursorTimeout;<del>public String getCursorTimeout() {<del>return cursorTimeout;<del>}<del>if (cursorTimeout != null) {<del>addParam("/replication/cursorTimeout", cursorTimeout);<del>}
tr	False	Fix infinite loop in LzoTextLoader<add>plan/Channel.java<add>case NONE: // excluded by sanity check. left here for verification check completion<add>case PARTITION_FORCED_REBALANCE:<del>plan/Channel.java<del>case NONE: // excluded by sanity check. lust here for verification check completion
tr	False	Removed unused method<add>updater/Patch.java<add>Runner.logger.info("Backing up files dir: " + toDir.getPath());<add>Runner.logger.info("applying patch file" + patchFile.getName() + " to dir " + toDir.getPath());<del>updater/Patch.java<del>Runner.logger.info("Backing up files dir: " + toDir.getCanonicalFile());<del>Runner.logger.info("applying patch file" + patchFile.getName() + " to dir " + toDir.getCanonicalFile());
tr	True	Move mContext into WebRenderer<add>webrender/WebRenderer.java<add>protected Context mContext;<add>mContext = context;<del>webrender/WebRenderer.java
tr	False	Refines toolbar s typing area<add>util/LogUtil.java<add><add>public static final int DEBUG = 2;<add><add>public static final int ERROR = 5;<add><add>public static final int LEVEL = ERROR;<add><add>if (LEVEL >= DEBUG) {<add>Log.d(tagName, message);<add>}<add>if (LEVEL >= ERROR) {<add>Log.e(tagName, e.getMessage(), e);<add>}<add>}<del>util/LogUtil.java<del><del>Log.d(tagName, message);<del>e.printStackTrace();<del>}
tr	True	Modify the log level<add>util/LogUtil.java<add><add>public static final int DEBUG = 2;<add><add>public static final int ERROR = 5;<add><add>public static final int LEVEL = ERROR;<add><add>if (LEVEL >= DEBUG) {<add>Log.d(tagName, message);<add>}<add>if (LEVEL >= ERROR) {<add>Log.e(tagName, e.getMessage(), e);<add>}<add>}<del>util/LogUtil.java<del><del>Log.d(tagName, message);<del>e.printStackTrace();<del>}
tr	True	Remove qualified imports<add>util/TraktTools.java<add>Response<add>Response<add>.execute();<del>util/TraktTools.java<del>Response<del>= traktSync.watchedShows(com.uwetrottmann.trakt5.enums.Extended.DEFAULT_MIN)<del>Response<del>com.uwetrottmann.trakt5.enums.Extended.DEFAULT_MIN).execute();
tr	False	overload AbstractStaticMethodInvocation setPattern Pattern with AbstractStaticMethodInvocation setPattern String<add>repl/ReplFromTerminal.java<add>consoleReader.setExpandEvents(false);<del>repl/ReplFromTerminal.java
tr	False	removed invalid check from test<add>widget/SparseArrayObjectAdapter.java<add>mItems.removeAt(index);<del>widget/SparseArrayObjectAdapter.java<del>mItems.delete(index);
tr	False	Fixing up the standalone activity<add>internal/DSCAlarmActiveBinding.java<add>api = new API(serialPort, baudRate, userCode);<del>internal/DSCAlarmActiveBinding.java<del>api = new API(serialPort, baudRate);
tr	True	Fix javadoc for SuppressWarningsDeprecated<add>bugpatterns/SuppressWarningsDeprecated.java<add>* Find uses of SuppressWarnings with "deprecated".<add>*<add>* @author sjnickerson@google.com (Simon Nickerson)<del>bugpatterns/SuppressWarningsDeprecated.java<del>* TODO: Insert description here. (generated by sjnickerson)
tr	True	Added Creature getTarget<add>entity/Creature.java<add>* Represents a Creature. Creatures are non-intelligent monsters or animals which<add>* have very simple abilities.<add>public interface Creature extends LivingEntity {<add>* @param target New LivingEntity to target, or null to clear the target<add><add>/**<add>* Gets the current target of this Creature<add>*<add>* @return Current target of this creature, or null if none exists<add>*/<add>public LivingEntity getTarget();<del>entity/Creature.java<del>* Represents a Creature. Any LivingEntity that is not human is a Creature.<del>* @author Cogito<del>*<del>public interface Creature extends LivingEntity{<del>* @param target New LivingEntity to target
tr	False	setSelected method uses text and icon instead of JMenuItem<add>service/AbstractClinicServiceTests.java<add>* AbstractClinicServiceTests#clinicService clinicService}<del>service/AbstractClinicServiceTests.java<del>* AbstractclinicServiceTests#clinicService clinicService}
tr	True	reuse CodegenTestCase in CompileTextTest<add>codegen/CompileTextTest.java<add>CompileEnvironmentConfiguration configuration = new CompileEnvironmentConfiguration(myEnvironment, dependencies, MessageCollector.PLAIN_TEXT_TO_SYSTEM_ERR);<del>codegen/CompileTextTest.java<del>JetCoreEnvironment environment = new JetCoreEnvironment(CompileEnvironmentUtil.createMockDisposable(), dependencies);<del>CompileEnvironmentConfiguration configuration = new CompileEnvironmentConfiguration(environment, dependencies, MessageCollector.PLAIN_TEXT_TO_SYSTEM_ERR);
tr	True	Change duplicated docstring in FlyByCamera unregisterInput<add>input/FlyByCamera.java<add>* Unregisters the FlyByCamera from the event Dispatcher.<del>input/FlyByCamera.java<del>* Registers the FlyByCamera to receive input events from the provided<del>* Dispatcher.
tr	False	Put back original author tags that were inadvertantly left out<add>integrationtests/TransportSQLActionTest.java<del>integrationtests/TransportSQLActionTest.java<del>public void testSelectFromSysNodes() throws Exception {<del>execute("select * from sys.nodes");<del>}<del><del>@Test
tr	True	Modified the function that detects the BB runtime<add>android/About.java<add>TextView appTitle = (TextView) findViewById(R.id.about_first_line);<del>android/About.java<del>TextView appTitle = (TextView) findViewById(R.id.about_first_line);
tr	True	removed unused javadoc param tag<add>BasicSample/EmailValidator.java<del>BasicSample/EmailValidator.java<del>* @param emailPattern The {@link Pattern} used to validate the given email.
tr	False	add awaitFix the entire MinimumMasterNodesTests class<add>energy/TileEngineIron.java<add>public void updateHeat() {<del>energy/TileEngineIron.java<del>public void updateHeatLevel() {
tr	True	Added a HttpInput integration test<add>test/HttpInputIntegrationTest.java<add>//<add>//  ========================================================================<add>//  Copyright (c) 1995-2015 Mort Bay Consulting Pty. Ltd.<add>//  ------------------------------------------------------------------------<add>//  All rights reserved. This program and the accompanying materials<add>//  are made available under the terms of the Eclipse Public License v1.0<add>//  and Apache License v2.0 which accompanies this distribution.<add>//<add>//      The Eclipse Public License is available at<add>//      http://www.eclipse.org/legal/epl-v10.html<add>//<add>//      The Apache License v2.0 is available at<add>//      http://www.opensource.org/licenses/apache2.0.php<add>//<add>//  You may elect to redistribute this code under either of these licenses.<add>//  ========================================================================<add>//<add><del>test/HttpInputIntegrationTest.java
tr	True	Adding console log capability to PhoneGap<add>phonegap/DroidGap.java<add>private String TAG = "PhoneGapLog";<add><add>// This is a test of console.log, because we don't have this in Android 2.01<add>public void addMessageToConsole(String message, int lineNumber, String sourceID)<add>{<add>Log.d(TAG, sourceID + ": Line " + Integer.toString(lineNumber) + " : " + message);<add>}<add><del>phonegap/DroidGap.java
tr	False	delete unuse variable name<add>gson/Gson.java<add>import java.util.Map;<add>import java.util.ServiceLoader;<add>* such factories using {@link ServiceLoader}.<add>*<add>* <add>* com.google.gson.GsonBuilder gsonBuilder = new com.google.gson.GsonBuilder();<add>* for (TypeAdapterFactory factory : ServiceLoader.load(TypeAdapterFactory.class)) {<add>*   gsonBuilder.registerTypeAdapterFactory(factory);<add>* }<add>*<add>* // Manual registration is also an option<add>* gsonBuilder.registerTypeAdapterFactory(new GsonAdaptersMyDocument());<add>*<add>* com.google.gson.Gson gson = gsonBuilder.create();<add>* <del>gson/Gson.java<del>import java.util.Map;<del>* such factories {@link com.google.gson.Gson}.
tr	True	Fixed typo in javadoc<add>sql/Sql.java<add>* free any cached resources.<del>sql/Sql.java<del>* free any caches resources.
tr	False	Attribute value index check<add>updater/Patch.java<add>Runner.logger.info("Backing up files dir: " + toDir.getPath());<add>Runner.logger.info("applying patch file" + patchFile.getName() + " to dir " + toDir.getPath());<del>updater/Patch.java<del>Runner.logger.info("Backing up files dir: " + toDir.getCanonicalFile());<del>Runner.logger.info("applying patch file" + patchFile.getName() + " to dir " + toDir.getCanonicalFile());
tr	False	Fixed potential renderer error<add>array/PanCakeSorting.java<add>package com.interview.sort;<del>array/PanCakeSorting.java<del>package com.interview.array;
tr	False	Fix BatchingPageCache to use always a SYNCHRONOUS writer for the CountsStore<add>floatingsearchview/FloatingSearchView.java<add>SEARCH_BAR_LEFT_SECTION_DESIRED_WIDTH = Util.dpToPx(270);<add>//todo go over<add>//todo go over<add>//todo go over<add>* todo go over<add>*<del>floatingsearchview/FloatingSearchView.java<del>SEARCH_BAR_LEFT_SECTION_DESIRED_WIDTH = Util.dpToPx(175);//Util.dpToPx(150+4+48+20);
tr	False	Re englishing an error message<add>builder/ResettableClassFileTransformerResetTest.java<add>import static org.hamcrest.CoreMatchers.*;<del>builder/ResettableClassFileTransformerResetTest.java<del>import static org.hamcrest.CoreMatchers.instanceOf;<del>import static org.hamcrest.CoreMatchers.sameInstance;<del>import static org.hamcrest.core.Is.is;
tr	True	Restore default favicon when page loads so as to prevent a favicon from the last webpage being used<add>linkbubble/BubbleView.java<add>onReceivedIcon(null);<del>linkbubble/BubbleView.java
tr	True	Simplify osmo menu<add>osmo/OsMoGroupsActivity.java<add>//		createMenuItem(menu, SHARE_SESSION, R.string.osmo_share_session,<add>//				R.drawable.ic_action_gshare_dark,<add>//				MenuItemCompat.SHOW_AS_ACTION_ALWAYS);<add>createMenuItem(menu, CREATE_GROUP, R.string.osmo_create_group,<add>0, 0,<add>//				R.drawable.ic_group_add,<del>osmo/OsMoGroupsActivity.java<del>createMenuItem(menu, SHARE_SESSION, R.string.osmo_share_session,<del>R.drawable.ic_action_gshare_dark,<del>MenuItemCompat.SHOW_AS_ACTION_ALWAYS);<del>createMenuItem(menu, CREATE_GROUP, R.string.osmo_create_group,<del>R.drawable.ic_group_add,
tr	True	fixed property name<add>plugin/SearchPlugin.java<add>serviceEnabled = JiveGlobals.getBooleanProperty("plugin.search.serviceEnabled", true);<del>plugin/SearchPlugin.java<del>serviceEnabled = JiveGlobals.getBooleanProperty("plugin.broadcast.serviceEnabled", true);
tr	False	putAll was using default Executor Service to put in parallel<add>menu/MenuBuilder.java<add>public static final int TYPE_ACTION_BAR = 1;<del>menu/MenuBuilder.java<del>public static final int TYPE_NATIVE = 1;
tr	True	don t sync chunk height when detached leads to invalid state<add>rmd/ChunkOutputUi.java<add>// don't process if we aren't attached<add>if (!attached_)<add>return;<add><del>rmd/ChunkOutputUi.java
tr	True	fix quality flaw Enabled test<add>qualityprofile/ActiveRuleBackendMediumTest.java<add>);<del>qualityprofile/ActiveRuleBackendMediumTest.java<del>import org.junit.Ignore;<del>@Ignore<del>);
tr	False	fixing license header<add>bootstrap/ServerBootstrap.java<add>public final class ServerBootstrap extends AbstractBootstrap<del>bootstrap/ServerBootstrap.java<del>public final class ServerBootstrap extends AbstractBootstrap
tr	False	enhance inline docu<add>solo/Solo.java<del>solo/Solo.java<del>e.printStackTrace();
tr	True	Do not throw IOException from encode<add>lzf/LZFEncoder.java<add>public static byte[] encode(byte[] data) {<del>lzf/LZFEncoder.java<del>import java.io.IOException;<del>public static byte[] encode(byte[] data) throws IOException {
tr	True	Fix setting hotspot bounds in a drawable container<add>drawable/DrawableContainer.java<add>mHotspotBounds = new Rect(left, top, right, bottom);<add>mHotspotBounds.set(left, top, right, bottom);<del>drawable/DrawableContainer.java<del>mHotspotBounds = new Rect(left, top, bottom, right);<del>mHotspotBounds.set(left, top, bottom, right);
tr	False	Return the actual interpolator of the ViewPropertyAnimator<add>energy/TileEngineIron.java<add>public void updateHeat() {<del>energy/TileEngineIron.java<del>public void updateHeatLevel() {
tr	True	convert exceptions accessing the urls to ioexceptions<add>http/JSONHttpRequest.java<add>future.error(new IOException("Could not access: " + getURI() + ": " + responseContent.substring(0, 1000), e));<del>http/JSONHttpRequest.java<del>future.error(e);
tr	False	do not call IdeFocusManager on minor focus requests<add>applytx/DumpRecordsCommand.java<add>// We rely on this method having the side-effect of loading the property blocks:<add>record.numberOfProperties();<del>applytx/DumpRecordsCommand.java
tr	False	Respect the custom daemon registry dir setting for int tests even if we are using a unique home dir<add>presenters/ItemsPresenter.java<del>presenters/ItemsPresenter.java<del>import javax.inject.Inject;<del><del>@Inject
tr	False	Changed log gin level warn debug<add>server/HttpOutputTest.java<add>// Assert.assertFalse(out.isReady());<del>server/HttpOutputTest.java<del>Assert.assertFalse(out.isReady());
tr	False	stop GL drawing thread before killing WebCore<add>edit/Entity.java<add>import net.osmand.data.LatLon;<add>import net.osmand.osm.edit.OSMSettings.OSMTagKey;<add><add>import java.io.Serializable;<add>public abstract class Entity implements Serializable {<del>edit/Entity.java<del>import net.osmand.data.LatLon;<del>import net.osmand.osm.edit.OSMSettings.OSMTagKey;<del><del>public abstract class Entity {
tr	False	Renamed PacketNotificator to PacketCopier<add>shell/StartLocalClient.java<add>import org.neo4j.kernel.EmbeddedReadOnlyGraphDatabase;<add>new EmbeddedReadOnlyGraphDatabase( dbPath ) :<del>shell/StartLocalClient.java<del>new EmbeddedGraphDatabase( dbPath ) :
tr	False	Re englishing an error message<add>http/JSONHttpRequest.java<add>future.error(new IOException("Could not access: " + getURI() + ": " + responseContent.substring(0, 1000), e));<del>http/JSONHttpRequest.java<del>future.error(e);
tr	True	Fix possible NPE<add>smssync/CursorToMessage.java<add>final int duration = msgMap.get(CallLog.Calls.DURATION) == null ? 0 :<add>Integer.parseInt(msgMap.get(CallLog.Calls.DURATION));<del>smssync/CursorToMessage.java<del>final int duration = Integer.parseInt(msgMap.get(CallLog.Calls.DURATION));
tr	False	Move mContext into WebRenderer<add>bukkit/Material.java<add>NETHER_WARTS(115),<del>bukkit/Material.java<del>NETHER_WATER(115),
tr	False	Updating the Need Help<add>web/WebMvcAutoConfiguration.java<add>// Defined as a nested config to ensure WebMvcConfigurerAdapter is not read when not<del>web/WebMvcAutoConfiguration.java<del>// Defined as a nested config to ensure WebMvcConfigurerAdapter it not read when not
tr	False	Tweak exception handling<add>support/LinkHandlerActivity.java<add>mMainContent.setDrawColor(!ThemeUtils.isDarkTheme(getCurrentThemeResourceId()));<del>support/LinkHandlerActivity.java<del>mMainContent.setDrawColor(true);
tr	True	Add javadocs to TopRowUpstream<add>collectors/TopRowUpstream.java<add>/**<add>* Class that acts as a {@link RowUpstream} to handle pause/resume calls in a thread-safe and async safe manner.<add>*<add>* <add>* upstream<add>*      wantMore = downstream.setNextRow()<add>*                  [...]<add>*                  upstream.pause() // must be called *before* an async operation that will resume<add>*                  asyncOperation -><add>*                      [...]<add>*                      upstream.resume()   // if the asyncOperation is fast this can happen *before* setNextRow has returned<add>*<add>*                  return true;<add>*<add>*      // If resume got called before shouldPause is called it acts as if there never was a pause.<add>*      // It will continue to emit rows in *this* thread.<add>*      // the thread that called upstream.resume() finishes *without* emitting new rows<add>*<add>*      if (topRowUpstream.shouldPause()) {<add>*<add>*          // if the shouldPause call succeeds it will have acquired a lock to block resume calls.<add>*          // this means THIS thread has to finish/die and another thread that calls resume will take over later on<add>*<add>*          [...]<add>*<add>*          topRowUpstream.pauseProcessed(); // this releases the lock - unblocking resume()<add>*      }<add>*<add>* <add>*/<del>collectors/TopRowUpstream.java
tr	False	Fixed issue with lazy list and graphs<add>javacv/IPCameraFrameGrabber.java<add>throw new Exception(e.getMessage(), e);<add>// Don't set the url to null, it may be needed to restart this object<del>javacv/IPCameraFrameGrabber.java<del>e.printStackTrace();<del>url = null;
tr	False	Removed unused method<add>provisioning/JdbcUserDetailsManager.java<add>* enableAuthorities} property is set to false, calls to createUser, updateUser and deleteUser will not store the<add>* authorities from the <add>* between authorities which were loaded for an individual or for a group of which the individual is a member,<add>* it's important that you take this into account when using this implementation for managing your users.<add>if (getEnableAuthorities()) {<add>deleteUserAuthorities(username);<add>}<del>provisioning/JdbcUserDetailsManager.java<del>* enableAuthorities} property is set to false, calls to createUser and updateUser will not store the<del>* authorities from the <del>* loaded for an individual or for a group of which the individual is a member, it's important that you take this<del>* into account when using this implementation for managing your users.<del>deleteUserAuthorities(username);
tr	False	restrict auto popup if there is an identifier following cursor<add>index/RuleNormalizer.java<del>index/RuleNormalizer.java<del>import javax.annotation.CheckForNull;<del>import javax.annotation.Nullable;<del><del>@CheckForNull<del>private CharacteristicDto characteristic(@Nullable Integer subCharacteristicId, DbSession session) {<del>if (subCharacteristicId != null) {<del>CharacteristicDto subCharacteristic = db.debtCharacteristicDao().selectById(subCharacteristicId, session);<del>if (subCharacteristic != null) {<del>Integer characteristicId = subCharacteristic.getParentId();<del>if (characteristicId != null) {<del>return db.debtCharacteristicDao().selectById(characteristicId);<del>}<del>}<del>}<del>return null;<del>}
tr	False	update comment to reflect message layout<add>api/RemoveVec.java<add>import water.DKV;<add>DKV.put(source._key, source,fs);<del>api/RemoveVec.java
tr	False	add cast to float<add>concurrent/SimpleTimeLimiter.java<add>checkArgument(timeoutDuration > 0, "bad timeout: %s", timeoutDuration);<del>concurrent/SimpleTimeLimiter.java<del>checkArgument(timeoutDuration > 0, "bad timeout: " + timeoutDuration);
tr	False	Move mContext into WebRenderer<add>platform/NewDirectoryProjectDialog.java<add>* Copyright 2000-2012 JetBrains s.r.o.<add>final DirectoryProjectGenerator[] generators = getGenerators();<add>protected DirectoryProjectGenerator[] getGenerators() {<add>return Extensions.getExtensions(DirectoryProjectGenerator.EP_NAME);<add>}<add><del>platform/NewDirectoryProjectDialog.java<del>* Copyright 2000-2009 JetBrains s.r.o.<del>final DirectoryProjectGenerator[] generators = Extensions.getExtensions(DirectoryProjectGenerator.EP_NAME);
tr	False	do not set connection with property that user have not specified<add>db/RadosClient.java<add>* YCSB binding for <add>* See {@code rados/README.md} for details.<del>db/RadosClient.java<del>// import org.json.JSONString;<del>* YCSB binding for <del>* See {@code redis/README.md} for details.<del>// result.put(name, new StringByteIterator(json.getJSONString(name).getString()));<del>// JSONObject json = new JSONObject(values);<del>
tr	False	Add javadocs to TopRowUpstream<add>http/HttpEndpoint.java<add>import org.apache.camel.HeaderFilterStrategyAware;<add>import org.apache.camel.util.ObjectHelper;<del>http/HttpEndpoint.java<del>import org.apache.camel.HeaderFilterStrategyAware;<del>import org.apache.camel.util.ObjectHelper;
tr	True	Throw exception if composite subfares list empty<add>fares/MultipleFareServiceFactory.java<add>if (subFactories.isEmpty())<add>throw new IllegalArgumentException(<add>"Empty fare composite. Please specify either a 'fares' array or a list of 'fareXxx' properties");<del>fares/MultipleFareServiceFactory.java
tr	True	Fix stalled tests<add>changes/ChangeListManagerImpl.java<add>if (! myProject.isDefault() && !ApplicationManager.getApplication().isUnitTestMode()) {<del>changes/ChangeListManagerImpl.java<del>if (! myProject.isDefault()) {
tr	False	hotfix metrics Make JmxMeter class static<add>energy/TileEngineIron.java<add>public void updateHeat() {<del>energy/TileEngineIron.java<del>public void updateHeatLevel() {
tr	False	Ignore illegal state exception support info<add>http/GHServer.java<add>resHandler.setResourceBase(args.get("jetty.resourcebase", "./web/src/main/webapp"));<del>http/GHServer.java<del>resHandler.setResourceBase(args.get("jetty.resourcebase", "./src/main/webapp"));
tr	True	Changed parameter with a better name<add>config/OGlobalConfiguration.java<add>DISTRIBUTED_ASYNC_TIME_DELAY("distributed.async.timeDelay",<add>"Delay time (in ms) of synchronization with slave nodes. 0 means early synchronization", Integer.class, 0),<add>DISTRIBUTED_SYNC_MAXRECORDS_BUFFER("distributed.sync.maxRecordsBuffer",<del>config/OGlobalConfiguration.java<del>DISTRIBUTED_SERVER_SYNC_REPLICAS("distributed.server.sync.replicas",<del>"Number of synchronous replicas, use 1 to have at least a secure backup server in case of failure", Integer.class, 1),<del>DISTRIBUTED_SERVER_SYNC_TIME_DELAY("distributed.server.sync.timeDelay", "Delay time (in ms) of synchronization with slave nodes",<del>Integer.class, 30000),<del><del>DISTRIBUTED_SERVER_SYNC_MAXRECORDS_BUFFER("distributed.server.sync.maxRecordsBuffer",
tr	False	suppress move event when drag initiated<add>audionotifier/AudioNotifierActivator.java<add>private AudioNotifierServiceImpl audioNotifier;<add>audioNotifier = new AudioNotifierServiceImpl();<del>audionotifier/AudioNotifierActivator.java<del>private AudioNotifierImpl audioNotifier;<del>audioNotifier = new AudioNotifierImpl();
tr	True	Fixed bug on using in HTTP requests<add>http/ONetworkProtocolHttpAbstract.java<add>OLogManager.instance().debug(this, "[ONetworkProtocolHttpAbstract.execute] Requested: %s %s", request.method,<add>request.url);<del>http/ONetworkProtocolHttpAbstract.java<del>OLogManager.instance().debug(this,<del>"[ONetworkProtocolHttpAbstract.execute] Requested: " + request.method + " " + request.url);
tr	False	added public access modifier to Parameter member<add>v7/IndyInterface.java<add>callInfo.handle = callInfo.handle.asType(callInfo.targetType);<del>v7/IndyInterface.java<del>try {<del>callInfo.handle = callInfo.handle.asType(callInfo.targetType);<del>} catch (Exception e) {<del>System.err.println("ERROR while processing "+methodName);<del>throw e;<del>}
tr	False	Check hive vectorized execution reduce enabled Spark Branch Jimmy via Xuefu<add>extract/ExtractManagedDependenciesAction.java<del>extract/ExtractManagedDependenciesAction.java<del>dependency.getClassifier().undefine();
tr	True	remove unused import<add>json/AbstractJsonProvider.java<del>json/AbstractJsonProvider.java<del>import java.util.ArrayList;
tr	True	Use a preference theme for Switch widget in SwitchScreenPreference<add>preference/SwitchScreenPreference.java<add>LayoutInflater inflater = LayoutInflater.from(getDialog().getContext(), theme | PreferenceInit.THEME_FLAG);<del>preference/SwitchScreenPreference.java<del>LayoutInflater inflater = LayoutInflater.from(getDialog().getContext(), theme);
tr	False	Updated FreemarkerViewRenderer to load the default Freemarker encoding map<add>plugins/MTLLoader.java<add>color.a = alpha;<del>plugins/MTLLoader.java<del>color.a = scan.nextFloat();
tr	True	Ensure default permissions not dropped on data wipe<add>pm/PackageManagerService.java<add>// Ensure default permissions are never cleared.<add>mDefaultPermissionPolicy.grantDefaultPermissions(userId);<add><del>pm/PackageManagerService.java
tr	True	Fix the network handler for forge<add>network/ForgeNetworkHandler.java<add>channelPair.get(Side.SERVER).pipeline().addAfter("net.minecraftforge.common.network.ForgeRuntimeCodec#0", "ServerToClientConnection", new ServerToClientConnectionEstablishedHandler());<add>channelPair.get(Side.CLIENT).pipeline().addAfter("net.minecraftforge.common.network.ForgeRuntimeCodec#0", "DimensionHandler", new DimensionMessageHandler());<add>channelPair.get(Side.CLIENT).pipeline().addAfter("net.minecraftforge.common.network.ForgeRuntimeCodec#0", "FluidIdRegistryHandler", new FluidIdRegistryMessageHandler());<del>network/ForgeNetworkHandler.java<del>channelPair.get(Side.SERVER).pipeline().addAfter("ForgeRuntimeCodec#0", "ServerToClientConnection", new ServerToClientConnectionEstablishedHandler());<del>channelPair.get(Side.CLIENT).pipeline().addAfter("ForgeRuntimeCodec#0", "DimensionHandler", new DimensionMessageHandler());<del>channelPair.get(Side.CLIENT).pipeline().addAfter("ForgeRuntimeCodec#0", "FluidIdRegistryHandler", new FluidIdRegistryMessageHandler());
tr	False	Fix quality flaws<add>codegen/CompileTextTest.java<add>CompileEnvironmentConfiguration configuration = new CompileEnvironmentConfiguration(myEnvironment, dependencies, MessageCollector.PLAIN_TEXT_TO_SYSTEM_ERR);<del>codegen/CompileTextTest.java<del>JetCoreEnvironment environment = new JetCoreEnvironment(CompileEnvironmentUtil.createMockDisposable(), dependencies);<del>CompileEnvironmentConfiguration configuration = new CompileEnvironmentConfiguration(environment, dependencies, MessageCollector.PLAIN_TEXT_TO_SYSTEM_ERR);
tr	False	Use a preference theme for Switch widget in SwitchScreenPreference<add>naming/ServiceBasedNamingStore.java<add>if(lookupName.equals(ceiling)) {<add>//the binder service returned null<add>return null;<add>}<del>naming/ServiceBasedNamingStore.java
tr	True	Commented test out<add>maven/GenericExporterMojoTest.java<add>import static org.junit.Assert.assertTrue;<add>import org.junit.Ignore;<add>@Test @Ignore<del>maven/GenericExporterMojoTest.java<del>import static org.junit.Assert.*;<del>@Test
tr	True	Remove stray HEAD line<add>rx/Observable.java<del>rx/Observable.java<del>
tr	False	config Don t access the file system every call<add>interceptor/TransactionAspectSupport.java<add>* Clear the cache.<add>this.beanFactory = null;<del>interceptor/TransactionAspectSupport.java<del>* Clear the cached transaction managers.
tr	True	Don t treat environment variables as input to Test tasks<add>testing/Test.java<del>testing/Test.java<del>@Input
tr	False	skip copyright for tests<add>graphdb/TitanEventualGraphTest.java<del>graphdb/TitanEventualGraphTest.java<del>@Ignore
tr	False	Attribute value index check<add>simple/SimpleDiffViewer.java<add>if (myFoldingModel != null) myFoldingModel.expandAll(expand);<del>simple/SimpleDiffViewer.java<del>public boolean isEnabled() {<del>return myFoldingModel != null;<del>}<del><del>@Override<del>assert myFoldingModel != null;<del>myFoldingModel.expandAll(expand);
tr	True	Guarded completion of the AsyncContext to avoid IllegalStateExceptions<add>proxy/AbstractProxyServlet.java<add>if (clientRequest.isAsyncStarted())<add>{<add>AsyncContext asyncContext = clientRequest.getAsyncContext();<add>asyncContext.complete();<add>}<add>catch (Throwable x)<del>proxy/AbstractProxyServlet.java<del>import java.io.IOException;<del>AsyncContext asyncContext = clientRequest.getAsyncContext();<del>asyncContext.complete();<del>catch (IOException x)
tr	False	Fixed typo in javadoc<add>muc/HostedRoom.java<add>import org.jivesoftware.smack.util.Objects;<add>import org.jxmpp.jid.EntityBareJid;<add>private final EntityBareJid jid;<add>jid = Objects.requireNonNull(item.getEntityID().asEntityBareJidIfPossible(),<add>"The discovered item must be an entity bare JID");<add>public EntityBareJid getJid() {<del>muc/HostedRoom.java<del>import org.jxmpp.jid.Jid;<del>private final Jid jid;<del>jid = item.getEntityID();<del>public Jid getJid() {
tr	False	remove mac specific java property<add>util/RandomUtils.java<add>* <add>return min + new Random().nextInt(max - min);<del>util/RandomUtils.java<del>* <del><del>Random random = new Random();<del>return min + random.nextInt(max - min);
tr	False	Fixed typo in javadoc<add>internal/ThreadLocalRandom.java<add>// Get from a different thread to avoid blocking indefinitely on a machine without much entropy.<add>"Not enough entropy?", timeoutSeconds<del>internal/ThreadLocalRandom.java<del>// Get from a different thread to avoid blocking indefinitely on a machine without much entrophy.<del>"Not enough entrophy?", timeoutSeconds
tr	True	Moves a contact list log from info to debug level<add>contactlist/TreeContactList.java<add>if (logger.isDebugEnabled())<add>logger.debug(<add>"Remove unmatching contact due to status change: "<add>+ uiContact.getDisplayName());<del>contactlist/TreeContactList.java<del>if (logger.isInfoEnabled())<del>logger.info("Remove unmatching contact due to status change: "<del>+ uiContact.getDisplayName());
tr	True	Remove useless log level setter for analytics<add>seriesguide/SeriesGuideApplication.java<del>seriesguide/SeriesGuideApplication.java<del>import com.google.android.gms.analytics.Logger;<del>GoogleAnalytics.getInstance(this).getLogger().setLogLevel(Logger.LogLevel.VERBOSE);
tr	False	get string with parser context during debug<add>asynchttpclient/AsyncHttpClientConfig.java<add>return requestFilters.isEmpty() ? Collections.emptyList() : Collections.unmodifiableList(requestFilters);<add>return responseFilters.isEmpty() ? Collections.emptyList() :  Collections.unmodifiableList(responseFilters);<del>asynchttpclient/AsyncHttpClientConfig.java<del>* @return <del>*<del>* @since 2.0.0<del>*/<del>public boolean hasRequestFilters() {<del>return !requestFilters.isEmpty();<del>}<del><del>/**<del>return Collections.unmodifiableList(requestFilters);<del>}<del><del>/**<del>* @return <del>* @since 2.0.0<del>*/<del>public boolean hasResponseFilters() {<del>return !responseFilters.isEmpty();<del>return Collections.unmodifiableList(responseFilters);
tr	True	Have DefaultDatabaseProvider return filename<add>database/DefaultDatabaseFilesProvider.java<add>for (String databaseName : mContext.databaseList()) {<add>databaseFiles.add(mContext.getDatabasePath(databaseName));<del>database/DefaultDatabaseFilesProvider.java<del>for (String filename : mContext.databaseList()) {<del>databaseFiles.add(new File(filename));
tr	True	added test for IList addItemListener<add>core/HazelcastTest.java<add>public void testListItemListener(){<add>IList<add>list.addItemListener(new ItemListener<add>public void itemAdded(String item) {<add>assertEquals("hello", item);<add>}<add><add>public void itemRemoved(String item) {<add>assertEquals("hello", item);<add>}<add>}, true);<add>list.add("hello");<add>list.remove("hello");<add>}<add><add>@Test<del>core/HazelcastTest.java
tr	True	add back printDecodeTime and noShutDown options to OnlineTuner<add>concurrent/MulticoreWrapper.java<add>// Thang Mar14: similar to join, but doesn't shutdown threadpool<add>public void joinNoShutDown() {<add>// Make blocking calls to the last processes that are running<add>if ( ! threadPool.isShutdown()) {<add>while(idleProcessors.size() != nThreads) {<add>blockingGetResult();<add>}<add>threadPool.shutdown();<add>}<add>}<add><del>concurrent/MulticoreWrapper.java
tr	True	Make some public methods private<add>water/Weaver.java<add>private synchronized CtClass javassistLoadClass(String name) {<add><add>private synchronized CtClass javassistLoadClass( CtClass cc ) throws NotFoundException, CannotCompileException {<del>water/Weaver.java<del>public synchronized CtClass javassistLoadClass(String name) {<del>public synchronized CtClass javassistLoadClass( CtClass cc ) throws NotFoundException, CannotCompileException {
tr	False	Fix flakiness in test timeoutOnSleepingServer<add>infinispan/InfinispanCacheAdapterLockStoreTest.java<del>infinispan/InfinispanCacheAdapterLockStoreTest.java<del>//TODO: should this test work in-memory?<del>@Override<del>public void testMultiIDAcquisition() {}
tr	True	hide setup chunk once it no longer shows errors<add>text/ChunkOutputWidget.java<add>// special behavior for setup chunk<add>{<add>if (isVisible())<add>{<add>setVisible(false);<add>host_.onOutputHeightChanged(0, ensureVisible);<add>}<add>}<add><del>text/ChunkOutputWidget.java<del>// don't sync if we're the setup chunk and we don't have any errors<del>
tr	True	Disabling all version removal for test<add>operations/CleanupOperationTest.java<add>options.setRemoveVersionsByInterval(false);<del>operations/CleanupOperationTest.java
tr	True	Added tests for double and float types as primitiveType declarations<add>xml/EncodedDataTypeTest.java<add>"    <add>"    <add>assertThat(valueOf(map.get("testTypeFloat").size()), is(valueOf(4)));<add>assertThat(valueOf(map.get("testTypeDouble").size()), is(valueOf(8)));<del>xml/EncodedDataTypeTest.java
tr	True	Make JdbcRecordCursor close idempotent<add>jdbc/JdbcRecordCursor.java<add>if (closed) {<add>return;<add>}<add><del>jdbc/JdbcRecordCursor.java
tr	False	Changed method color to setColor in Javadoc<add>rx/Observable.java<add>import rx.operators.OperationDistinctUntilChanged;<add>* Returns an Observable that forwards all sequentially distinct items emitted from the source Observable.<add>*<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public Observable<add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this));<add>}<add><add>/**<add>* Returns an Observable that forwards all items emitted from the source Observable that are sequentially distinct according to<add>* a key selector function.<add>*<add>* @param keySelector<add>*            a function that projects an emitted item to a key value which is used for deciding whether an item is sequentially<add>*            distinct from another one or not<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public <add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this, keySelector));<add>}<add><add>/**<del>rx/Observable.java
tr	True	Remove unnecessary code<add>view/Display.java<del>view/Display.java<del><del>final CompatibilityInfo ci = mCompatibilityInfo.getIfNeeded();<del>if (ci != null) {<del>ci.applyToDisplayMetrics(outMetrics);<del>}
tr	True	Add classloader exclusion for ASM<add>launcher/FMLServerTweaker.java<add>classLoader.addClassLoaderExclusion("org.objectweb.asm.");<del>launcher/FMLServerTweaker.java
tr	True	Moving closureCheckGetCssName pass to before the later transpilation step<add>jscomp/DefaultPassConfig.java<add>if (options.closurePass && options.checkMissingGetCssNameLevel.isOn()<add>&& !options.skipNonTranspilationPasses) {<add>checks.add(closureCheckGetCssName);<add>}<add><del>jscomp/DefaultPassConfig.java<del>if (options.closurePass && options.checkMissingGetCssNameLevel.isOn()) {<del>checks.add(closureCheckGetCssName);<del>}<del>
tr	True	added context to outcommented method in sharedGroup<add>tightdb/SharedGroup.java<add>context = new Context();<del>tightdb/SharedGroup.java
tr	False	Remove unuse Inject on ItemPresenter class<add>autoconfigure/PropertyPlaceholderAutoConfiguration.java<add>public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {<del>autoconfigure/PropertyPlaceholderAutoConfiguration.java<del>import org.springframework.context.ApplicationContext;<del>public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer(<del>ApplicationContext context) {
tr	False	fixed possible NPE<add>toolbar/Toolbar.java<add>final JTextField result = new JTextField(50);<add><add>result.setEnabled(false);<del>toolbar/Toolbar.java<del>final JTextField result = new JTextField(50) {<del>@Override<del>public void setBorder(Border border) {<del>}<del>};
tr	False	SMALLFIX Add back a method required<add>createConstructorParameterFromField/afterVarargs.java<del>createConstructorParameterFromField/afterVarargs.java<del>/*<del>* Copyright 2000-2011 JetBrains s.r.o.<del>*<del>* Licensed under the Apache License, Version 2.0 (the "License");<del>* you may not use this file except in compliance with the License.<del>* You may obtain a copy of the License at<del>*<del>* http://www.apache.org/licenses/LICENSE-2.0<del>*<del>* Unless required by applicable law or agreed to in writing, software<del>* distributed under the License is distributed on an "AS IS" BASIS,<del>* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<del>* See the License for the specific language governing permissions and<del>* limitations under the License.<del>*/<del>
tr	True	e g take different jdks into account<add>unneededThrows/RedundantThrows.java<add>final PsiManager psiManager = psiMethod.getManager();<add>if (psiManager.areElementsEquivalent(s, throwsResolvedType)) {<del>unneededThrows/RedundantThrows.java<del>if (Comparing.equal(s, throwsResolvedType)) {
tr	True	Add timeout settings in SseIntegrationTests<add>annotation/SseIntegrationTests.java<add>.await(Duration.ofSeconds(5))<add>.await(Duration.ofSeconds(5))<add>.await(Duration.ofSeconds(5))<del>annotation/SseIntegrationTests.java<del>.await()<del>.await()<del>.await()
tr	False	disable event expansion<add>android/ExopackageInstaller.java<add>for (String line : lines) {<add>// Ignore silly linker warnings about non-PIC code on emulators<add>if (!line.startsWith("WARNING: linker: ")) {<add>pmPath = line;<add>break;<del>android/ExopackageInstaller.java<del>import java.util.Iterator;<del>Iterator<del>if (lineIter.hasNext()) {<del>pmPath = lineIter.next();<del>if (pmPath.startsWith("WARNING: linker: ")) {<del>// Ignore silly linker warnings about non-PIC code on emulators<del>pmPath = lineIter.hasNext() ? lineIter.next() : null;
tr	True	pre calculate resulting LinkedHashSet size<add>file/CompositeFileCollection.java<add>List<add>int fileCount = 0;<add>Set<add>fileCount += files.size();<add>fileSets.add(files);<add>Set<add>for (Set<add>allFiles.addAll(fileSet);<add>}<add>return allFiles;<del>file/CompositeFileCollection.java<del>Set<del>files.addAll(collection.getFiles());<del>return files;
tr	True	add builder methods withWidth and withHeight<add>ui/JBDimension.java<add><add>public JBDimension withWidth(int width) {<add>JBDimension size = new JBDimension(0, 0);<add>size.width = scale(width);<add>size.height = height;<add>return size;<add>}<add><add>public JBDimension withHeight(int height) {<add>JBDimension size = new JBDimension(0, 0);<add>size.width = width;<add>size.height = scale(height);<add>return size;<add>}<del>ui/JBDimension.java
tr	True	add sample how to use the nameable interface<add>app/SimpleCompactHeaderDrawerActivity.java<add>import com.mikepenz.materialdrawer.model.interfaces.Nameable;<add>final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);<add>if (drawerItem instanceof Nameable) {<add>toolbar.setTitle(((Nameable) drawerItem).getNameRes());<add>}<add><del>app/SimpleCompactHeaderDrawerActivity.java<del>Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
tr	False	Fix TargetGraphFactory not adding nodes<add>tools/RootLoader.java<add>protected synchronized Class loadClass(final String name, boolean resolve) throws ClassNotFoundException {<del>tools/RootLoader.java<del>protected Class loadClass(final String name, boolean resolve) throws ClassNotFoundException {
tr	False	Rename non native menu type<add>plugin/SearchPlugin.java<add>serviceEnabled = JiveGlobals.getBooleanProperty("plugin.search.serviceEnabled", true);<del>plugin/SearchPlugin.java<del>serviceEnabled = JiveGlobals.getBooleanProperty("plugin.broadcast.serviceEnabled", true);
tr	True	remove redundant cast<add>ui/DarculaEditorTextFieldBorder.java<add>DarculaUIUtil.paintFocusRing(g, x1, y1, width1, height1);<del>ui/DarculaEditorTextFieldBorder.java<del>DarculaUIUtil.paintFocusRing((Graphics2D)g, x1, y1, width1, height1);
tr	False	debugging the test<add>junit/ResourceTestRule.java<add>import io.dropwizard.jersey.validation.ConstraintViolationExceptionMapper;<add><add>register(new ConstraintViolationExceptionMapper());<del>junit/ResourceTestRule.java<del>import org.glassfish.jersey.test.spi.TestContainerException;<del>import javax.validation.Validation;
tr	True	Fix bad checkin<add>util/ExtPropertiesLoader.java<del>util/ExtPropertiesLoader.java<del>if (_keys.contains(key)) {<del>System.out.println("### duplicate key " + key);<del>}<del>else {<del>_keys.add(key);<del>}<del><del>private java.util.Set _keys = new java.util.HashSet();
tr	True	re enable the internal pdf viewer<add>model/UIPrefsAccessor.java<add>// we disabled the internal viewer for qtwebkit but have<add>// now restored it since we are using safari<add>/*<add>*/<del>model/UIPrefsAccessor.java<del>// the internal viewer no longer works on osx
va	False	Clarify RecyclerView LayoutManager getItemCount behavior<add>stores/ProjectStoreImpl.java<add>LOG.info(e);<del>stores/ProjectStoreImpl.java<del>LOG.error(e);
va	False	Add Javadoc for factory methods<add>ui/GroovyMain.java<add>"options:",<add>withArgName("name=value").<add><del>ui/GroovyMain.java<del>null, // header<del>withArgName("key=value").<del><del>private static ClassLoader getLoader(ClassLoader cl) {<del>if (cl!=null) return cl;<del>cl = Thread.currentThread().getContextClassLoader();<del>if (cl!=null) return cl;<del>cl = GroovyMain.class.getClassLoader();<del>if (cl!=null) return cl;<del>return null;<del>}<del>
va	True	trying to fix windows test<add>storemigration/PreStartupStoreUpgraderTest.java<add>assertTrue(lines[0].contains("To enable automatic upgrade, please set configuration parameter " +<add>"\"allow_store_upgrade=true\"")  );<del>storemigration/PreStartupStoreUpgraderTest.java<del>assertEquals("To enable automatic upgrade, please set configuration parameter " +<del>"\"allow_store_upgrade=true\"", lines[0] );
va	True	add isLured method<add>pokemon/CatchablePokemon.java<add>/**<add>* Return true when the catchable pokemon is a lured pokemon<add>*<add>* @return true for lured pokemon<add>*/<add>public boolean isLured() {<add>return encounterKind == EncounterKind.DISK;<add>}<add><del>pokemon/CatchablePokemon.java
va	True	Fix up issue with JSP taglibs<add>deployment/TldParsingDeploymentProcessor.java<add>if (!tlds.containsKey(tld.getTaglibUri())) {<add>tlds.put(tld.getTaglibUri(), value);<add>}<del>deployment/TldParsingDeploymentProcessor.java
va	False	remove an empty function from AdminClient java<add>menu/MenuBuilder.java<add>public static final int TYPE_ACTION_BAR = 1;<del>menu/MenuBuilder.java<del>public static final int TYPE_NATIVE = 1;
va	True	ensure button latchedness sync ed w outline visibility<add>text/TextEditingTargetWidget.java<add>import com.google.gwt.event.dom.client.FocusEvent;<add>import com.google.gwt.event.dom.client.FocusHandler;<add>final DocDisplay editor,<add><add>editor.addFocusHandler(new FocusHandler()<add>{<add>@Override<add>public void onFocus(FocusEvent event)<add>{<add>toggleDocOutlineButton_.setLatched(<add>docOutlineWidget_.getOffsetWidth() > 0);<add>}<add>});<del>text/TextEditingTargetWidget.java<del>DocDisplay editor,
va	True	properly encode strings with styles and new lines<add>xml/ResXmlEncoders.java<add>int startPos = 0;<add>startPos = out.length() + 1;<add>enclose = false;<add>wasSpace = true;<add>if (enclose || wasSpace) {<add>out.insert(startPos, '"').append('"');<add>}<del>xml/ResXmlEncoders.java
va	False	don t write fileTypeChangedCounter default value<add>bugpatterns/SuppressWarningsDeprecated.java<add>* Find uses of SuppressWarnings with "deprecated".<add>*<add>* @author sjnickerson@google.com (Simon Nickerson)<del>bugpatterns/SuppressWarningsDeprecated.java<del>* TODO: Insert description here. (generated by sjnickerson)
va	True	Remove unused method Lexer nextTokenOrRuleToken<add>runtime/Lexer.java<del>runtime/Lexer.java<del>/** When parsing "x = <del>*  nextToken() so <del>*/<del>public Token nextTokenOrRuleToken() {<del>//if ( '<del>return nextToken();<del>}<del>
va	True	Add CFS estimatedKeys to cfstats output<add>tools/NodeCmd.java<add>outs.println("\t\tNumber of Keys (estimate): " + cfstore.estimateKeys());<del>tools/NodeCmd.java
va	True	support a scroll bar which is not contained in a scroll pane<add>components/JBScrollPane.java<add>// assume alignment for a scroll bar,<add>// which is not contained in a scroll pane<add>if (component instanceof JScrollBar) {<add>JScrollBar bar = (JScrollBar)component;<add>switch (bar.getOrientation()) {<add>case Adjustable.HORIZONTAL:<add>return BOTTOM;<add>case Adjustable.VERTICAL:<add>return bar.getComponentOrientation().isLeftToRight()<add>? RIGHT<add>: LEFT;<add>}<add>}<del>components/JBScrollPane.java
va	True	handle multiple linker warnings in agent detection<add>android/ExopackageInstaller.java<add>for (String line : lines) {<add>// Ignore silly linker warnings about non-PIC code on emulators<add>if (!line.startsWith("WARNING: linker: ")) {<add>pmPath = line;<add>break;<del>android/ExopackageInstaller.java<del>import java.util.Iterator;<del>Iterator<del>if (lineIter.hasNext()) {<del>pmPath = lineIter.next();<del>if (pmPath.startsWith("WARNING: linker: ")) {<del>// Ignore silly linker warnings about non-PIC code on emulators<del>pmPath = lineIter.hasNext() ? lineIter.next() : null;
va	False	Suppress error for comparing objects to themselves<add>book/Bookmark.java<add>if (other != null) {<add>myId = other.myId;<add>}<del>book/Bookmark.java<del>myId = other.myId;
va	True	undid stub generation workaround because it s not correct<add>compiler/AstUtil.java<add>public static boolean isJointCompiled(ClassNode clazz) {<add>return clazz.getModule().getUnit().getConfig().getJointCompilationOptions() != null;<del>compiler/AstUtil.java<del>// currently there is no supported way to get to this information, so we have to<del>// rely on the internals - in particular the fact that in case of stub compilation,<del>// Verifier runs before (!) phase SEMANTIC_ANALYSIS<del>public static boolean isJavaStub(ClassNode clazz) {<del>return clazz.getDeclaredField(Verifier.__TIMESTAMP) != null;
va	False	Add description for barbarism category<add>widget/RecyclerView.java<add>* Returns the number of items in the adapter bound to the parent RecyclerView.<add>* <add>* Note that this number is not necessarily equal to {@link State#getItemCount()}. In<add>* methods where State is available, you should use {@link State#getItemCount()} instead.<add>* For more details, check the documentation for {@link State#getItemCount()}.<add>* @return The number of items in the bound adapter<add>* @see State#getItemCount()<add>* Returns the total number of items that can be laid out. Note that this number is not<add>* necessarily equal to the number of items in the adapter, so you should always use this<add>* number for your position calculations and never access the adapter directly.<add>* <add>* RecyclerView listens for Adapter's notify events and calculates the effects of adapter<add>* data changes on existing Views. These calculations are used to decide which animations<add>* should be run.<add>* <add>* To support predictive animations, RecyclerView may rewrite or reorder Adapter changes to<add>* present the correct state to LayoutManager in pre-layout pass.<add>* <add>* For example, a newly added item is not included in pre-layout item count because<add>* pre-layout reflects the contents of the adapter before the item is added. Behind the<add>* scenes, RecyclerView offsets {@link Recycler#getViewForPosition(int)} calls such that<add>* LayoutManager does not know about the new item's existence in pre-layout. The item will<add>* be available in second layout pass and will be included in the item count. Similar<add>* adjustments are made for moved and removed items as well.<add>* <add>* You can get the adapter's item count via {@link LayoutManager#getItemCount()} method.<add>*<add>* @return The number of items currently available<add>* @see LayoutManager#getItemCount()<del>widget/RecyclerView.java<del>* Return the number of items in the adapter bound to the parent RecyclerView<del>* @return Items in the bound adapter<del>* @return Total number of items to be laid out. Note that, this number is not necessarily<del>* equal to the number of items in the adapter, so you should always use this number for<del>* your position calculations and never call adapter directly.
va	False	Fix some more javadoc in Capture java<add>input/FlyByCamera.java<add>* Unregisters the FlyByCamera from the event Dispatcher.<del>input/FlyByCamera.java<del>* Registers the FlyByCamera to receive input events from the provided<del>* Dispatcher.
va	True	Accidentally committed a change that should not have gone in<add>decomposer/DistributedLanczosSolver.java<add>@Deprecated<del>decomposer/DistributedLanczosSolver.java
va	True	remove the duplicate image saving<add>core/PImage.java<add>return true;<del>core/PImage.java<del><del>
va	True	Suppress error for comparing objects to themselves<add>testing/Helpers.java<add>@SuppressWarnings("SelfComparison")<del>testing/Helpers.java
va	False	In test cases register ConstraintViolationExceptionMapper<add>updater/Patch.java<add>Runner.logger.info("Backing up files dir: " + toDir.getPath());<add>Runner.logger.info("applying patch file" + patchFile.getName() + " to dir " + toDir.getPath());<del>updater/Patch.java<del>Runner.logger.info("Backing up files dir: " + toDir.getCanonicalFile());<del>Runner.logger.info("applying patch file" + patchFile.getName() + " to dir " + toDir.getCanonicalFile());
va	True	fixed serializer for newer android versions<add>mapdb/SerializerPojo.java<add>static private Object constructorId;<add>constructorId = getConstructorId.invoke(null, Object.class);<add>Method newInstance = ObjectStreamClass.class.getDeclaredMethod("newInstance", Class.class, getConstructorId.getReturnType());<del>mapdb/SerializerPojo.java<del>static private int constructorId;<del>constructorId = (Integer) getConstructorId.invoke(null, Object.class);<del>Method newInstance = ObjectStreamClass.class.getDeclaredMethod("newInstance", Class.class, int.class);
va	False	Fix SparseArrayObjectAdapter clear<add>integration/AbstractTransportTest.java<add><add>try {<add>requestObserver.onNext(StreamingOutputCallRequest.newBuilder()<add>.setPayload(Payload.newBuilder()<add>.setBody(ByteString.copyFrom(new byte[27182])))<add>.build());<add>} catch (IllegalStateException expected) {<add>// This can happen if the stream has already been terminated due to deadline exceeded.<add>}<del>integration/AbstractTransportTest.java<del>requestObserver.onNext(StreamingOutputCallRequest.newBuilder()<del>.setPayload(Payload.newBuilder()<del>.setBody(ByteString.copyFrom(new byte[27182])))<del>.build());
va	False	Add some javadoc to AudioRecord plus updates based on code review comments<add>audio/AudioService.java<add>streamType = mStreamVolumeAlias[streamType];<del>audio/AudioService.java<del>if (!isPlatformVoice() && (streamType == AudioSystem.STREAM_RING)) {<del>streamType = AudioSystem.STREAM_NOTIFICATION;<del>} else {<del>streamType = mStreamVolumeAlias[streamType];<del>}
va	True	Send factory reset notification broadcasts at foreground priority<add>os/RecoverySystem.java<add>intent.addFlags(Intent.FLAG_RECEIVER_FOREGROUND);<del>os/RecoverySystem.java
va	True	Fix TargetGraphFactory not adding nodes<add>testutil/TargetGraphFactory.java<add>graph.addNode(node);<del>testutil/TargetGraphFactory.java
va	False	Add more explanation for notifyChannelRetuned<add>ec2/AwsEc2UnicastHostsProvider.java<add>address = instance.getPublicIpAddress();<del>ec2/AwsEc2UnicastHostsProvider.java<del>address = instance.getPublicDnsName();
va	True	Respect the custom daemon registry dir setting for int tests even if we are using a unique home dir<add>fixtures/DaemonGradleExecuter.java<add>if (customDaemonRegistryDir != null) {<del>fixtures/DaemonGradleExecuter.java<del>if (customDaemonRegistryDir != null && !distribution.isUsingOwnUserHomeDir()) {
va	True	Fix compiler warning<add>spdy/SpdyFrameEncoder.java<add>public class SpdyFrameEncoder extends MessageToByteEncoder<del>spdy/SpdyFrameEncoder.java<del>public class SpdyFrameEncoder extends MessageToByteEncoder {
va	False	Make objectmapper transient<add>checkstyle/DebugChecker.java<del>checkstyle/DebugChecker.java<del>import com.puppycrawl.tools.checkstyle.api.CheckstyleException;<del>
va	True	Removing a period that is not needed<add>network/NetworkAddressUtils.java<add>*         address<del>network/NetworkAddressUtils.java<del>*         address.
va	True	write virtual files in a write action<add>persistent/PersistentFSImpl.java<add>ApplicationManager.getApplication().assertWriteAccessAllowed();<add><del>persistent/PersistentFSImpl.java
va	True	revert change to ReplyException message but provide descriptive toString method<add>eventbus/ReplyException.java<add>super(message);<add>@Override<add>public String toString() {<add>String message = getMessage();<add>return "(" + failureType + "," + failureCode + ") " + (message != null ? message : "");<add>}<add><del>eventbus/ReplyException.java<del>super("(" + failureType + "," + failureCode + ") " + (message != null ? message : ""));
va	True	add some javadoc to PhysicsRayTestResult<add>collision/PhysicsRayTestResult.java<add>* Contains the results of a PhysicsSpace rayTest.<add>* <add>* @return the PhysicsObject the ray collided with<add>* @return the normal of the collision in the objects local space<add>* The hitFraction is the fraction of the ray length (yeah, I know) at which the collision occurred.<add>* If e.g. the raytest was from 0,0,0 to 0,6,0 and the hitFraction is 0.5 then the collision occurred at 0,3,0<del>collision/PhysicsRayTestResult.java<del>* Contains the results of a PhysicsSpace rayTest<del>* @return the collisionObject<del>* @return the hitNormalLocal
va	True	Tweaked Hopper fill speed<add>factory/TileHopper.java<add>if (CoreProxy.proxy.isRenderWorld(worldObj) || worldObj.getWorldTime() % 2 != 0)<del>factory/TileHopper.java<del>if (CoreProxy.proxy.isRenderWorld(worldObj) || worldObj.getWorldTime() % 5 != 0)
va	False	Expanded the filename filter for snapshot paths<add>junit/ResourceTestRule.java<add>import io.dropwizard.jersey.validation.ConstraintViolationExceptionMapper;<add><add>register(new ConstraintViolationExceptionMapper());<del>junit/ResourceTestRule.java<del>import org.glassfish.jersey.test.spi.TestContainerException;<del>import javax.validation.Validation;
va	False	config Don t access the file system every call<add>project/GoModuleLibrariesInitializer.java<add>LOG.debug("Excluding part of GOPATH: " + file.getPath());<del>project/GoModuleLibrariesInitializer.java<del>LOG.info("Excluding part of GOPATH: " + file.getPath());
va	False	Fixed a couple texture paths<add>policy/BackdropFrameRenderer.java<add>mResizingBackgroundDrawable = resizingBackgroundDrawable != null<add>? resizingBackgroundDrawable.getConstantState().newDrawable()<add>: null;<add>mCaptionBackgroundDrawable = captionBackgroundDrawableDrawable != null<add>? captionBackgroundDrawableDrawable.getConstantState().newDrawable()<add>: null;<add>mUserCaptionBackgroundDrawable = userCaptionBackgroundDrawable != null<add>? userCaptionBackgroundDrawable.getConstantState().newDrawable()<add>: null;<del>policy/BackdropFrameRenderer.java<del>mResizingBackgroundDrawable = resizingBackgroundDrawable;<del>mCaptionBackgroundDrawable = captionBackgroundDrawableDrawable;<del>mUserCaptionBackgroundDrawable = userCaptionBackgroundDrawable;
va	False	Adding console log capability to PhoneGap<add>start/Main.java<add>showActiveSecurityPolicies();<add>private void showActiveSecurityPolicies()<add>{<add>// System.out.println("Active Security Policies: ");<add><add>// TODO: put security policy dump here<add>}<add><del>start/Main.java
va	False	hotfix metrics Make JmxMeter class static<add>metadata/TableHandleJacksonModule.java<add>Throwables.propagateIfInstanceOf(e.getCause(), IOException.class);<add>Throwables.propagateIfInstanceOf(e.getCause(), JsonGenerationException.class);<del>metadata/TableHandleJacksonModule.java
va	True	Fixed issue with lazy list and graphs<add>record/ORecordLazyList.java<add>if (database == null)<del>record/ORecordLazyList.java<del>if (sourceRecord == null || sourceRecord.getDatabase() == null)
va	True	Fix block renderer to not be hugely inefficient<add>render/RenderEntityBlock.java<add>if (doTessellating)<add>if (doTessellating)<add>tessellator.draw();<del>render/RenderEntityBlock.java<del>// TODO: needs to cancel the test because the variable is now private... May need to<del>// duplicate the tessellator code.<del>//if (doTessellating && !tessellator.isDrawing)<del>// TODO: needs to cancel the test because the variable is now private... May need to<del>// duplicate the tessellator code.<del>//if (doTessellating && tessellator.isDrawing)<del>tessellator.draw();
va	True	Task Define FileSystemIntegrationTest as final<add>client/FileSystemIntegrationTest.java<add>public final class FileSystemIntegrationTest {<del>client/FileSystemIntegrationTest.java<del>public class FileSystemIntegrationTest {
va	False	ModuleUtil findModuleForPsiElement should not return null in case of completion in injected PsiFile<add>moveClassesOrPackages/MoveClassesOrPackagesDialog.java<add>protected boolean isMoveToPackage() {<add>protected String getTargetPackage() {<del>moveClassesOrPackages/MoveClassesOrPackagesDialog.java<del>private boolean isMoveToPackage() {<del>private String getTargetPackage() {
va	True	overload AbstractStaticMethodInvocation setPattern Pattern with AbstractStaticMethodInvocation setPattern String<add>metaclass/AbstractStaticMethodInvocation.java<add><add>public void setPattern(String methodPattern) {<add>setPattern(Pattern.compile(methodPattern));<add>}<del>metaclass/AbstractStaticMethodInvocation.java
va	True	Ignore MainActivity for linkview<add>linkview/LinkViewOverlayService.java<add>if (componentName.getClassName().equals("com.chrislacy.linkview.MainActivity")) {<add>//Log.d("LinkView", "Ignore " + componentName.getClassName());<add>continue;<add>}<add><del>linkview/LinkViewOverlayService.java
va	False	Fix checkstyle issue<add>core/Block.java<add>+ getPrevBlockHash().toString() + "\n" + "   merkle root: " + getMerkleRoot().toString() + "\n"<add>"   time: [" + time + "] " + new Date(time * 1000).toString() + "\n"<add>"   difficulty target (nBits): " + difficultyTarget + "\n" + "   nonce: " + nonce + "\n");<del>core/Block.java<del>+ prevBlockHash.toString() + "\n" + "   merkle root: " + getMerkleRoot().toString() + "\n"
va	True	Added a test to check just one call to the getCharacetsUsecase<add>java/GetCharacterListTest.java<add>import static org.mockito.Mockito.when;<add>@Test public void testThatCharactersUsecaseWithOffsetIsCalledOnce() throws Exception {<add>GetCharactersUsecase charactersUsecase = givenACharactersUsecase();<add>int fakeCurrentOffset = 20;<add><add>when(mockRepository.getCharacters(fakeCurrentOffset)).thenReturn(getFakeObservableCharacterList());<add>charactersUsecase.executeIncreasingOffset();<add><add>Mockito.verify(mockRepository, only()).getCharacters(fakeCurrentOffset);<add>}<add><del>java/GetCharacterListTest.java
va	False	prefer shorter names when sorting import candidate list<add>gitblit/GitBlit.java<add><add>settingsModel = loadSettingModels();<del>gitblit/GitBlit.java<del>settingsModel = loadSettingModels();<del>
va	True	ignores and todo comments<add>policy/JettyPolicy.java<add>* Required additions:<add>* - certificate support<add>*<add>* - directories of policy file support<del>policy/JettyPolicy.java
va	False	rename actions back to admin and add suffix s instead<add>deeplinkdispatch/DeepLinkEntry.java<add>private static final String PARAM_VALUE = "([a-zA-Z0-9_#'!+%~,\\-\\.\\@\\$\\:]+)";<del>deeplinkdispatch/DeepLinkEntry.java<del>private static final String PARAM_VALUE = "([a-zA-Z0-9_#'!+%~,\\-\\.\\@\\$]+)";
va	False	Return the actual interpolator of the ViewPropertyAnimator<add>view/Display.java<del>view/Display.java<del><del>final CompatibilityInfo ci = mCompatibilityInfo.getIfNeeded();<del>if (ci != null) {<del>ci.applyToDisplayMetrics(outMetrics);<del>}
va	False	Remove stale testMultiIDAcquisition override<add>conf/NeuralNetConfiguration.java<add>private transient ObjectMapper mapper = mapper();<del>conf/NeuralNetConfiguration.java<del>private ObjectMapper mapper = mapper();
va	False	Fixed the CS error and a typo<add>applytx/DumpRecordsCommand.java<add>// We rely on this method having the side-effect of loading the property blocks:<add>record.numberOfProperties();<del>applytx/DumpRecordsCommand.java
va	False	Fixed documentation of parameter<add>security/LoginUser.java<add>throw new IOException("Failed to login: " + e.getMessage(), e);<del>security/LoginUser.java<del>throw new IOException("Failed to login: " + e);
va	True	Fix invalidation workaround<add>view/ViewCompatHC.java<add>tickleInvalidationFlag(view);<add><add>tickleInvalidationFlag(view);<add><del>view/ViewCompatHC.java
va	True	Fix typo in comment<add>web/WebMvcAutoConfiguration.java<add>// Defined as a nested config to ensure WebMvcConfigurerAdapter is not read when not<del>web/WebMvcAutoConfiguration.java<del>// Defined as a nested config to ensure WebMvcConfigurerAdapter it not read when not
va	True	remove mac specific java property<add>gui/Launcher.java<del>gui/Launcher.java<del>System.setProperty("apple.awt.UIElement", "true"); // TODO [low] Explain this: What is this for?
va	False	removed obselete NOCOMMIT and left over sysout call<add>task/IndexTask.java<add>this.tuningConfig = tuningConfig == null ? new IndexTuningConfig(0, 0) : tuningConfig;<del>task/IndexTask.java<del>this.tuningConfig = tuningConfig;
va	True	update node status if it becomes healthy again<add>api/Cloud.java<add>h2o._node_healthy = elapsed > HeartBeatThread.TIMEOUT ? false : true;<del>api/Cloud.java<del>if( elapsed > HeartBeatThread.TIMEOUT)<del>h2o._node_healthy = false;
va	False	added Comparable to default imports<add>project/FileContentQueue.java<add>myProceedWithLoadingLock.notify(); // we ask only content loading thread to proceed, TODO: fix if more than one loading thread<add>myProceedWithProcessingLock.notifyAll(); // ask all sleeping threads to proceed, there can be more than one of them<del>project/FileContentQueue.java<del>myProceedWithLoadingLock.notify();<del>myProceedWithProcessingLock.notify();
va	True	unneccessary AfterClass annotation removed in spring test<add>cache/JCacheCacheManagerTest.java<del>cache/JCacheCacheManagerTest.java<del>import org.junit.AfterClass;<del>@AfterClass
va	True	Move the sticky event removal outside of isAdded call<add>notifications/NotificationsListFragment.java<add><add>EventBus.getDefault().removeStickyEvent(NotificationEvents.NoteModerationFailed.class);<del>notifications/NotificationsListFragment.java<del><del>EventBus.getDefault().removeStickyEvent(NotificationEvents.NoteModerationFailed.class);
va	False	Rename non native menu type<add>changeSignature/OverriderUsageInfo.java<add>import org.jetbrains.annotations.Nullable;<add>/**<add>* @deprecated use {@link #getOverridingMethod()} instead<add>*/<add>@Nullable<add>@Override<add>public PsiMethod getElement() {<add>return (PsiMethod)super.getElement();<add>}<add><del>changeSignature/OverriderUsageInfo.java
va	False	Don t output control characters when terminal is a dumb terminal<add>text/TextEditingTargetWidget.java<add>import com.google.gwt.event.dom.client.FocusEvent;<add>import com.google.gwt.event.dom.client.FocusHandler;<add>final DocDisplay editor,<add><add>editor.addFocusHandler(new FocusHandler()<add>{<add>@Override<add>public void onFocus(FocusEvent event)<add>{<add>toggleDocOutlineButton_.setLatched(<add>docOutlineWidget_.getOffsetWidth() > 0);<add>}<add>});<del>text/TextEditingTargetWidget.java<del>DocDisplay editor,
va	True	Fixed ParseDataset to remove job when done<add>parser/ParseDataset.java<add>@Override public void onCompletion(CountedCompleter cmp){job.remove();}<add><del>parser/ParseDataset.java<del>job.remove();
va	False	Fixed typo for NETHER_WARTS<add>internal/ChannelImplDetector.java<add>private static final boolean EPOLL = Epoll.isAvailable() && Boolean.getBoolean("ratpack.epoll");<del>internal/ChannelImplDetector.java<del>private static final boolean EPOLL = Epoll.isAvailable();
va	False	add delete users resources<add>smssync/CursorToMessage.java<add>final int duration = msgMap.get(CallLog.Calls.DURATION) == null ? 0 :<add>Integer.parseInt(msgMap.get(CallLog.Calls.DURATION));<del>smssync/CursorToMessage.java<del>final int duration = Integer.parseInt(msgMap.get(CallLog.Calls.DURATION));
va	True	Adds the possibility to send message or call a specific contact resource Requested by Mark Atwood and Bdale Garbee<add>rss/ContactRssImpl.java<add>import java.util.*;<add><add>/**<add>* Indicates if this contact supports resources.<add>*<add>* @return <add>* resources<add>*/<add>public boolean supportResources()<add>{<add>return false;<add>}<add><add>/**<add>* Returns a collection of resources supported by this contact or null<add>* if it doesn't support resources.<add>*<add>* @return null, as this contact doesn't support resources<add>*/<add>public Collection<add>{<add>return null;<add>}<del>rss/ContactRssImpl.java
va	True	Actually instantiates a read only graph database instance of you want it<add>shell/StartLocalClient.java<add>import org.neo4j.kernel.EmbeddedReadOnlyGraphDatabase;<add>new EmbeddedReadOnlyGraphDatabase( dbPath ) :<del>shell/StartLocalClient.java<del>new EmbeddedGraphDatabase( dbPath ) :
va	True	Fix javadoc copy paste error<add>widget/TabWidget.java<add>* Sets the drawable to use as the right part of the strip below the<add>* @param drawable the right strip drawable<add>* Sets the drawable to use as the right part of the strip below the<add>* right strip drawable<del>widget/TabWidget.java<del>* Sets the drawable to use as the left part of the strip below the<del>* @param drawable the left strip drawable<del>* Sets the drawable to use as the left part of the strip below the<del>* left strip drawable
va	True	do not call IdeFocusManager on minor focus requests<add>impl/DiffRequestProcessor.java<add>if (hadFocus) requestFocusInternal();<add>protected void requestFocusInternal() {<add>JComponent component = getPreferredFocusedComponent();<add>if (component != null) component.requestFocus();<add>}<add><add>DiffRequestProcessor.this.requestFocusInternal();<del>impl/DiffRequestProcessor.java<del>if (hadFocus) requestFocus();<del>DiffRequestProcessor.this.requestFocus();
va	False	Don t return a NamingContext if the binder service returns null<add>cli/RestoreCommand.java<del>cli/RestoreCommand.java<del>import java.util.logging.Logger;<del>private static final Logger logger = Logger.getLogger(RestoreCommand.class.getSimpleName());<del>
va	False	Remove some temp file post execution checking that wasn t actually doing anything<add>cluster/MinimumMasterNodesTests.java<add>import org.apache.lucene.util.LuceneTestCase;<add>@LuceneTestCase.AwaitsFix(bugUrl = "boaz is looking at failures in this test class. Example failure: http://build-us-00.elastic.co/job/es_g1gc_master_metal/11653/")<del>cluster/MinimumMasterNodesTests.java<del>@AwaitsFix(bugUrl = "boaz is looking a this. Example failure: http://build-us-00.elastic.co/job/es_g1gc_master_metal/11653/")
va	True	Removed accidental copyDatabase call<add>datasets/ReaderDatabase.java<add>//copyDatabase(db);<del>datasets/ReaderDatabase.java<del>copyDatabase(db);
va	False	Add Http2HeadersEncoder ALWAYS_SENSITIVE instance<add>tools/RootLoader.java<add>protected synchronized Class loadClass(final String name, boolean resolve) throws ClassNotFoundException {<del>tools/RootLoader.java<del>protected Class loadClass(final String name, boolean resolve) throws ClassNotFoundException {
va	True	Fix connect on a network id with zero<add>wifi/WifiManager.java<add>// Use INVALID_NETWORK_ID for arg1 when passing a config object<add>// arg1 is used to pass network id when the network already exists<add>c.mAsyncChannel.sendMessage(CONNECT_NETWORK, WifiConfiguration.INVALID_NETWORK_ID,<add>c.putListener(listener), config);<del>wifi/WifiManager.java<del>c.mAsyncChannel.sendMessage(CONNECT_NETWORK, 0, c.putListener(listener), config);
va	True	Fix loading for individual<add>bytecodeviewer/BytecodeViewer.java<add>container.files.put(cn.name + ".class", bytes);<del>bytecodeviewer/BytecodeViewer.java<del>container.files.put(fn, bytes);
va	False	Remove an unnecessary animation<add>index/ExtractGooglecodeAuthorization.java<add>System.out.println("--");<del>index/ExtractGooglecodeAuthorization.java<del>System.out.ptintln("--");
va	True	add null check to copy selection<add>webkit/WebView.java<add>if (selection != null && selection != "") {<del>webkit/WebView.java<del>if (selection != "") {
va	True	Removed import of specialized hamcrest matcher<add>builder/ResettableClassFileTransformerResetTest.java<add>import static org.hamcrest.CoreMatchers.*;<del>builder/ResettableClassFileTransformerResetTest.java<del>import static org.hamcrest.CoreMatchers.instanceOf;<del>import static org.hamcrest.CoreMatchers.sameInstance;<del>import static org.hamcrest.core.Is.is;
va	False	Modify the log level<add>server/ConnectionSSLSessionInfo.java<add>serverConnection.getOriginalSinkConduit().flush();<del>server/ConnectionSSLSessionInfo.java
va	True	Add comments on member variables for ufs block instream<add>block/UnderStoreBlockInStream.java<add>/** The start of this block. This is the absolute position within the under store stream. */<add>/** The length of the block. */<add>/** The UFS path for this block. */<add>/**<add>* The current position for this block stream. This is the absolute position within the under<add>* store stream.<add>*/<add>/** The current under store stream. */<del>block/UnderStoreBlockInStream.java
va	True	Replace synchronous setting of a flag with async setting of the flag<add>controller/MessagingController.java<add>setFlag(account, messageIds, Flag.SEEN, true);<del>controller/MessagingController.java<del>setFlagInCache(account, messageIds, Flag.SEEN, true);<del>setFlagSynchronous(account, messageIds, Flag.SEEN, true, false);
va	False	Fixed address resolution<add>get/OServerCommandGetStaticContent.java<add>return true;<del>get/OServerCommandGetStaticContent.java<del>return super.beforeExecute(iRequest, iResponse);
va	True	notifyAll sleeping threads to proceed with indexing<add>project/FileContentQueue.java<add>myProceedWithLoadingLock.notify(); // we ask only content loading thread to proceed, TODO: fix if more than one loading thread<add>myProceedWithProcessingLock.notifyAll(); // ask all sleeping threads to proceed, there can be more than one of them<del>project/FileContentQueue.java<del>myProceedWithLoadingLock.notify();<del>myProceedWithProcessingLock.notify();
va	True	make BottomScrollPanel horizonal scrollbar aware<add>widget/BottomScrollPanel.java<add>scrolledToBottom_ =<add>getVerticalScrollPosition() == getMaximumVerticalScrollPosition();<del>widget/BottomScrollPanel.java<del>scrolledToBottom_ = getVerticalScrollPosition() + getOffsetHeight()<del>== getElement().getScrollHeight();
va	True	Remove unnessary logging<add>cpr/AtmosphereServlet.java<del>cpr/AtmosphereServlet.java<del>logger.info("Initializing Atmosphere framework: {}", Version.getRawVersion());<del>
va	False	save project encoding<add>ui/PositionHighlighter.java<add>if (((BreakpointWithHighlighter)breakpoint).isVisible() && breakpoint.isValid()) {<del>ui/PositionHighlighter.java<del>if (((BreakpointWithHighlighter)breakpoint).isVisible()) {
va	False	Fix potential deadlock in CDC state tracking<add>hadoop/KeyValueStoreMapReduceIntegrationTest.java<add>new LocalTachyonClusterResource(Constants.GB, BLOCK_SIZE,<del>hadoop/KeyValueStoreMapReduceIntegrationTest.java<del>new LocalTachyonClusterResource(Constants.GB, Constants.KB, BLOCK_SIZE,
va	False	Remove unused import from test code<add>users/UserImpl.java<add>final String type = obj.get("type");<add>final String id = obj.get("id");<add><add>if (type != null && id != null) {<add>startpage.put("type", type);<add>startpage.put("id", id);<add>}<del>users/UserImpl.java<del>startpage.put("type", obj.get("type"));<del>startpage.put("id", obj.get("id"));
va	False	Check hive vectorized execution reduce enabled Spark Branch Jimmy via Xuefu<add>water/Weaver.java<add>private synchronized CtClass javassistLoadClass(String name) {<add><add>private synchronized CtClass javassistLoadClass( CtClass cc ) throws NotFoundException, CannotCompileException {<del>water/Weaver.java<del>public synchronized CtClass javassistLoadClass(String name) {<del>public synchronized CtClass javassistLoadClass( CtClass cc ) throws NotFoundException, CannotCompileException {
va	False	Fix memory leak on timeout in NioClient<add>client/FileSystemIntegrationTest.java<add>public final class FileSystemIntegrationTest {<del>client/FileSystemIntegrationTest.java<del>public class FileSystemIntegrationTest {
va	False	Fix missing cross ref links in the MediaPlayer java javadoc<add>alerts/AlertSender.java<add>if (core.getConfiguration().isEmailTransportUseSsl()) {<add>email.setSslSmtpPort(Integer.toString(core.getConfiguration().getEmailTransportPort()));<add>}<del>alerts/AlertSender.java
va	True	Fix method names<add>activeandroid/Cache.java<add>return sModelInfo.getTypeSerializer(Type);<del>activeandroid/Cache.java<del>return sModelInfo.getParser(Type);
va	True	Do not add null startpage type and id in response<add>users/UserImpl.java<add>final String type = obj.get("type");<add>final String id = obj.get("id");<add><add>if (type != null && id != null) {<add>startpage.put("type", type);<add>startpage.put("id", id);<add>}<del>users/UserImpl.java<del>startpage.put("type", obj.get("type"));<del>startpage.put("id", obj.get("id"));
va	True	Add missing lock for animation tasks<add>view/DefaultView.java<add>lock.lock();<add>lock.unlock();<del>view/DefaultView.java
va	True	hide JS project generators from PyCharm s new directory project dialog<add>platform/NewDirectoryProjectDialog.java<add>* Copyright 2000-2012 JetBrains s.r.o.<add>final DirectoryProjectGenerator[] generators = getGenerators();<add>protected DirectoryProjectGenerator[] getGenerators() {<add>return Extensions.getExtensions(DirectoryProjectGenerator.EP_NAME);<add>}<add><del>platform/NewDirectoryProjectDialog.java<del>* Copyright 2000-2009 JetBrains s.r.o.<del>final DirectoryProjectGenerator[] generators = Extensions.getExtensions(DirectoryProjectGenerator.EP_NAME);
va	True	Remove unused method<add>internal/DependencyResolvingClasspath.java<add><del>internal/DependencyResolvingClasspath.java<del>import org.gradle.language.base.internal.model.DefaultVariantsMetaData;<del>import org.gradle.language.base.internal.model.VariantsMetaData;<del>import org.gradle.model.internal.manage.schema.ModelSchema;<del>import org.gradle.platform.base.BinarySpec;<del><del>protected static VariantsMetaData variantsMetaDataFrom(BinarySpec binary, ModelSchema<del>return DefaultVariantsMetaData.extractFrom(binary, binarySchema);<del>}<del>
va	False	changed keyword self lookup to use RT get<add>json/AbstractJsonProvider.java<del>json/AbstractJsonProvider.java<del>import java.util.ArrayList;
va	True	Updated the copyright notice to current year<add>client/HttpUrlConnector.java<add>* Copyright (c) 2011-2013 Oracle and/or its affiliates. All rights reserved.<del>client/HttpUrlConnector.java<del>* Copyright (c) 2011-2012 Oracle and/or its affiliates. All rights reserved.
va	False	Improve HostedRoom API<add>ui/PositionHighlighter.java<add>if (((BreakpointWithHighlighter)breakpoint).isVisible() && breakpoint.isValid()) {<del>ui/PositionHighlighter.java<del>if (((BreakpointWithHighlighter)breakpoint).isVisible()) {
va	True	set original serialVersionUID of StreamCharBuffer so that serialized objects stored with previous Grails versions are compatible with latest changes<add>util/StreamCharBuffer.java<add>static final long serialVersionUID = 5486972234419632945L;<del>util/StreamCharBuffer.java
va	False	Remove unuse Inject on ItemPresenter class<add>wicket/GitblitParamUrlCodingStrategy.java<del>wicket/GitblitParamUrlCodingStrategy.java<del>import org.apache.wicket.PageParameters;<del>final PageParameters parameters = new PageParameters(decodeParameters(parametersFragment,<del>requestParameters.getParameters()));
va	True	findbugs Remove dead code in GitblitParamUrlCodingStrategy<add>wicket/GitblitParamUrlCodingStrategy.java<del>wicket/GitblitParamUrlCodingStrategy.java<del>import org.apache.wicket.PageParameters;<del>final PageParameters parameters = new PageParameters(decodeParameters(parametersFragment,<del>requestParameters.getParameters()));
va	True	fixed Gson TypeAdapters javadoc<add>gson/Gson.java<add>import java.util.Map;<add>import java.util.ServiceLoader;<add>* such factories using {@link ServiceLoader}.<add>*<add>* <add>* com.google.gson.GsonBuilder gsonBuilder = new com.google.gson.GsonBuilder();<add>* for (TypeAdapterFactory factory : ServiceLoader.load(TypeAdapterFactory.class)) {<add>*   gsonBuilder.registerTypeAdapterFactory(factory);<add>* }<add>*<add>* // Manual registration is also an option<add>* gsonBuilder.registerTypeAdapterFactory(new GsonAdaptersMyDocument());<add>*<add>* com.google.gson.Gson gson = gsonBuilder.create();<add>* <del>gson/Gson.java<del>import java.util.Map;<del>* such factories {@link com.google.gson.Gson}.
va	False	Accidentally committed a change that should not have gone in<add>factory/TileHopper.java<add>if (CoreProxy.proxy.isRenderWorld(worldObj) || worldObj.getWorldTime() % 2 != 0)<del>factory/TileHopper.java<del>if (CoreProxy.proxy.isRenderWorld(worldObj) || worldObj.getWorldTime() % 5 != 0)
va	False	Log all notification interceptions<add>input/FlyByCamera.java<add>* Unregisters the FlyByCamera from the event Dispatcher.<del>input/FlyByCamera.java<del>* Registers the FlyByCamera to receive input events from the provided<del>* Dispatcher.
va	False	removed debug comment<add>stampede/CliConfig.java<del>stampede/CliConfig.java<del>@Parameter(names={"--cursor-timeout"}, descriptionKey="config.mongo.cursorTimeout")<del>private String cursorTimeout;<del>public String getCursorTimeout() {<del>return cursorTimeout;<del>}<del>if (cursorTimeout != null) {<del>addParam("/replication/cursorTimeout", cursorTimeout);<del>}
va	False	Fix crash due to wrong string ids<add>configuration/GlobalMethodSecurityConfiguration.java<add>getExpressionHandler());<add>preInvocationAdvice.setExpressionHandler(getExpressionHandler());<del>configuration/GlobalMethodSecurityConfiguration.java<del>methodExpressionHandler());<del>* Creates the {@link MethodSecurityExpressionHandler} to be used.<del>*<del>* @return<del>*/<del>@Bean<del>public MethodSecurityExpressionHandler methodExpressionHandler() {<del>return new DefaultMethodSecurityExpressionHandler();<del>}<del><del>/**<del>preInvocationAdvice.setExpressionHandler(methodExpressionHandler());
va	False	Fix NPE crash updating dates when no internet connection<add>impl/ConcurrentMapManager.java<add>node.factory.getExecutorService("hz:putAll").execute(dt);<del>impl/ConcurrentMapManager.java<del>node.factory.getExecutorService().execute(dt);
va	True	Fix compilation after merging upstream<add>hadoop/KeyValueStoreMapReduceIntegrationTest.java<add>new LocalTachyonClusterResource(Constants.GB, BLOCK_SIZE,<del>hadoop/KeyValueStoreMapReduceIntegrationTest.java<del>new LocalTachyonClusterResource(Constants.GB, Constants.KB, BLOCK_SIZE,
va	False	Removed an unused line of code in task edit fragment<add>sip/SipSessionGroup.java<add>case Response.CALL_IS_BEING_FORWARDED:<add>case Response.QUEUED:<add>case Response.SESSION_PROGRESS:<add>// feedback any provisional responses (except TRYING) as<add>// ring back for better UX<del>sip/SipSessionGroup.java<del>import android.net.sip.SipSessionAdapter;
va	True	Geometry will now automatically de share VertexBuffers if it detects it<add>scene/Geometry.java<add>// Version #1: removed shared meshes.<add>// models loaded with shared mesh will be automatically fixed.<add>public static final int SAVABLE_VERSION = 1;<add><add><add>if (ic.getSavableVersion(Geometry.class) == 0){<add>// Fix shared mesh (if set)<add>Mesh sharedMesh = getUserData(UserData.JME_SHAREDMESH);<add>if (sharedMesh != null){<add>getMesh().extractVertexData(sharedMesh);<add>}<add>}<del>scene/Geometry.java
va	True	Expanded the filename filter for snapshot paths<add>snapshots/SnapshotRepository.java<add>if (!f.getName().matches("^[A-Za-z0-9_\\- \\./\\\\'\\$@~!%\\^\\*\\(\\)\\[\\]\\+\\{\\},\\?]+$")) {<del>snapshots/SnapshotRepository.java<del>if (!f.getName().matches("[A-Za-z0-9_\\-,.\\[\\]\\(\\) ]{1,50}")) {
va	False	Fixed query error message<add>entity/Creature.java<add>* Represents a Creature. Creatures are non-intelligent monsters or animals which<add>* have very simple abilities.<add>public interface Creature extends LivingEntity {<add>* @param target New LivingEntity to target, or null to clear the target<add><add>/**<add>* Gets the current target of this Creature<add>*<add>* @return Current target of this creature, or null if none exists<add>*/<add>public LivingEntity getTarget();<del>entity/Creature.java<del>* Represents a Creature. Any LivingEntity that is not human is a Creature.<del>* @author Cogito<del>*<del>public interface Creature extends LivingEntity{<del>* @param target New LivingEntity to target
va	True	Reordered settings model loading to avoid WAR null pointer<add>gitblit/GitBlit.java<add><add>settingsModel = loadSettingModels();<del>gitblit/GitBlit.java<del>settingsModel = loadSettingModels();<del>
va	True	Return the empty string<add>jsr/UndertowSession.java<add>return "";<del>jsr/UndertowSession.java<del>return null;
va	False	insert missing blank<add>jdbc/JdbcRecordCursor.java<add>if (closed) {<add>return;<add>}<add><del>jdbc/JdbcRecordCursor.java
va	True	Report a parser warning for an suppress with nothing after it<add>parsing/JsDocInfoParser.java<add>if (token != JsDocToken.LEFT_CURLY) {<add>parser.addParserWarning("msg.jsdoc.suppress",<add>stream.getLineno(), stream.getCharno());<add>} else {<del>parsing/JsDocInfoParser.java<del>if (token == JsDocToken.LEFT_CURLY) {
va	False	Fix caching of receivers<add>hadoop/HadoopUtils.java<add>private static void setConfigurationFromSystemProperties(Configuration configuration,<add>String[] propertyNames) {<add>private static void setConfigurationFromSystemProperty(Configuration configuration,<add>String propertyName) {<del>hadoop/HadoopUtils.java<del>private static void setConfigurationFromSystemProperties(final Configuration configuration,<del>final String[] propertyNames) {<del>private static void setConfigurationFromSystemProperty(final Configuration configuration,<del>final String propertyName) {
va	True	Fix testWAVSeekToEnd testcase<add>functional/MediaPlayerApiTest.java<add>boolean isEnd = CodecTest.seekToEnd(MediaNames.WAV);<add>assertTrue("WAV seekToEnd", isEnd);<del>functional/MediaPlayerApiTest.java<del>if (isWMVEnable) {<del>boolean isEnd = CodecTest.seekToEnd(MediaNames.WAV);<del>assertTrue("WAV seekToEnd", isEnd);<del>}
va	False	removed log error<add>webkit/WebSettings.java<add>private long            mMaximumDecodedImageSize = 0; // 0 means default<add>/**<add>* Specify the maximum decoded image size. The default is<add>* 2 megs for small memory devices and 8 megs for large memory devices.<add>* @param size The maximum decoded size, or zero to set to the default.<add>* @hide pending api council approval<add>*/<add>public void setMaximumDecodedImageSize(long size) {<add>if (mMaximumDecodedImageSize != size) {<add>mMaximumDecodedImageSize = size;<add>postSync();<add>}<add>}<add><del>webkit/WebSettings.java
va	False	Fix TargetGraphFactory not adding nodes<add>service/RemoteImService.java<add>int otrPolicy = OtrPolicy.OPPORTUNISTIC;<del>service/RemoteImService.java<del>private boolean autoStartOtr = false;<del>int otrPolicy = OtrPolicy.OPPORTUNISTIC;<del>autoStartOtr = false;<del>
va	True	Fix ShadowConnectivityManager constructor<add>shadows/ShadowConnectivityManager.java<add>public ShadowConnectivityManager() {<del>shadows/ShadowConnectivityManager.java<del>public void __constructor__() {
va	True	Fixing regression with launch target task<add>views/TaskStackView.java<add>if (!Constants.DebugFlags.App.EnableFastToggleRecents && launchTargetTask != null) {<add>setFocusedTask(mStack.indexOfTask(launchTargetTask), false /* scrollToTask */,<add>false /* animated */, false /* requestViewFocus */);<add>} else {<add>RecentsActivityLaunchState launchState = mConfig.getLaunchState();<add>int taskOffset = launchState.launchedFromHome ? -1 : -2;<add>setFocusedTask(mStack.getTaskCount() + taskOffset, false /* scrollToTask */,<add>false /* animated */, false /* requestViewFocus */);<add>}<del>views/TaskStackView.java<del>RecentsActivityLaunchState launchState = mConfig.getLaunchState();<del>int taskOffset = launchState.launchedFromHome ? -1 : -2;<del>setFocusedTask(mStack.getTaskCount() + taskOffset, false /* scrollToTask */,<del>false /* animated */, false /* requestViewFocus */);
va	True	set maximum image size<add>webkit/WebSettings.java<add>private long            mMaximumDecodedImageSize = 0; // 0 means default<add>/**<add>* Specify the maximum decoded image size. The default is<add>* 2 megs for small memory devices and 8 megs for large memory devices.<add>* @param size The maximum decoded size, or zero to set to the default.<add>* @hide pending api council approval<add>*/<add>public void setMaximumDecodedImageSize(long size) {<add>if (mMaximumDecodedImageSize != size) {<add>mMaximumDecodedImageSize = size;<add>postSync();<add>}<add>}<add><del>webkit/WebSettings.java
va	True	Fix style issues<add>block/TieredBlockStoreTest.java<add>long lockId1 = mBlockStore.lockBlock(USER_ID1, BLOCK_ID1);<add>long lockId2 = mBlockStore.lockBlock(USER_ID2, BLOCK_ID2);<del>block/TieredBlockStoreTest.java<del>long lockId1, lockId2;<del>lockId1 = mBlockStore.lockBlock(USER_ID1, BLOCK_ID1);<del>lockId2 = mBlockStore.lockBlock(USER_ID2, BLOCK_ID2);
va	True	Replace specific class with an interface in declaration of a protected field<add>util/SchemaResolver.java<add>import java.util.Map;<add>protected final Map<del>util/SchemaResolver.java<del>protected final HashMap
va	False	Fix connect on a network id with zero<add>sql/Sql.java<add>* free any cached resources.<del>sql/Sql.java<del>* free any caches resources.
va	True	Fix crash due to wrong string ids<add>ui/OverviewFragment.java<add>CheatSheet.setup(ratings, R.string.menu_rate_episode);<del>ui/OverviewFragment.java<del>CheatSheet.setup(ratings, R.string.menu_rate_trakt);
va	False	Remove Metrics allMetrics<add>muc/HostedRoom.java<add>import org.jivesoftware.smack.util.Objects;<add>import org.jxmpp.jid.EntityBareJid;<add>private final EntityBareJid jid;<add>jid = Objects.requireNonNull(item.getEntityID().asEntityBareJidIfPossible(),<add>"The discovered item must be an entity bare JID");<add>public EntityBareJid getJid() {<del>muc/HostedRoom.java<del>import org.jxmpp.jid.Jid;<del>private final Jid jid;<del>jid = item.getEntityID();<del>public Jid getJid() {
va	True	Fixed a couple texture paths<add>builders/TileBuilder.java<add>laser.setTexture(DefaultProps.TEXTURE_PATH_ENTITIES + "/laser_1.png");<del>builders/TileBuilder.java<del>laser.setTexture("/net/minecraft/src/buildcraft/core/gui/stripes.png");
va	True	Fix NPE crash updating dates when no internet connection<add>task/BaseGetNewsTask.java<add>new SaveNewsListTask(date, resultNewsList).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);<add>}<add><add>if (mListener != null) {<del>task/BaseGetNewsTask.java<del>new SaveNewsListTask(date, resultNewsList).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);<del>}<del><del>if (mListener != null) {
va	True	Forcing termination of pool when timeout is reached in concurrency test<add>concurrency/ConcurrentEngineUsageTest.java<add>boolean isEnded = executor.awaitTermination(20000, TimeUnit.MILLISECONDS);<add>if(!isEnded) {<add>log.error("Executor was not shut down after timeout, not al tasks have been executed");<add>executor.shutdownNow();<add><add>}<del>concurrency/ConcurrentEngineUsageTest.java<del>executor.awaitTermination(20000, TimeUnit.MILLISECONDS);
va	True	Added distinctUntilChanged member methods to Observable<add>rx/Observable.java<add>import rx.operators.OperationDistinctUntilChanged;<add>* Returns an Observable that forwards all sequentially distinct items emitted from the source Observable.<add>*<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public Observable<add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this));<add>}<add><add>/**<add>* Returns an Observable that forwards all items emitted from the source Observable that are sequentially distinct according to<add>* a key selector function.<add>*<add>* @param keySelector<add>*            a function that projects an emitted item to a key value which is used for deciding whether an item is sequentially<add>*            distinct from another one or not<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public <add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this, keySelector));<add>}<add><add>/**<del>rx/Observable.java
va	True	removed reference to deprecated stubVoid method<add>mockito/Mockito.java<add>* For stubbing void methods with throwables see: {@link Mockito#doThrow(Throwable)}<del>mockito/Mockito.java<del>* For stubbing void methods with throwables see: {@link Mockito#stubVoid}
va	True	added application root to the SDK search path on window Education Edition attempt<add>flavors/WinPythonSdkFlavor.java<add>findInstallations(candidates, "python.exe", PythonHelpersLocator.getHelpersRoot().getParent());<del>flavors/WinPythonSdkFlavor.java<del>candidates.add(PythonHelpersLocator.getHelpersRoot().getParent());
va	False	Add TelecomManager constructor for passing in TelecomServiceImpl<add>compute/AnalysisReportDaoTest.java<add>static final String DEFAULT_PROJECT_KEY = "123456789-987654321";<add>DbSession session;<add>AnalysisReportDao underTest = new AnalysisReportDao(system2);<del>compute/AnalysisReportDaoTest.java<del>import org.junit.rules.TemporaryFolder;<del>private static final String DEFAULT_PROJECT_KEY = "123456789-987654321";<del><del>@Rule<del>public TemporaryFolder temp = new TemporaryFolder();<del><del>AnalysisReportDao underTest = db.getDbClient().analysisReportDao();<del>private DbSession session;<del>db.truncateTables();
va	False	Remove unused method Lexer nextTokenOrRuleToken<add>network/ChannelManager.java<add>this.receiverCache.put(sourceChannelID, receiverList);<del>network/ChannelManager.java<del>if (channels.containsKey(sourceChannelID)) {<del>this.receiverCache.put(sourceChannelID, receiverList);<del>}
va	False	add default tuning config for index task<add>decomposer/DistributedLanczosSolver.java<add>@Deprecated<del>decomposer/DistributedLanczosSolver.java
va	False	Add CopmonentScan to default imports in CLI<add>tightdb/SharedGroup.java<add>context = new Context();<del>tightdb/SharedGroup.java
va	True	Renamed PacketNotificator to PacketCopier<add>admin/PacketsNotification.java<add>import org.jivesoftware.wildfire.interceptor.PacketCopier;<add>PacketCopier.getInstance().addSubscriber(componentJID, component, iqEnabled,<del>admin/PacketsNotification.java<del>import org.jivesoftware.wildfire.interceptor.PacketNotificator;<del>PacketNotificator.getInstance().addSubscriber(componentJID, component, iqEnabled,
va	True	Fix memory leak on timeout in NioClient<add>net/NioClient.java<add>private boolean closeCalled = false;<add>connectionClosed();<add>public synchronized void connectionClosed() {<add>if (!closeCalled) {<add>closeCalled = true;<add>upstreamParser.connectionClosed();<add>}<del>net/NioClient.java<del>upstreamParser.connectionClosed();<del>public void connectionClosed() {<del>upstreamParser.connectionClosed();
va	False	Fix stalled tests<add>edit/Entity.java<add>import net.osmand.data.LatLon;<add>import net.osmand.osm.edit.OSMSettings.OSMTagKey;<add><add>import java.io.Serializable;<add>public abstract class Entity implements Serializable {<del>edit/Entity.java<del>import net.osmand.data.LatLon;<del>import net.osmand.osm.edit.OSMSettings.OSMTagKey;<del><del>public abstract class Entity {
va	True	Encoded special characters<add>string/ORecordSerializerJSON.java<add>json.writeAttribute(identLevel + 1, true, fieldName, encode(record.field(fieldName)));<add>private Object encode(final Object iValue) {<add>if (iValue instanceof String) {<add>final String encoded = ((String) iValue).replace('"', '\'');<add>return encoded;<add>} else<add>return iValue;<add>}<add><del>string/ORecordSerializerJSON.java<del>json.writeAttribute(identLevel + 1, true, fieldName, record.field(fieldName));
va	True	Fix CS error<add>http/HttpEndpoint.java<add>import org.apache.camel.HeaderFilterStrategyAware;<add>import org.apache.camel.util.ObjectHelper;<del>http/HttpEndpoint.java<del>import org.apache.camel.HeaderFilterStrategyAware;<del>import org.apache.camel.util.ObjectHelper;
va	False	Remove unnecessary code<add>checkstyle/DebugChecker.java<del>checkstyle/DebugChecker.java<del>import com.puppycrawl.tools.checkstyle.api.CheckstyleException;<del>
va	False	don t use reference comparison with Integers<add>am/ActivityStack.java<add>} else if (!isOnHomeDisplay()) {<add>return false;<add>} else if (!isHomeStack()){<add>if (DEBUG_STATES) Slog.d(TAG,<add>return mStackSupervisor.resumeHomeStackTask(returnTaskType, prev);<del>am/ActivityStack.java<del>} else {<del>if (DEBUG_STATES && isOnHomeDisplay()) Slog.d(TAG,<del>// Only resume home if on home display<del>return isOnHomeDisplay() &&<del>mStackSupervisor.resumeHomeStackTask(returnTaskType, prev);
va	True	Don t return a NamingContext if the binder service returns null<add>naming/ServiceBasedNamingStore.java<add>if(lookupName.equals(ceiling)) {<add>//the binder service returned null<add>return null;<add>}<del>naming/ServiceBasedNamingStore.java
va	True	Removed unused variable<add>controller/MessagingController.java<del>controller/MessagingController.java<del>int totalDone = 0;<del><del><del>totalDone++;
va	False	Fixed use after free error looking up IP addresses<add>segmented/SegmentedRaftLog.java<del>segmented/SegmentedRaftLog.java<del>log.info( "reading entry term at %d. prevIndex:%d, prevTerm:%d", logIndex, state.prevIndex, state.prevTerm );
va	True	debugging the test<add>quickFix/CreateFileFix.java<add>if (ApplicationManager.getApplication().isUnitTestMode()) {<add>System.out.println("CreateFileFix.CreateFileFix");<add>System.out.println(newFileName);<add>System.out.println(isDirectory);<add>System.out.println(FileTypeManager.getInstance().getFileTypeByFileName(newFileName));<add>System.out.println(FileTypeManager.getInstance().getFileTypeByFileName(newFileName).isBinary());<add>}<del>quickFix/CreateFileFix.java
va	True	Change log severity<add>project/GoModuleLibrariesInitializer.java<add>LOG.debug("Excluding part of GOPATH: " + file.getPath());<del>project/GoModuleLibrariesInitializer.java<del>LOG.info("Excluding part of GOPATH: " + file.getPath());
va	False	remove unnecessary comments<add>wm/AppWindowAnimator.java<add>toAppAnimator.hasTransformation = transferWinAnimator.mAppAnimator.hasTransformation;<add>if (toAppAnimator.hasTransformation) {<add>toAppAnimator.transformation.set(transferWinAnimator.mAppAnimator.transformation);<add>} else {<add>toAppAnimator.transformation.clear();<add>}<del>wm/AppWindowAnimator.java
va	True	Tweaked a comment<add>resolveengine/DependencyGraphBuilder.java<add>// If not, then remove our incoming edges, which triggers them to be moved across to the selected configuration<del>resolveengine/DependencyGraphBuilder.java<del>// If not, then move our incoming edges across to the selected configuration
va	False	write virtual files in a write action<add>xprivacy/ActivityMain.java<add>alertDialogBuilder.setNegativeButton(ActivityMain.this.getString(android.R.string.cancel),<add>new DialogInterface.OnClickListener() {<add>@Override<add>public void onClick(DialogInterface dialog, int which) {<add>// Do nothing<add>}<add>});<del>xprivacy/ActivityMain.java
va	True	remove debug system out<add>v7/IndyInterface.java<add>callInfo.handle = callInfo.handle.asType(callInfo.targetType);<del>v7/IndyInterface.java<del>try {<del>callInfo.handle = callInfo.handle.asType(callInfo.targetType);<del>} catch (Exception e) {<del>System.err.println("ERROR while processing "+methodName);<del>throw e;<del>}
va	False	Remove useless log level setter for analytics<add>contactlist/TreeContactList.java<add>if (logger.isDebugEnabled())<add>logger.debug(<add>"Remove unmatching contact due to status change: "<add>+ uiContact.getDisplayName());<del>contactlist/TreeContactList.java<del>if (logger.isInfoEnabled())<del>logger.info("Remove unmatching contact due to status change: "<del>+ uiContact.getDisplayName());
va	True	save project encoding<add>encoding/FileEncodingConfigurable.java<add>Charset projectCharset = mySelectedProjectCharset.get();<del>encoding/FileEncodingConfigurable.java<del>Charset projectCharset = mySelectedIdeCharset.get();
va	False	Fixed query error message<add>jscomp/DefaultPassConfig.java<add>if (options.closurePass && options.checkMissingGetCssNameLevel.isOn()<add>&& !options.skipNonTranspilationPasses) {<add>checks.add(closureCheckGetCssName);<add>}<add><del>jscomp/DefaultPassConfig.java<del>if (options.closurePass && options.checkMissingGetCssNameLevel.isOn()) {<del>checks.add(closureCheckGetCssName);<del>}<del>
va	False	Task Define FileSystemIntegrationTest as final<add>protocol/DataHeaderFlyweight.java<add>public DataHeaderFlyweight reservedValue(final long reservedValue)<del>protocol/DataHeaderFlyweight.java<del>public DataHeaderFlyweight reservedValue(final int reservedValue)
va	True	Previous cleanup missed one string<add>security/SecurityClassLoad.java<add>"ApplicationHttpRequest$AttributeNamesEnumerator");<del>security/SecurityClassLoad.java<del>"core.ApplicationHttpRequest$AttributeNamesEnumerator");
va	False	Commented test out<add>lang/Keyword.java<add>return RT.get(obj, this);<del>lang/Keyword.java<del>if(obj == null)<del>return null;<del>return ((IPersistentMap) obj).valAt(this);
va	False	Remove unused method Lexer nextTokenOrRuleToken<add>recovery/RelocationTests.java<add><add>List<add>int numDocs = scaledRandomIntBetween(25, 250);<add>for (int i = 0; i <add>requests.add(client().prepareIndex(indexName, "type").setCreate(true).setSource("{}"));<add>}<add>indexRandom(true, requests);<del>recovery/RelocationTests.java
va	False	Remove stray HEAD line<add>codegen/CompileTextTest.java<add>CompileEnvironmentConfiguration configuration = new CompileEnvironmentConfiguration(myEnvironment, dependencies, MessageCollector.PLAIN_TEXT_TO_SYSTEM_ERR);<del>codegen/CompileTextTest.java<del>JetCoreEnvironment environment = new JetCoreEnvironment(CompileEnvironmentUtil.createMockDisposable(), dependencies);<del>CompileEnvironmentConfiguration configuration = new CompileEnvironmentConfiguration(environment, dependencies, MessageCollector.PLAIN_TEXT_TO_SYSTEM_ERR);
va	False	Guarded completion of the AsyncContext to avoid IllegalStateExceptions<add>views/TaskStackView.java<add>if (!Constants.DebugFlags.App.EnableFastToggleRecents && launchTargetTask != null) {<add>setFocusedTask(mStack.indexOfTask(launchTargetTask), false /* scrollToTask */,<add>false /* animated */, false /* requestViewFocus */);<add>} else {<add>RecentsActivityLaunchState launchState = mConfig.getLaunchState();<add>int taskOffset = launchState.launchedFromHome ? -1 : -2;<add>setFocusedTask(mStack.getTaskCount() + taskOffset, false /* scrollToTask */,<add>false /* animated */, false /* requestViewFocus */);<add>}<del>views/TaskStackView.java<del>RecentsActivityLaunchState launchState = mConfig.getLaunchState();<del>int taskOffset = launchState.launchedFromHome ? -1 : -2;<del>setFocusedTask(mStack.getTaskCount() + taskOffset, false /* scrollToTask */,<del>false /* animated */, false /* requestViewFocus */);
va	False	Remove stray HEAD line<add>index/AutoIndexConfigIT.java<add>/**<add>* Copyright (c) 2002-2012 "Neo Technology,"<add>* Network Engine for Objects in Lund AB [http://neotechnology.com]<add>*<add>* This file is part of Neo4j.<add>*<add>* Neo4j is free software: you can redistribute it and/or modify<add>* it under the terms of the GNU Affero General Public License as<add>* published by the Free Software Foundation, either version 3 of the<add>* License, or (at your option) any later version.<add>*<add>* This program is distributed in the hope that it will be useful,<add>* but WITHOUT ANY WARRANTY; without even the implied warranty of<add>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<add>* GNU Affero General Public License for more details.<add>*<add>* You should have received a copy of the GNU Affero General Public License<add>* along with this program. If not, see <add>*/<del>index/AutoIndexConfigIT.java
va	False	Fix connect on a network id with zero<add>integrate/SvnIntegrateChangesTask.java<add>CommitChangeListDialog.commitAlienChanges(myProject, clb.getChanges(), myVcs, myMerger.getComment(), myMerger.getComment());<del>integrate/SvnIntegrateChangesTask.java<del>CommitChangeListDialog.commitAlienChanges(myProject, clb.getChanges(), myVcs,<del>SvnBundle.message("action.Subversion.integrate.changes.alien.commit.changelist.title"), myMerger.getComment());
va	True	Fix flakiness in test timeoutOnSleepingServer<add>integration/AbstractTransportTest.java<add><add>try {<add>requestObserver.onNext(StreamingOutputCallRequest.newBuilder()<add>.setPayload(Payload.newBuilder()<add>.setBody(ByteString.copyFrom(new byte[27182])))<add>.build());<add>} catch (IllegalStateException expected) {<add>// This can happen if the stream has already been terminated due to deadline exceeded.<add>}<del>integration/AbstractTransportTest.java<del>requestObserver.onNext(StreamingOutputCallRequest.newBuilder()<del>.setPayload(Payload.newBuilder()<del>.setBody(ByteString.copyFrom(new byte[27182])))<del>.build());
va	False	added application root to the SDK search path on window Education Edition attempt<add>http2/Http2HeadersEncoder.java<add>* Always return {@code false} for {@link SensitivityDetector#isSensitive(CharSequence, CharSequence)}.<add><add>/**<add>* Always return {@code true} for {@link SensitivityDetector#isSensitive(CharSequence, CharSequence)}.<add>*/<add>SensitivityDetector ALWAYS_SENSITIVE = new SensitivityDetector() {<add>@Override<add>public boolean isSensitive(CharSequence name, CharSequence value) {<add>return true;<add>}<add>};<del>http2/Http2HeadersEncoder.java<del>* Always return {@code false} for {@link SensitivityDetector#isSensitive(ByteString, ByteString)}.
va	False	Fix possible NPE<add>http2/Http2HeadersEncoder.java<add>* Always return {@code false} for {@link SensitivityDetector#isSensitive(CharSequence, CharSequence)}.<add><add>/**<add>* Always return {@code true} for {@link SensitivityDetector#isSensitive(CharSequence, CharSequence)}.<add>*/<add>SensitivityDetector ALWAYS_SENSITIVE = new SensitivityDetector() {<add>@Override<add>public boolean isSensitive(CharSequence name, CharSequence value) {<add>return true;<add>}<add>};<del>http2/Http2HeadersEncoder.java<del>* Always return {@code false} for {@link SensitivityDetector#isSensitive(ByteString, ByteString)}.
va	False	Made afterPropertiesSet use instance variable instead of static variable<add>factory/TileHopper.java<add>if (CoreProxy.proxy.isRenderWorld(worldObj) || worldObj.getWorldTime() % 2 != 0)<del>factory/TileHopper.java<del>if (CoreProxy.proxy.isRenderWorld(worldObj) || worldObj.getWorldTime() % 5 != 0)
va	True	log exceptions on remote search properly dispatch MessageList changes<add>activity/MessageList.java<add>mHandler.addOrUpdateMessages(account, folderName, Collections.singletonList(message), false);<del>activity/MessageList.java<del>// TODO achen - may need to add a setSupportProgress to mHandler to run on the UI thread.<del><del>addOrUpdateMessages(account, folderName, Collections.singletonList(message), false);
va	True	add randomness init for random node generator<add>ingest/IngestProxyActionFilter.java<add>import org.elasticsearch.common.Randomness;<add>private final AtomicInteger randomNodeGenerator = new AtomicInteger(Randomness.get().nextInt());<del>ingest/IngestProxyActionFilter.java<del>private final AtomicInteger randomNodeGenerator = new AtomicInteger();
va	False	fixed bug with detecting changes with copied files<add>net/NioClient.java<add>private boolean closeCalled = false;<add>connectionClosed();<add>public synchronized void connectionClosed() {<add>if (!closeCalled) {<add>closeCalled = true;<add>upstreamParser.connectionClosed();<add>}<del>net/NioClient.java<del>upstreamParser.connectionClosed();<del>public void connectionClosed() {<del>upstreamParser.connectionClosed();
va	False	remove warning about cast<add>utility/SquidCursorAdapter.java<add>* Constructs a SquidCursorAdapter that will use the model class's default id property to implement<add>* {@link #getItemId(int)}.<add>* @see #SquidCursorAdapter(Context, AbstractModel, Property)<del>utility/SquidCursorAdapter.java<del>* Equivalent to SquidCursorAdapter(context, model, null). Should be used for TableModel cursors where the _id<del>* column is present.
va	True	Updating the Need Help<add>android/ViewWebStats.java<add>intent.setData(Uri.parse("http://jetpack.me/about"));<del>android/ViewWebStats.java<del>intent.setData(Uri.parse("http://en.support.wordpress.com/stats/"));
va	False	Add TelecomManager constructor for passing in TelecomServiceImpl<add>array/PanCakeSorting.java<add>package com.interview.sort;<del>array/PanCakeSorting.java<del>package com.interview.array;
va	False	Do not retain BeanFactory ref<add>am/ActivityStack.java<add>} else if (!isOnHomeDisplay()) {<add>return false;<add>} else if (!isHomeStack()){<add>if (DEBUG_STATES) Slog.d(TAG,<add>return mStackSupervisor.resumeHomeStackTask(returnTaskType, prev);<del>am/ActivityStack.java<del>} else {<del>if (DEBUG_STATES && isOnHomeDisplay()) Slog.d(TAG,<del>// Only resume home if on home display<del>return isOnHomeDisplay() &&<del>mStackSupervisor.resumeHomeStackTask(returnTaskType, prev);
va	True	Fix bug when application breaks when trying to deserialize Node<add>edit/Entity.java<add>import net.osmand.data.LatLon;<add>import net.osmand.osm.edit.OSMSettings.OSMTagKey;<add><add>import java.io.Serializable;<add>public abstract class Entity implements Serializable {<del>edit/Entity.java<del>import net.osmand.data.LatLon;<del>import net.osmand.osm.edit.OSMSettings.OSMTagKey;<del><del>public abstract class Entity {
va	False	reuse CodegenTestCase in CompileTextTest<add>jme3androidexamples/MainActivity.java<add>Class<add>} catch (NoClassDefFoundError ncdf) {<add>include = false;<add>Log.i(TAG, "Skipping Class " + className + ". No Class Def found.");<del>jme3androidexamples/MainActivity.java<del>Class
va	True	Removing unusable settings from self hosted<add>prefs/SiteSettingsFragment.java<add>removePreference(R.string.pref_key_site_general, R.string.pref_key_site_language);<add>removePreference(R.string.pref_key_site_writing, R.string.pref_key_site_category);<add>removePreference(R.string.pref_key_site_writing, R.string.pref_key_site_format);<del>prefs/SiteSettingsFragment.java
va	False	Fix wrong condition<add>ui/JBDimension.java<add><add>public JBDimension withWidth(int width) {<add>JBDimension size = new JBDimension(0, 0);<add>size.width = scale(width);<add>size.height = height;<add>return size;<add>}<add><add>public JBDimension withHeight(int height) {<add>JBDimension size = new JBDimension(0, 0);<add>size.width = width;<add>size.height = scale(height);<add>return size;<add>}<del>ui/JBDimension.java
va	True	Add Javadoc for factory methods<add>text/MatchesPattern.java<add>/**<add>* Creates a matcher of {@link String} that matches when the examined string<add>* exactly matches the given {@link Pattern}.<add>*/<add>/**<add>* Creates a matcher of {@link String} that matches when the examined string<add>* exactly matches the given regular expression, treated as a {@link Pattern}.<add>*/<del>text/MatchesPattern.java
va	True	Fixed documentation of parameter<add>config/OGlobalConfiguration.java<add>PROFILER_AUTODUMP_INTERVAL("profiler.autoDump.interval", "Dumps the profiler values at regular intervals. Time is expressed in seconds",<del>config/OGlobalConfiguration.java<del>PROFILER_AUTODUMP_INTERVAL("profiler.autoDump.interval", "Dumps the profiler at regulat intervals. Time is in seconds",
va	True	Toggling keyboard and swapping adapter when SearchView is expanded collapsed<add>main/SitePickerActivity.java<add>toggleKeyboard();<add>SitePickerSearchAdapter sitePickerSearchAdapter = new SitePickerSearchAdapter();<add>mRecycleView.swapAdapter(sitePickerSearchAdapter, true);<add>toggleKeyboard();<add><add>mRecycleView.swapAdapter(getAdapter(), true);<add>getAdapter().loadSites();<add><add>private void toggleKeyboard() {<add>InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);<add>imm.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);<add>}<del>main/SitePickerActivity.java<del>InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);<del>imm.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);
va	False	Make JdbcRecordCursor close idempotent<add>impl/HttpClientImpl.java<add>import java.util.Optional;<add>SSLHandshakeException sslException = new SSLHandshakeException("Failed to create SSL connection");<add>Optional.ofNullable(fut2.cause()).ifPresent(sslException::initCause);<add>connectionFailed(context, ch, connectErrorHandler, sslException,<add>listener);<del>impl/HttpClientImpl.java<del>connectionFailed(context, ch, connectErrorHandler, new SSLHandshakeException("Failed to create SSL connection"),<del>listener);
va	True	Fixed bad case of lowercasing the URL which is wrong as URLs are case sensitive<add>parser/Parser.java<add>String href = urlAnchorPair.getHref().trim();<add>String hrefLoweredCase = href.toLowerCase();<add>if (!hrefLoweredCase.contains("javascript:") && !hrefLoweredCase.contains("mailto:") && !hrefLoweredCase.contains("@")) {<del>parser/Parser.java<del>String href = urlAnchorPair.getHref();<del>href = href.trim().toLowerCase();<del>if (!href.contains("javascript:") && !href.contains("mailto:") && !href.contains("@")) {
va	False	pre calculate resulting LinkedHashSet size<add>glutils/ShapeRenderer.java<add>* shapeRenderer.setColor(1, 1, 0, 1);<add>* shapeRenderer.setColor(0, 1, 0, 1);<del>glutils/ShapeRenderer.java<del>* shapeRenderer.color(1, 1, 0, 1);<del>* shapeRenderer.color(0, 1, 0, 1);
va	False	Fixed issues on IO connections at server side<add>net/NioClient.java<add>private boolean closeCalled = false;<add>connectionClosed();<add>public synchronized void connectionClosed() {<add>if (!closeCalled) {<add>closeCalled = true;<add>upstreamParser.connectionClosed();<add>}<del>net/NioClient.java<del>upstreamParser.connectionClosed();<del>public void connectionClosed() {<del>upstreamParser.connectionClosed();
va	False	Ensure default permissions not dropped on data wipe<add>mongodb/DBCollection.java<add>public DBCursor find(final DBObject filter) {<add>return find(filter, null);<add>}<add><del>mongodb/DBCollection.java
va	False	fixed bug with detecting changes with copied files<add>assist/RCompletionManager.java<add>if (isValidForRIdentifier(docDisplay_.getCharacterAtCursor()))<add>// Bail if there is an alpha-numeric character<add>// following the cursor<add>if (isValidForRIdentifier(docDisplay_.getCharacterAtCursor()))<add>return false;<add><del>assist/RCompletionManager.java<del>char charAtCursor = docDisplay_.getCharacterAtCursor();<del>if (Character.isLetter(charAtCursor) ||<del>Character.isDigit(charAtCursor))
va	False	Fix bad checkin<add>db/RadosClient.java<add>* YCSB binding for <add>* See {@code rados/README.md} for details.<del>db/RadosClient.java<del>// import org.json.JSONString;<del>* YCSB binding for <del>* See {@code redis/README.md} for details.<del>// result.put(name, new StringByteIterator(json.getJSONString(name).getString()));<del>// JSONObject json = new JSONObject(values);<del>
va	False	Use non deprecated versions of methods<add>segmented/SegmentedRaftLog.java<del>segmented/SegmentedRaftLog.java<del>log.info( "reading entry term at %d. prevIndex:%d, prevTerm:%d", logIndex, state.prevIndex, state.prevTerm );
va	False	fix merged comment<add>hadoop/HadoopUtils.java<add>private static void setConfigurationFromSystemProperties(Configuration configuration,<add>String[] propertyNames) {<add>private static void setConfigurationFromSystemProperty(Configuration configuration,<add>String propertyName) {<del>hadoop/HadoopUtils.java<del>private static void setConfigurationFromSystemProperties(final Configuration configuration,<del>final String[] propertyNames) {<del>private static void setConfigurationFromSystemProperty(final Configuration configuration,<del>final String propertyName) {
va	False	Fix bug when application breaks when trying to deserialize Node<add>view/PointerIconCompatApi24.java<add>return null;<add>return null;<del>view/PointerIconCompatApi24.java<del>return PointerIcon.createCustomIcon(bitmap, hotSpotX, hotSpotY);<del>return PointerIcon.loadCustomIcon(resources, resourceId);
va	True	Fix typo into javadoc<add>service/AbstractClinicServiceTests.java<add>* AbstractClinicServiceTests#clinicService clinicService}<del>service/AbstractClinicServiceTests.java<del>* AbstractclinicServiceTests#clinicService clinicService}
va	True	add some debug logging to RoutingContext constructor to show the computed trip origin and destination<add>core/RoutingContext.java<add><add>LOG.debug("Origin vertex {}", this.origin);<add>LOG.debug("Origin vertex inbound edges {}", this.origin.getIncoming());<add>LOG.debug("Origin vertex outbound edges {}", this.origin.getOutgoing());<add><add>LOG.debug("Destination vertex {}", this.target);<add>LOG.debug("Destination vertex inbound edges {}", this.target.getIncoming());<add>LOG.debug("Destination vertex outbound edges {}", this.target.getOutgoing());<del>core/RoutingContext.java
va	False	Camel commands useable for remote JVMs using jolokia<add>view/DefaultView.java<add>lock.lock();<add>lock.unlock();<del>view/DefaultView.java
te	False	Replace synchronous setting of a flag with async setting of the flag<add>scribe/ScribeCollector.java<add>CollectorMetrics metrics = CollectorMetrics.NOOP_METRICS;<del>scribe/ScribeCollector.java<del>CollectorMetrics metrics;
te	True	Fix formatting in DatabaseShardManager<add>metadata/DatabaseShardManager.java<add>.collect(toSet());<del>metadata/DatabaseShardManager.java<del>.collect(toSet());
te	True	remove deprecated field<add>wrappers/Wrapper.java<del>wrappers/Wrapper.java<del>@Deprecated<del>protected MetaClass delegatingMetaClass;<del>
te	True	Fix a transparent flicker due to wrong crop<add>wm/AppWindowAnimator.java<add>toAppAnimator.hasTransformation = transferWinAnimator.mAppAnimator.hasTransformation;<add>if (toAppAnimator.hasTransformation) {<add>toAppAnimator.transformation.set(transferWinAnimator.mAppAnimator.transformation);<add>} else {<add>toAppAnimator.transformation.clear();<add>}<del>wm/AppWindowAnimator.java
te	False	hide upload panel if there s no providers for stored before launch task configs r jeka<add>adapter/KnownHostsAdapter.java<add>ArrayList filteredList = (ArrayList)results.values;<add>for (Object c : filteredList) {<add>add((String)c);<add>}<del>adapter/KnownHostsAdapter.java<del>ArrayList<del>for (String c : filteredList) {<del>add(c);<del>}
te	True	Fix some more javadoc in Capture java<add>video/Capture.java<add>* captureEvent method that receives a Capture argument. This method will<del>video/Capture.java<del>* captureEvent method that receives a GSMovie argument. This method will
te	True	remove redundant loop<add>rules/Rule.java<add>Set<add>if (relevantIDs != null && relevantIDs.contains(getId())) {<add>return true;<add>} else {<add>return false;<del>rules/Rule.java<del>Language[] languages = Language.LANGUAGES;<del>for (int i = 0; i <del>Set<del>if (relevantIDs != null && relevantIDs.contains(getId()))<del>return true;<del>return false;
te	True	Don t output control characters when terminal is a dumb terminal<add>internal/TerminalDetector.java<add>// Use jna-posix to determine if we're connected to a terminal<add>if (!PosixUtil.current().isatty(element)) {<add>return false;<add>}<add><add>// Dumb terminal doesn't support control codes. Should really be using termcap database.<add>String term = System.getenv("TERM");<add>if (term != null && term.equals("dumb")) {<add>return false;<add>}<add><add>// Assume a terminal<add>return true;<del>internal/TerminalDetector.java<del>// Use jna-posix<del>return PosixUtil.current().isatty(element);
te	False	removed invalid check from test<add>network/HttpSender.java<add>// ZAP: 2016/12/12 Add initiator constant for Forced Browse requests<add>public static final int FORCED_BROWSE_INITIATOR = 11;<del>network/HttpSender.java
te	False	Fixing test issue<add>core/PImage.java<add>return true;<del>core/PImage.java<del><del>
te	False	annotation demo add protocol<add>netty/NettyAsyncHttpProvider.java<add>String c = response.getHeader(HttpHeaders.Names.CONNECTION);<add>final boolean validConnection = c == null ? false : c.equals(HttpHeaders.Values.UPGRADE);<del>netty/NettyAsyncHttpProvider.java<del>final boolean validConnection = response.getHeader(HttpHeaders.Names.CONNECTION).equals(HttpHeaders.Values.UPGRADE);
te	False	Fixed typo for NETHER_WARTS<add>text/MatchesPattern.java<add>/**<add>* Creates a matcher of {@link String} that matches when the examined string<add>* exactly matches the given {@link Pattern}.<add>*/<add>/**<add>* Creates a matcher of {@link String} that matches when the examined string<add>* exactly matches the given regular expression, treated as a {@link Pattern}.<add>*/<del>text/MatchesPattern.java
te	True	add default tuning config for index task<add>task/IndexTask.java<add>this.tuningConfig = tuningConfig == null ? new IndexTuningConfig(0, 0) : tuningConfig;<del>task/IndexTask.java<del>this.tuningConfig = tuningConfig;
te	True	Add CopmonentScan to default imports in CLI<add>autoconfigure/SpringBootstrapCompilerAutoConfiguration.java<add>"org.springframework.context.annotation.ComponentScan",<del>autoconfigure/SpringBootstrapCompilerAutoConfiguration.java
te	True	Removed unused SvnCommand constructor<add>commandLine/SvnCommand.java<del>commandLine/SvnCommand.java<del>public SvnCommand(File workingDirectory, @NotNull SvnCommandName commandName, @NotNull @NonNls String exePath) {<del>this(workingDirectory, commandName, exePath, null);<del>}<del>
te	True	Changed method color to setColor in Javadoc<add>glutils/ShapeRenderer.java<add>* shapeRenderer.setColor(1, 1, 0, 1);<add>* shapeRenderer.setColor(0, 1, 0, 1);<del>glutils/ShapeRenderer.java<del>* shapeRenderer.color(1, 1, 0, 1);<del>* shapeRenderer.color(0, 1, 0, 1);
te	False	Updated the copyright notice to current year<add>metadata/DatabaseShardManager.java<add>.collect(toSet());<del>metadata/DatabaseShardManager.java<del>.collect(toSet());
te	False	add shell bolt pending limit in fresh branch<add>storm/Config.java<add>@isPositiveNumber(includeZero = true)<del>storm/Config.java<del>@isPositiveNumber
te	True	Reverted change MSSQL can reference objects through the catalog name<add>core/MSSQLDatabase.java<add>if (View.class.isAssignableFrom(objectType)) { //SQLServer does not support specifying the database name as a prefix to the object name<add>String name = super.escapeObjectName(objectName, objectType);<add>if (schemaName != null) {<add>name = super.escapeObjectName(schemaName, Schema.class)+"."+name;<add>}<add>return name;<add>return super.escapeObjectName(catalogName, schemaName, objectName, objectType);<del>core/MSSQLDatabase.java<del>String name = super.escapeObjectName(objectName, objectType);<del>if (schemaName != null) {<del>name = super.escapeObjectName(schemaName, Schema.class)+"."+name;<del>return name;
te	True	Add Nullable to IssueDto<add>db/IssueDto.java<add>public IssueDto setSelectedAt(@Nullable Date d) {<del>db/IssueDto.java<del>public IssueDto setSelectedAt(Date d) {
te	False	Fix stalled tests<add>string/ORecordSerializerJSON.java<add>json.writeAttribute(identLevel + 1, true, fieldName, encode(record.field(fieldName)));<add>private Object encode(final Object iValue) {<add>if (iValue instanceof String) {<add>final String encoded = ((String) iValue).replace('"', '\'');<add>return encoded;<add>} else<add>return iValue;<add>}<add><del>string/ORecordSerializerJSON.java<del>json.writeAttribute(identLevel + 1, true, fieldName, record.field(fieldName));
te	True	Fix embarassing typo in VariableContext with<add>engine/VariableContext.java<add>if (!entry.getKey().equals(name)) {<del>engine/VariableContext.java<del>if (entry.getKey().equals(name)) {
te	False	remove redundant cast<add>impl/PythonLanguageLevelPusher.java<add>private static final FileAttribute PERSISTENCE = new FileAttribute("python_language_level_persistence", 1, true);<del>impl/PythonLanguageLevelPusher.java<del>private static final FileAttribute PERSISTENCE = new FileAttribute("python_language_level_persistence", 1);
te	True	Defaults ScribeCollector to NOOP_METRICS<add>scribe/ScribeCollector.java<add>CollectorMetrics metrics = CollectorMetrics.NOOP_METRICS;<del>scribe/ScribeCollector.java<del>CollectorMetrics metrics;
te	True	Remove unused code<add>util/PathImpl.java<del>util/PathImpl.java<del>public PathImpl( Node start, Relationship[] path, Node end )<del>{<del>this.start = start;<del>this.path = path;<del>this.end = end;<del>}<del>
te	True	Compare values using compareTo not compareValue<add>EncodedValue/ArrayEncodedSubValue.java<add>comp = values[i].compareTo(other.values[i]);<del>EncodedValue/ArrayEncodedSubValue.java<del>comp = values[i].compareValue(other.values[i]);
te	False	template might contain leading whitespaces<add>livePreview/SearchResults.java<add>if (myDisposed || project != null && project.isDisposed()) return;<del>livePreview/SearchResults.java<del>if (project != null && project.isDisposed()) return;
te	True	add warning when the config file cannot be found<add>service/DefaultOverdueService.java<add>log.warn("Overdue system disabled: unable to load the overdue config from " + properties.getConfigURI());<add>log.warn("Overdue system disabled: unable to load the overdue config from " + properties.getConfigURI(), e);<add>log.warn("Overdue system disabled: unable to load the overdue config from " + properties.getConfigURI(), e);<add>log.warn("Unable to load the overdue config from " + properties.getConfigURI(), e);<del>service/DefaultOverdueService.java<del>log.warn("Unable to load the overdue config from " + properties.getConfigURI());
te	True	Remove some temp file post execution checking that wasn t actually doing anything<add>executer/AbstractGradleExecuter.java<del>executer/AbstractGradleExecuter.java<del>if (getExecutable() == null) {<del>assertions.add(new Action<del>public void execute(ExecutionResult executionResult) {<del>// Assert that no temp files are left lying around<del>// Note: don't do this if a custom executable is used, as we don't know (and probably don't care) whether the executable cleans up or not<del>TestFile[] testFiles = getTmpDir().listFiles();<del>if (testFiles != null) {<del>List<del>for (File file : testFiles) {<del>if (!file.getName().matches("maven-artifact\\d+.tmp")) {<del>unexpectedFiles.add(file.getName());<del>}<del>}<del>//            Assert.assertThat(unexpectedFiles, Matchers.isEmpty());<del>}<del>}<del>});<del>}<del>
te	True	Fixed bug that caused stats to refresh with every resume and fail to restore previous state<add>stats/StatsActivity.java<add>restoreState(savedInstanceState);<del>stats/StatsActivity.java
te	False	Moving closureCheckGetCssName pass to before the later transpilation step<add>matchers/ConsoleOutMatcher.java<add>return StringUtils.contains(consoleOut.toLowerCase(), message.toLowerCase());<del>matchers/ConsoleOutMatcher.java<del>return StringUtils.contains(consoleOut, message);
te	True	Added check for enableAuthorities setting in deleteUser method of JdbcUserDetailsManager<add>provisioning/JdbcUserDetailsManager.java<add>* enableAuthorities} property is set to false, calls to createUser, updateUser and deleteUser will not store the<add>* authorities from the <add>* between authorities which were loaded for an individual or for a group of which the individual is a member,<add>* it's important that you take this into account when using this implementation for managing your users.<add>if (getEnableAuthorities()) {<add>deleteUserAuthorities(username);<add>}<del>provisioning/JdbcUserDetailsManager.java<del>* enableAuthorities} property is set to false, calls to createUser and updateUser will not store the<del>* authorities from the <del>* loaded for an individual or for a group of which the individual is a member, it's important that you take this<del>* into account when using this implementation for managing your users.<del>deleteUserAuthorities(username);
te	True	DSC alarm now sends user code over serial interface<add>internal/DSCAlarmActiveBinding.java<add>api = new API(serialPort, baudRate, userCode);<del>internal/DSCAlarmActiveBinding.java<del>api = new API(serialPort, baudRate);
te	False	Statically check HBase short CF name integrity<add>deeplearning/DeepLearningModel.java<add>err.training_AUC = mm._auc;<del>deeplearning/DeepLearningModel.java
te	True	Added Javadoc for ShowcaseViews addAnimatedGestureToView<add>showcaseview/ShowcaseViews.java<add>/**<add>* Add an animated gesture to the view at position viewIndex.<add>* @param viewIndex The position of the view the gesture should be added to (beginning with 0 for the view which had been added as the first one)<add>* @see com.espian.showcaseview.ShowcaseView#animateGesture(float, float, float, float)<add>*/<del>showcaseview/ShowcaseViews.java
te	True	removed unused autoStartOtr variable<add>service/RemoteImService.java<add>int otrPolicy = OtrPolicy.OPPORTUNISTIC;<del>service/RemoteImService.java<del>private boolean autoStartOtr = false;<del>int otrPolicy = OtrPolicy.OPPORTUNISTIC;<del>autoStartOtr = false;<del>
te	False	skip language variants for the website overview<add>builders/TileBuilder.java<add>laser.setTexture(DefaultProps.TEXTURE_PATH_ENTITIES + "/laser_1.png");<del>builders/TileBuilder.java<del>laser.setTexture("/net/minecraft/src/buildcraft/core/gui/stripes.png");
te	False	Moved the new sync migrator into a more sensical package<add>io/NetworkOs.java<add>freeifaddrs(interfaces);<add>freeifaddrs(interfaces);<del>io/NetworkOs.java<del>freeifaddrs(interfaces);
te	True	Change DefaultPriceListSet to use a DefaultPriceList instead of a PriceListDefault field for<add>catalog/DefaultPriceListSet.java<add>private DefaultPriceList defaultPricelist;<del>catalog/DefaultPriceListSet.java<del>private PriceListDefault defaultPricelist;
te	True	Fix wrong condition<add>impl/IconUtilities.java<add>if (sourceWidth > 0 && sourceHeight > 0) {<del>impl/IconUtilities.java<del>if (sourceWidth > 0 && sourceWidth > 0) {
te	False	save project encoding<add>runtime/Lexer.java<del>runtime/Lexer.java<del>/** When parsing "x = <del>*  nextToken() so <del>*/<del>public Token nextTokenOrRuleToken() {<del>//if ( '<del>return nextToken();<del>}<del>
te	False	hide setup chunk once it no longer shows errors<add>store/BatchingPageCache.java<add>import org.neo4j.kernel.impl.store.StoreFactory;<add>// This is a hack necessary to make sure that we write to disk immediately the changes to the<add>// counts store since we circumvent the page cache to read the counts<add>Writer writer = file.getName().contains( StoreFactory.COUNTS_STORE )<add>? SYNCHRONOUS.create( channel, monitor )<add>: writerFactory.create( channel, monitor );<add>BatchingPagedFile pageFile = new BatchingPagedFile( channel, writer, pageSize );<del>store/BatchingPageCache.java<del>BatchingPagedFile pageFile = new BatchingPagedFile( channel,<del>writerFactory.create( channel, monitor ), pageSize );
te	True	Statically check HBase short CF name integrity<add>hbase/HBaseStoreManager.java<add><add>static {<add>// Verify that shortCfNameMap is injective<add>Preconditions.checkArgument(null != shortCfNameMap);<add>Collection<add>Preconditions.checkArgument(Sets.newHashSet(shorts).size() == shorts.size());<add>}<del>hbase/HBaseStoreManager.java
te	False	add shell bolt pending limit in fresh branch<add>render/RenderEntityBlock.java<add>if (doTessellating)<add>if (doTessellating)<add>tessellator.draw();<del>render/RenderEntityBlock.java<del>// TODO: needs to cancel the test because the variable is now private... May need to<del>// duplicate the tessellator code.<del>//if (doTessellating && !tessellator.isDrawing)<del>// TODO: needs to cancel the test because the variable is now private... May need to<del>// duplicate the tessellator code.<del>//if (doTessellating && tessellator.isDrawing)<del>tessellator.draw();
te	False	switching to context classloader<add>widget/TextView.java<add>i.setFlags(i.getFlags() | Intent.FLAG_ACTIVITY_NEW_TASK);<del>widget/TextView.java
te	False	add builder methods withWidth and withHeight<add>pm/PackageManagerService.java<add>// Ensure default permissions are never cleared.<add>mDefaultPermissionPolicy.grantDefaultPermissions(userId);<add><del>pm/PackageManagerService.java
te	True	Remove unused code<add>morfologik/MorfologikSpeller.java<del>morfologik/MorfologikSpeller.java<del>//    boolean isAlphabetic = true;<del>//    if (word.length() == 1) { // dictionaries usually do not contain punctuation<del>//      isAlphabetic = StringTools.isAlphabetic(word.charAt(0));<del>//    }<del>//            && isAlphabetic<del>//            && !containsDigit(word)<del>//            && !speller.isInDictionary(word)<del>//            && !(!StringTools.isMixedCase(word)<del>//                && speller.isInDictionary(word.toLowerCase(conversionLocale)));
te	False	Fix cloudmade ETA<add>cli/Arguments.java<add>@Parameter(names = { "-D", "--enable-additional-properties" }, description = "Enable additional properties support on generated types, regardless of the input schema(s)")<add>private boolean isIncludeAdditionalProperties = false;<add>return isIncludeAdditionalProperties;<del>cli/Arguments.java<del>@Parameter(names = { "-D", "--disable-additional-properties" }, description = "Disable additional properties support on generated types, regardless of the input schema(s)")<del>private boolean disableAdditionalProperties = false;<del>return disableAdditionalProperties;
te	True	Implemented another find method in DBCollection<add>mongodb/DBCollection.java<add>public DBCursor find(final DBObject filter) {<add>return find(filter, null);<add>}<add><del>mongodb/DBCollection.java
te	False	Using comboxBox for boolean type rendering instead fo button<add>materialistic/ItemFragment.java<add>mEmptyView.setVisibility(View.GONE);<del>materialistic/ItemFragment.java
te	True	setSelected method uses text and icon instead of JMenuItem<add>customcontrols/SIPCommSelectorBox.java<add>public void setSelected(String text, Icon icon) {<add>this.setIcon(icon);<add>this.setSelectedObject(text);<del>customcontrols/SIPCommSelectorBox.java<del>public void setSelected(JMenuItem menuItem) {<del>this.setIcon(menuItem.getIcon());<del>this.setSelectedObject(menuItem.getText());
te	False	don t write fileTypeChangedCounter default value<add>rapids/AST.java<add>if (captured.isAry()) throw new IllegalArgumentException("Frames not supported in the if's condition.");<del>rapids/AST.java
te	True	removed attic test<add>integrationtests/TransportSQLActionTest.java<del>integrationtests/TransportSQLActionTest.java<del>public void testSelectFromSysNodes() throws Exception {<del>execute("select * from sys.nodes");<del>}<del><del>@Test
te	False	Add the option to set transfersTxtDefinesStationPaths option to use the transfers txt from the gtfs feed<add>aggregations/AggregatorFactories.java<del>aggregations/AggregatorFactories.java<del>// NOCOMMIT work out dependency order of reducer factories<del>System.out.println("ORDERED REDUCERS: " + orderedReducerNames);
te	True	Add FLAG_ACTIVITY_NEW_TASK flag when adding a word to the dictionary<add>widget/TextView.java<add>i.setFlags(i.getFlags() | Intent.FLAG_ACTIVITY_NEW_TASK);<del>widget/TextView.java
te	True	removing duplicated code i just added<add>patterns/JMSFilterTest.java<add>public class JMSFilterTest extends FilterTest {<del>patterns/JMSFilterTest.java<del>public class JMSFilterTest extends CamelTestSupport {<del><del>@EndpointInject(uri = "mock:result")<del>protected MockEndpoint resultEndpoint;<del><del>@Produce(uri = "direct:start")<del>protected ProducerTemplate template;<del><del>public void testSendMatchingMessage() throws Exception {<del>String expectedBody = "<del><del>resultEndpoint.expectedBodiesReceived(expectedBody);<del><del>template.sendBodyAndHeader(expectedBody, "foo", "bar");<del><del>resultEndpoint.assertIsSatisfied();<del>}<del><del>public void testSendNotMatchingMessage() throws Exception {<del>resultEndpoint.expectedMessageCount(0);<del><del>template.sendBodyAndHeader("<del><del>resultEndpoint.assertIsSatisfied();<del>}
te	True	enter handler fixed<add>editorActions/EnterHandler.java<add>iterator = highlighter.createIterator(0);<del>editorActions/EnterHandler.java<del>iterator = highlighter.createIterator(0);
te	True	Using comboxBox for boolean type rendering instead fo button<add>form/BooleanFormPropertyRenderer.java<add>import com.vaadin.ui.CheckBox;<add>CheckBox checkBox = new CheckBox(getPropertyLabel(formProperty));<add>checkBox.setRequired(formProperty.isRequired());<add>checkBox.setEnabled(formProperty.isWritable());<add>checkBox.setValue(formProperty.getValue());<add>return checkBox;<del>form/BooleanFormPropertyRenderer.java<del>import com.vaadin.ui.Button;<del>Button button = new Button(getPropertyLabel(formProperty));<del>button.setRequired(formProperty.isRequired());<del>button.setEnabled(formProperty.isWritable());<del>button.setValue(formProperty.getValue());<del>return button;
te	False	Using comboxBox for boolean type rendering instead fo button<add>document/ODatabaseDocumentTxTest.java<add>import com.orientechnologies.orient.core.exception.ODatabaseException;<add><add>@Test(expectedExceptions = AssertionError.class)<add>public void testSaveInvalidRid() {<add>ODatabaseDocumentTx db = new ODatabaseDocumentTx("memory: rid_" + ODatabaseDocumentTxTest.class.getSimpleName());<add>db.create();<add>try {<add>ODocument doc = new ODocument();<add><add>doc.field("test", new ORecordId(-2, 10));<add><add>db.save(doc);<add><add>} finally {<add>db.drop();<add>}<add>}<add><add>}<del>document/ODatabaseDocumentTxTest.java<del>}
te	True	Remove unuse Inject on ItemPresenter class<add>presenters/ItemsPresenter.java<del>presenters/ItemsPresenter.java<del>import javax.inject.Inject;<del><del>@Inject
te	False	Fix typo in comment<add>app/ActivityThread.java<add>// Register the UI Thread as a sensitive thread to the runtime.<add>VMRuntime.registerSensitiveThread();<del>app/ActivityThread.java
te	True	Fix typo in warning message<add>internal/ThreadLocalRandom.java<add>// Get from a different thread to avoid blocking indefinitely on a machine without much entropy.<add>"Not enough entropy?", timeoutSeconds<del>internal/ThreadLocalRandom.java<del>// Get from a different thread to avoid blocking indefinitely on a machine without much entrophy.<del>"Not enough entrophy?", timeoutSeconds
te	False	Validate PlayApplicationBinarySpec instead of PlayApplicationSpec<add>core/PApplet.java<add>//    Class c = Class.forName(name);<add>Class c = Thread.currentThread().getContextClassLoader().loadClass(name);<del>core/PApplet.java<del>Class c = Class.forName(name);
te	True	use supplied display interface for code browser<add>editors/EditingTargetCodeExecution.java<add>display, docId);<del>editors/EditingTargetCodeExecution.java<del>target.getDocDisplay(), docId);
te	False	Fix javadoc copy paste error<add>local/OStorageLocal.java<add>if (iClusterId <add>return null;<add><del>local/OStorageLocal.java
te	False	Make checkstyle happy<add>composite/GradleCompositeException.java<add>/**<add>* Thrown when there is some problem using a Gradle composite.<add>*<add>* @since 2.12<add>*/<del>composite/GradleCompositeException.java
te	False	Ask people not to reformat since this is imported code<add>small/Bundle.java<add>if (this.uriString == null || !uriString.startsWith(this.uriString)) return false;<del>small/Bundle.java<del>if (!uriString.startsWith(this.uriString)) return false;
te	False	Fix connect on a network id with zero<add>sql/Sql.java<add>* free any cached resources.<del>sql/Sql.java<del>* free any caches resources.
te	True	Removed printStackTrace in initializeTimeout<add>solo/Solo.java<del>solo/Solo.java<del>e.printStackTrace();
te	False	Fix TargetGraphFactory not adding nodes<add>strategy/GenericFileRenameExclusiveReadLockStrategy.java<add>* After granting the read lock it is released, we just want to make sure that when we start<del>strategy/GenericFileRenameExclusiveReadLockStrategy.java<del>* After granting the read lock it is realeased, we just want to make sure that when we start
te	True	set SSL port for email sending when configured to use SSL<add>alerts/AlertSender.java<add>if (core.getConfiguration().isEmailTransportUseSsl()) {<add>email.setSslSmtpPort(Integer.toString(core.getConfiguration().getEmailTransportPort()));<add>}<del>alerts/AlertSender.java
te	False	add awaitFix the entire MinimumMasterNodesTests class<add>gitblit/GitBlit.java<add><add>settingsModel = loadSettingModels();<del>gitblit/GitBlit.java<del>settingsModel = loadSettingModels();<del>
te	True	Improve some error handling on class name searching<add>jme3androidexamples/MainActivity.java<add>Class<add>} catch (NoClassDefFoundError ncdf) {<add>include = false;<add>Log.i(TAG, "Skipping Class " + className + ". No Class Def found.");<del>jme3androidexamples/MainActivity.java<del>Class
te	False	fixed property name<add>impl/DiffRequestProcessor.java<add>if (hadFocus) requestFocusInternal();<add>protected void requestFocusInternal() {<add>JComponent component = getPreferredFocusedComponent();<add>if (component != null) component.requestFocus();<add>}<add><add>DiffRequestProcessor.this.requestFocusInternal();<del>impl/DiffRequestProcessor.java<del>if (hadFocus) requestFocus();<del>DiffRequestProcessor.this.requestFocus();
te	False	enhance inline docu<add>rss/ContactRssImpl.java<add>import java.util.*;<add><add>/**<add>* Indicates if this contact supports resources.<add>*<add>* @return <add>* resources<add>*/<add>public boolean supportResources()<add>{<add>return false;<add>}<add><add>/**<add>* Returns a collection of resources supported by this contact or null<add>* if it doesn't support resources.<add>*<add>* @return null, as this contact doesn't support resources<add>*/<add>public Collection<add>{<add>return null;<add>}<del>rss/ContactRssImpl.java
te	True	fixing flaky test<add>matchers/ConsoleOutMatcher.java<add>return StringUtils.contains(consoleOut.toLowerCase(), message.toLowerCase());<del>matchers/ConsoleOutMatcher.java<del>return StringUtils.contains(consoleOut, message);
te	False	Fixed bug on negative cluster id<add>tokenizer/XMLTokenizeLanguage.java<add>ObjectHelper.notNull(path, "path");<del>tokenizer/XMLTokenizeLanguage.java<del>ObjectHelper.notNull(path, "token");
te	True	Added Chromium to fallback browsers list<add>util/Util.java<add>"org.chromium.chrome",<del>util/Util.java
te	True	Improved assertion message to get better insight into why test fails sometimes<add>harness/InProcessBuilderTest.java<add>import java.util.Arrays;<add>assertThat( Arrays.toString( workDir.list() ), workDir.list().length, equalTo( 0 ) );<del>harness/InProcessBuilderTest.java<del>assertThat( workDir.list().length, equalTo( 0 ) );
te	True	do not set connection with property that user have not specified<add>pool/PoolElf.java<add>if (transactionIsolation == -1) {<add>transactionIsolation = connection.getTransactionIsolation();<add>}<add>else if (transactionIsolation != Connection.TRANSACTION_NONE) {<del>pool/PoolElf.java<del>final int defaultLevel = connection.getTransactionIsolation();<del>transactionIsolation = (transactionIsolation <del>if (transactionIsolation != defaultLevel) {
te	True	config Don t access the file system every call<add>configuration/FileSystemSourceCache.java<del>configuration/FileSystemSourceCache.java<del>if (!directory.exists() || !directory.isDirectory()) throw new IllegalArgumentException("Not a directory: " + directory);
te	True	Changed log gin level warn debug<add>hazelcast/OHazelcastPlugin.java<add>ODistributedServerLog.debug(this, getLocalNodeName(), null, DIRECTION.NONE,<del>hazelcast/OHazelcastPlugin.java<del>ODistributedServerLog.warn(this, getLocalNodeName(), null, DIRECTION.NONE,
te	True	removed methods getIntegrateEnvironment and getUpdateEnvironment since they returned resutlt of getUpdateEnvironment result and this was not what user were expecting<add>git4idea/GitVcs.java<del>git4idea/GitVcs.java<del>@Nullable<del>public UpdateEnvironment getStatusEnvironment() {<del>return getUpdateEnvironment();<del>}<del><del>/**<del>* {@inheritDoc}<del>*/<del>@Override<del>@Override<del>public UpdateEnvironment getIntegrateEnvironment() {<del>return getUpdateEnvironment();<del>}<del><del>/**<del>* {@inheritDoc}<del>*/
te	False	Add missing exception check<add>acra/ErrorReporter.java<add>// Immediately send reports for SILENT and TOAST modes.<add>// Immediately send reports int NOTIFICATION mode only if they are all silent.<add><add>if (mReportingInteractionMode == ReportingInteractionMode.TOAST && !onlySilentReports) {<add>// Display the Toast in TOAST mode only if there are non-silent reports.<add><add>// There are reports to send, display the notification<del>acra/ErrorReporter.java<del>if (mReportingInteractionMode == ReportingInteractionMode.TOAST) {
te	False	Fixed typo for NETHER_WARTS<add>client/FileSystemIntegrationTest.java<add>public final class FileSystemIntegrationTest {<del>client/FileSystemIntegrationTest.java<del>public class FileSystemIntegrationTest {
te	False	added mInviteOperationInProgress flag to saved instance state<add>dev/RuleOverview.java<add>int overallJavaCount = 0;<add>overallJavaCount++;<add><add>if (overallJavaCount == 0) {<add>throw new RuntimeException("No Java rules found");<add>}<del>dev/RuleOverview.java
te	False	log exceptions on remote search properly dispatch MessageList changes<add>toolbar/Toolbar.java<add>final JTextField result = new JTextField(50);<add><add>result.setEnabled(false);<del>toolbar/Toolbar.java<del>final JTextField result = new JTextField(50) {<del>@Override<del>public void setBorder(Border border) {<del>}<del>};
te	True	Fixed strange compilation error that only happens with some java compilers<add>cache/SoftLruCache.java<add>return counter.<del>cache/SoftLruCache.java<del>return counter.count( null );
te	False	Fixing test issue<add>muc/HostedRoom.java<add>import org.jivesoftware.smack.util.Objects;<add>import org.jxmpp.jid.EntityBareJid;<add>private final EntityBareJid jid;<add>jid = Objects.requireNonNull(item.getEntityID().asEntityBareJidIfPossible(),<add>"The discovered item must be an entity bare JID");<add>public EntityBareJid getJid() {<del>muc/HostedRoom.java<del>import org.jxmpp.jid.Jid;<del>private final Jid jid;<del>jid = item.getEntityID();<del>public Jid getJid() {
te	False	Add detail to Javadoc<add>rapids/AST.java<add>if (captured.isAry()) throw new IllegalArgumentException("Frames not supported in the if's condition.");<del>rapids/AST.java
te	False	fixed property name<add>xprivacy/ActivityMain.java<add>alertDialogBuilder.setNegativeButton(ActivityMain.this.getString(android.R.string.cancel),<add>new DialogInterface.OnClickListener() {<add>@Override<add>public void onClick(DialogInterface dialog, int which) {<add>// Do nothing<add>}<add>});<del>xprivacy/ActivityMain.java
te	True	fix a couple javadoc warnings<add>orm/HibernateCriteriaBuilder.java<add>* @param types List of types for the projected values<add>* @param types List of types for the projected values<del>orm/HibernateCriteriaBuilder.java<del>* @param type List of types for the projected values<del>* @param type List of types for the projected values
te	False	setSelected method uses text and icon instead of JMenuItem<add>io/NetworkOs.java<add>freeifaddrs(interfaces);<add>freeifaddrs(interfaces);<del>io/NetworkOs.java<del>freeifaddrs(interfaces);
te	True	Check hasNext in KStreamWindowReduce<add>internals/KStreamWindowReduce.java<add>return new KStreamWindowReduceValueGetter();<add>private class KStreamWindowReduceValueGetter implements KTableValueGetter<add>return iter.hasNext() ? iter.next().value : null;<del>internals/KStreamWindowReduce.java<del>return new KStreamAggregateValueGetter();<del>private class KStreamAggregateValueGetter implements KTableValueGetter<del>return iter.next().value;
te	False	enhance inline docu<add>updater/Patch.java<add>Runner.logger.info("Backing up files dir: " + toDir.getPath());<add>Runner.logger.info("applying patch file" + patchFile.getName() + " to dir " + toDir.getPath());<del>updater/Patch.java<del>Runner.logger.info("Backing up files dir: " + toDir.getCanonicalFile());<del>Runner.logger.info("applying patch file" + patchFile.getName() + " to dir " + toDir.getCanonicalFile());
te	False	Don t return a NamingContext if the binder service returns null<add>de/WordCoherencyRuleTest.java<add>import de.danielnaber.languagetool.rules.RuleMatch;<add>List<del>de/WordCoherencyRuleTest.java<del>List matches = null;
te	True	Fix infinite loop in LzoTextLoader<add>load/LzoTextLoader.java<add>if ( reader_.nextKeyValue()) {<add>Object line = reader_.getCurrentValue();<add>if (line != null) {<add>incrCounter(LzoTextLoaderCounters.LinesRead, 1L);<add>t = tupleFactory_.newTuple(new DataByteArray(line.toString().getBytes()));<add>}<add>}<del>load/LzoTextLoader.java<del>Object line = reader_.getCurrentValue();<del>if (line != null) {<del>incrCounter(LzoTextLoaderCounters.LinesRead, 1L);<del>t = tupleFactory_.newTuple(new DataByteArray(line.toString().getBytes()));<del>}
te	False	Also fixed this case of internal QP structure<add>util/Util.java<add>"org.chromium.chrome",<del>util/Util.java
te	False	Fixed bug on using in HTTP requests<add>net/NioClient.java<add>private boolean closeCalled = false;<add>connectionClosed();<add>public synchronized void connectionClosed() {<add>if (!closeCalled) {<add>closeCalled = true;<add>upstreamParser.connectionClosed();<add>}<del>net/NioClient.java<del>upstreamParser.connectionClosed();<del>public void connectionClosed() {<del>upstreamParser.connectionClosed();
te	False	don t sync chunk height when detached leads to invalid state<add>bukkit/Material.java<add>NETHER_WARTS(115),<del>bukkit/Material.java<del>NETHER_WATER(115),
te	False	properly encode strings with styles and new lines<add>unit_tests/HeapTest.java<add>// TODO: flaky test<add>//@MediumTest<del>unit_tests/HeapTest.java<del>@MediumTest
te	True	Fix a bug that could cause flings to last too long using a Scroller<add>widget/Scroller.java<add><add>if (mCurrX == mFinalX && mCurrY == mFinalY) {<add>mFinished = true;<add>}<add><del>widget/Scroller.java<del>
te	True	Redraw search autocomplete dropdown after config change<add>app/SearchDialog.java<add>mSearchAutoComplete.showDropDownAfterLayout();<del>app/SearchDialog.java
te	False	remove debug system out<add>videoSettings/ScreenshotSize.java<add><add>@Override<add>public String toString() {<add>return displayName;<add>}<del>videoSettings/ScreenshotSize.java<del>public String getDisplayName() {<del>return displayName;<del>}<del>
te	True	Refactor Extract Dependency moves classifier to parent module<add>extract/ExtractManagedDependenciesAction.java<del>extract/ExtractManagedDependenciesAction.java<del>dependency.getClassifier().undefine();
te	True	removed invalid check from test<add>server/HttpOutputTest.java<add>// Assert.assertFalse(out.isReady());<del>server/HttpOutputTest.java<del>Assert.assertFalse(out.isReady());
te	True	Fixed javadoc and added generics<add>answers/ReturnsElementsOf.java<add>* <add>public class ReturnsElementsOf implements Answer<add>private final LinkedList<add>public ReturnsElementsOf(Collection<add>this.elements = new LinkedList<del>answers/ReturnsElementsOf.java<del>* <del>@SuppressWarnings("unchecked")<del>public class ReturnsElementsOf implements Answer {<del>final LinkedList elements;<del>public ReturnsElementsOf(Collection elements) {<del>this.elements = new LinkedList(elements);
te	True	Fixed log error<add>conflict/ODefaultReplicationConflictResolver.java<add>iRecord.getIdentity(), iCurrentVersion, iOtherVersion);<del>conflict/ODefaultReplicationConflictResolver.java<del>iRecord.getIdentity(), iOtherVersion, iCurrentVersion);
te	False	every static resource returned a no cache header<add>editorActions/EnterHandler.java<add>iterator = highlighter.createIterator(0);<del>editorActions/EnterHandler.java<del>iterator = highlighter.createIterator(0);
te	True	TEST Fix test issues with branches still using mvel as default scripting language<add>script/IndexedScriptTests.java<add>String query = "{ \"query\" : { \"match_all\": {}} , \"script_fields\" : { \"test1\" : { \"id\" : \"script1\", \"lang\":\"groovy\" }, \"test2\" : { \"id\" : \"script2\", \"lang\":\"groovy\", \"params\":{\"factor\":3}  }}, size:1}";<del>script/IndexedScriptTests.java<del>String query = "{ \"query\" : { \"match_all\": {}} , \"script_fields\" : { \"test1\" : { \"id\" : \"script1\" }, \"test2\" : { \"id\" : \"script2\", \"params\":{\"factor\":3}  }}, size:1}";
te	True	Drop the unused private getLoader update the help text a bit for clarity<add>ui/GroovyMain.java<add>"options:",<add>withArgName("name=value").<add><del>ui/GroovyMain.java<del>null, // header<del>withArgName("key=value").<del><del>private static ClassLoader getLoader(ClassLoader cl) {<del>if (cl!=null) return cl;<del>cl = Thread.currentThread().getContextClassLoader();<del>if (cl!=null) return cl;<del>cl = GroovyMain.class.getClassLoader();<del>if (cl!=null) return cl;<del>return null;<del>}<del>
te	False	Removed printStackTrace in initializeTimeout<add>string/ORecordSerializerJSON.java<add>json.writeAttribute(identLevel + 1, true, fieldName, encode(record.field(fieldName)));<add>private Object encode(final Object iValue) {<add>if (iValue instanceof String) {<add>final String encoded = ((String) iValue).replace('"', '\'');<add>return encoded;<add>} else<add>return iValue;<add>}<add><del>string/ORecordSerializerJSON.java<del>json.writeAttribute(identLevel + 1, true, fieldName, record.field(fieldName));
te	True	Fixed typo for NETHER_WARTS<add>bukkit/Material.java<add>NETHER_WARTS(115),<del>bukkit/Material.java<del>NETHER_WATER(115),
te	True	Allow I O when installing providers<add>app/ActivityThread.java<add>final StrictMode.ThreadPolicy oldPolicy = StrictMode.allowThreadDiskWrites();<add>try {<add>installContentProviders(mInitialApplication, Lists.newArrayList(info));<add>} finally {<add>StrictMode.setThreadPolicy(oldPolicy);<add>}<del>app/ActivityThread.java<del>installContentProviders(mInitialApplication, Lists.newArrayList(info));
te	False	Validate PlayApplicationBinarySpec instead of PlayApplicationSpec<add>telecom/TelecomManager.java<add>private final ITelecomService mTelecomServiceOverride;<add><add>this(context, null);<add>}<add><add>/**<add>* @hide<add>*/<add>public TelecomManager(Context context, ITelecomService telecomServiceImpl) {<add>mTelecomServiceOverride = telecomServiceImpl;<add>if (mTelecomServiceOverride != null) {<add>return mTelecomServiceOverride;<add>}<del>telecom/TelecomManager.java
te	True	add document indexing back to testCancellationCleansTempFiles<add>recovery/RelocationTests.java<add><add>List<add>int numDocs = scaledRandomIntBetween(25, 250);<add>for (int i = 0; i <add>requests.add(client().prepareIndex(indexName, "type").setCreate(true).setSource("{}"));<add>}<add>indexRandom(true, requests);<del>recovery/RelocationTests.java
te	True	Add Http2HeadersEncoder ALWAYS_SENSITIVE instance<add>http2/Http2HeadersEncoder.java<add>* Always return {@code false} for {@link SensitivityDetector#isSensitive(CharSequence, CharSequence)}.<add><add>/**<add>* Always return {@code true} for {@link SensitivityDetector#isSensitive(CharSequence, CharSequence)}.<add>*/<add>SensitivityDetector ALWAYS_SENSITIVE = new SensitivityDetector() {<add>@Override<add>public boolean isSensitive(CharSequence name, CharSequence value) {<add>return true;<add>}<add>};<del>http2/Http2HeadersEncoder.java<del>* Always return {@code false} for {@link SensitivityDetector#isSensitive(ByteString, ByteString)}.
te	True	remove unnecessary comments<add>db/RadosClient.java<add>* YCSB binding for <add>* See {@code rados/README.md} for details.<del>db/RadosClient.java<del>// import org.json.JSONString;<del>* YCSB binding for <del>* See {@code redis/README.md} for details.<del>// result.put(name, new StringByteIterator(json.getJSONString(name).getString()));<del>// JSONObject json = new JSONObject(values);<del>
te	True	do not disable ToggleExpand action if there are no folding model<add>simple/SimpleDiffViewer.java<add>if (myFoldingModel != null) myFoldingModel.expandAll(expand);<del>simple/SimpleDiffViewer.java<del>public boolean isEnabled() {<del>return myFoldingModel != null;<del>}<del><del>@Override<del>assert myFoldingModel != null;<del>myFoldingModel.expandAll(expand);
te	True	Fixed bug on negative cluster id<add>local/OStorageLocal.java<add>if (iClusterId <add>return null;<add><del>local/OStorageLocal.java
te	False	Fixed issue with lazy list and graphs<add>start/Main.java<add>showActiveSecurityPolicies();<add>private void showActiveSecurityPolicies()<add>{<add>// System.out.println("Active Security Policies: ");<add><add>// TODO: put security policy dump here<add>}<add><del>start/Main.java
te	False	Don t output control characters when terminal is a dumb terminal<add>view/DefaultView.java<add>lock.lock();<add>lock.unlock();<del>view/DefaultView.java
te	True	convert relative path to project passed in arguments into absolute path<add>build/Standalone.java<add>import com.intellij.openapi.util.io.FileUtil;<add>final String projectPath = (new File(projectPaths.get(0))).getAbsolutePath();<add>instance.loadAndRunBuild(FileUtil.toCanonicalPath(projectPath));<del>build/Standalone.java<del>instance.loadAndRunBuild(projectPaths.get(0));
te	True	skip language variants for the website overview<add>dev/RuleOverview.java<add>if (lang.isVariant()) {<add>continue;<add>}<del>dev/RuleOverview.java
te	True	add cast to float<add>config/Config.java<add>public Float memtable_cleanup_threshold = null;<del>config/Config.java<del>public Double memtable_cleanup_threshold = null;
te	False	removed unnecessary explicit cast<add>consumer/HealthCountsStreamTest.java<add>Thread.sleep(500);<del>consumer/HealthCountsStreamTest.java<del>Thread.sleep(100);
te	False	Retain search activity title upon rotation<add>rx/Observable.java<add>import rx.operators.OperationDistinctUntilChanged;<add>* Returns an Observable that forwards all sequentially distinct items emitted from the source Observable.<add>*<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public Observable<add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this));<add>}<add><add>/**<add>* Returns an Observable that forwards all items emitted from the source Observable that are sequentially distinct according to<add>* a key selector function.<add>*<add>* @param keySelector<add>*            a function that projects an emitted item to a key value which is used for deciding whether an item is sequentially<add>*            distinct from another one or not<add>* @return an Observable of sequentially distinct items<add>* @see <add>*/<add>public <add>return create(OperationDistinctUntilChanged.distinctUntilChanged(this, keySelector));<add>}<add><add>/**<del>rx/Observable.java
te	True	added sort of available languages<add>app/Language.java<add>"zh"  // Chinese<add>Arrays.sort(SUPPORTED);<add><add>synchronized (Language.class) {<del>app/Language.java<del>"zh" // chinese<del>synchronized(Language.class) {
te	False	Java Set the reserved value on the DataHeaderFlyweight with a long rather than int argument<add>deeplearning/DeepLearningModel.java<add>err.training_AUC = mm._auc;<del>deeplearning/DeepLearningModel.java
te	True	Fixed a deadlock in cancellation handling<add>server/DaemonStateCoordinator.java<add>case Broken:<add>throw new IllegalStateException("This daemon is in a broken state.");<del>server/DaemonStateCoordinator.java<del>case Broken:<del>// fall-through
te	True	Avoid crash while undefine uri in bundle json<add>small/Bundle.java<add>if (this.uriString == null || !uriString.startsWith(this.uriString)) return false;<del>small/Bundle.java<del>if (!uriString.startsWith(this.uriString)) return false;
te	False	Add some javadoc to AudioRecord plus updates based on code review comments<add>autoconfigure/SpringBootstrapCompilerAutoConfiguration.java<add>"org.springframework.context.annotation.ComponentScan",<del>autoconfigure/SpringBootstrapCompilerAutoConfiguration.java
te	False	changed keyword self lookup to use RT get<add>rss/ContactRssImpl.java<add>import java.util.*;<add><add>/**<add>* Indicates if this contact supports resources.<add>*<add>* @return <add>* resources<add>*/<add>public boolean supportResources()<add>{<add>return false;<add>}<add><add>/**<add>* Returns a collection of resources supported by this contact or null<add>* if it doesn't support resources.<add>*<add>* @return null, as this contact doesn't support resources<add>*/<add>public Collection<add>{<add>return null;<add>}<del>rss/ContactRssImpl.java
te	False	Fix missing cross ref links in the MediaPlayer java javadoc<add>simple/SimpleDiffViewer.java<add>if (myFoldingModel != null) myFoldingModel.expandAll(expand);<del>simple/SimpleDiffViewer.java<del>public boolean isEnabled() {<del>return myFoldingModel != null;<del>}<del><del>@Override<del>assert myFoldingModel != null;<del>myFoldingModel.expandAll(expand);
te	False	Ignore illegal state exception support info<add>plugin/SearchPlugin.java<add>serviceEnabled = JiveGlobals.getBooleanProperty("plugin.search.serviceEnabled", true);<del>plugin/SearchPlugin.java<del>serviceEnabled = JiveGlobals.getBooleanProperty("plugin.broadcast.serviceEnabled", true);
te	True	Log all notification interceptions<add>notification/NotificationManagerService.java<add>if (DBG || intercept) Slog.v(TAG,<add>"pkg=" + pkg + " canInterrupt=" + canInterrupt + " intercept=" + intercept);<del>notification/NotificationManagerService.java<del>if (DBG) Slog.v(TAG, "canInterrupt=" + canInterrupt + " intercept=" + intercept);
te	False	Fix an NPE when adding short SIP contacts<add>policy/JettyPolicy.java<add>* Required additions:<add>* - certificate support<add>*<add>* - directories of policy file support<del>policy/JettyPolicy.java
te	True	removed obselete NOCOMMIT and left over sysout call<add>aggregations/AggregatorFactories.java<del>aggregations/AggregatorFactories.java<del>// NOCOMMIT work out dependency order of reducer factories<del>System.out.println("ORDERED REDUCERS: " + orderedReducerNames);
te	True	Fix an NPE if available is called before the input buffer is created<add>http2/Stream.java<add>if (inBuffer == null) {<add>return 0;<add>}<del>http2/Stream.java
te	True	In test cases register ConstraintViolationExceptionMapper<add>junit/ResourceTestRule.java<add>import io.dropwizard.jersey.validation.ConstraintViolationExceptionMapper;<add><add>register(new ConstraintViolationExceptionMapper());<del>junit/ResourceTestRule.java<del>import org.glassfish.jersey.test.spi.TestContainerException;<del>import javax.validation.Validation;
te	False	re enable the internal pdf viewer<add>db/ColumnFamilyStoreTest.java<add>cfs.truncateBlocking();<del>db/ColumnFamilyStoreTest.java<del>cfs.clearUnsafe();
te	True	added mInviteOperationInProgress flag to saved instance state<add>people/PeopleInviteFragment.java<add>private static final String KEY_INVITE_IN_PROGRESS = "KEY_INVITE_IN_PROGRESS";<add>outState.putBoolean(KEY_INVITE_IN_PROGRESS, mInviteOperationInProgress);<add><add>mInviteOperationInProgress = savedInstanceState.getBoolean(KEY_INVITE_IN_PROGRESS);<del>people/PeopleInviteFragment.java
te	True	Do not retain BeanFactory ref<add>interceptor/TransactionAspectSupport.java<add>* Clear the cache.<add>this.beanFactory = null;<del>interceptor/TransactionAspectSupport.java<del>* Clear the cached transaction managers.
te	True	Fixed offset issue in ByteBuffer<add>titan/FaunusTitanGraph.java<add>import com.thinkaurelius.titan.graphdb.database.idhandling.IDHandler;<add>FaunusVertexRelationLoader loader = new FaunusVertexRelationLoader(IDHandler.getKeyID(row.left.duplicate()));<del>titan/FaunusTitanGraph.java<del>FaunusVertexRelationLoader loader = new FaunusVertexRelationLoader(row.left.duplicate());
te	False	Rename formatString to messageTemplate in FormattedAuditEvent<add>parsing/AbstractJetParsing.java<add>import org.jetbrains.annotations.TestOnly;<add>@SuppressWarnings("UnusedDeclaration")<add>@TestOnly<add>public String currentContext() {<add>String marker = "~!!!~";<add>int range = 50;<add><add>CharSequence text = myBuilder.getOriginalText();<add><add>int start = Math.max(0, myBuilder.getCurrentOffset() - range);<add>int end = Math.min(text.length() - 1, myBuilder.getCurrentOffset() + 50 + marker.length());<add><add>return new StringBuilder(text)<add>.insert(myBuilder.getCurrentOffset(), marker)<add>.substring(start, end);<add>}<del>parsing/AbstractJetParsing.java
te	False	Fix caching of receivers<add>push/NotificationsProcessingService.java<add>hideStatusBar();<add>private void hideStatusBar() {<add>Intent closeIntent = new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);<add>sendBroadcast(closeIntent);<add>}<add><del>push/NotificationsProcessingService.java<del>
te	True	Add missing exception check<add>el/TestImportHandler.java<add>@Test(expected=ELException.class)<del>el/TestImportHandler.java<del>@Test
te	False	setSelected method uses text and icon instead of JMenuItem<add>annotation/EnableCaching.java<add>*         cacheManager.setCaches(Arrays.asList(new ConcurrentMapCache("default")));<add>*         cacheManager.setCaches(Arrays.asList(new ConcurrentMapCache("default")));<del>annotation/EnableCaching.java<del>*         cacheManager.addCaches(Arrays.asList(new ConcurrentMapCache("default")));<del>*         cacheManager.addCaches(Arrays.asList(new ConcurrentMapCache("default")));
te	True	fixing license header<add>index/AutoIndexConfigIT.java<add>/**<add>* Copyright (c) 2002-2012 "Neo Technology,"<add>* Network Engine for Objects in Lund AB [http://neotechnology.com]<add>*<add>* This file is part of Neo4j.<add>*<add>* Neo4j is free software: you can redistribute it and/or modify<add>* it under the terms of the GNU Affero General Public License as<add>* published by the Free Software Foundation, either version 3 of the<add>* License, or (at your option) any later version.<add>*<add>* This program is distributed in the hope that it will be useful,<add>* but WITHOUT ANY WARRANTY; without even the implied warranty of<add>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<add>* GNU Affero General Public License for more details.<add>*<add>* You should have received a copy of the GNU Affero General Public License<add>* along with this program. If not, see <add>*/<del>index/AutoIndexConfigIT.java
te	True	Added comic fields<add>model/Comic.java<add>import java.util.List;<add><add>import saulmm.avengers.model.rest.Thumbnail;<add><add>private String title;<add>private String desccription;<add>private List<del>model/Comic.java
te	True	Consider mScrollX when drawing the checkMarkDrawable<add>widget/CheckedTextView.java<add>checkMarkDrawable.setBounds(mScrollX + left, top, mScrollX + right, bottom);<del>widget/CheckedTextView.java<del>checkMarkDrawable.setBounds( left, top, right, bottom);
te	False	Expanded the filename filter for snapshot paths<add>notification/NotificationManagerService.java<add>if (DBG || intercept) Slog.v(TAG,<add>"pkg=" + pkg + " canInterrupt=" + canInterrupt + " intercept=" + intercept);<del>notification/NotificationManagerService.java<del>if (DBG) Slog.v(TAG, "canInterrupt=" + canInterrupt + " intercept=" + intercept);
te	False	Added getString String key Object params method<add>audionotifier/AudioNotifierActivator.java<add>private AudioNotifierServiceImpl audioNotifier;<add>audioNotifier = new AudioNotifierServiceImpl();<del>audionotifier/AudioNotifierActivator.java<del>private AudioNotifierImpl audioNotifier;<del>audioNotifier = new AudioNotifierImpl();
te	False	Attribute value index check<add>block/UnderStoreBlockInStream.java<add>/** The start of this block. This is the absolute position within the under store stream. */<add>/** The length of the block. */<add>/** The UFS path for this block. */<add>/**<add>* The current position for this block stream. This is the absolute position within the under<add>* store stream.<add>*/<add>/** The current under store stream. */<del>block/UnderStoreBlockInStream.java
te	False	added Comparable to default imports<add>shadows/ShadowConnectivityManager.java<add>public ShadowConnectivityManager() {<del>shadows/ShadowConnectivityManager.java<del>public void __constructor__() {
te	True	remove an empty function from AdminClient java<add>admin/AdminClient.java<del>admin/AdminClient.java<del>private void printUpdateEntriesStats(long printStatsTimer,<del>long entryCounter,<del>long printStatsThreshold,<del>int nodeId,<del>String storeName) {<del><del>}<del>
te	True	Removing hard coded ints<add>themes/ThemeBrowserFragment.java<add>protected static final int THEME_FILTER_ALL_INDEX = 0;<add>protected static final int THEME_FILTER_FREE_INDEX = 1;<add>protected static final int THEME_FILTER_PREMIUM_INDEX = 2;<add><add>case THEME_FILTER_PREMIUM_INDEX:<add>case THEME_FILTER_FREE_INDEX:<add>case THEME_FILTER_ALL_INDEX:<del>themes/ThemeBrowserFragment.java<del>case 2:<del>case 1:<del>case 0:
te	True	Revert change for limit of batch size<add>disruptor/RingBuffer.java<add>if (batchSize > events.length)<del>disruptor/RingBuffer.java<del>if (batchSize >= events.length)
te	False	Remove useless log level setter for analytics<add>applytx/DumpRecordsCommand.java<add>// We rely on this method having the side-effect of loading the property blocks:<add>record.numberOfProperties();<del>applytx/DumpRecordsCommand.java
te	True	add awaitFix the entire MinimumMasterNodesTests class<add>cluster/MinimumMasterNodesTests.java<add>import org.apache.lucene.util.LuceneTestCase;<add>@LuceneTestCase.AwaitsFix(bugUrl = "boaz is looking at failures in this test class. Example failure: http://build-us-00.elastic.co/job/es_g1gc_master_metal/11653/")<del>cluster/MinimumMasterNodesTests.java<del>@AwaitsFix(bugUrl = "boaz is looking a this. Example failure: http://build-us-00.elastic.co/job/es_g1gc_master_metal/11653/")
te	True	Removed an unused line of code in task edit fragment<add>activity/TaskEditFragment.java<del>activity/TaskEditFragment.java<del>import android.content.Context;<del>import com.todoroo.astrid.api.AstridApiConstants;<del>getSupportActivity().getSupportActionBar().setDisplayHomeAsUpEnabled(<del>true);
te	True	add build date to About dialog<add>gui/AboutDialog.java<add>return "LanguageTool " + JLanguageTool.VERSION + " (" + JLanguageTool.BUILD_DATE + ")\n"<add>"Copyright (C) 2005-2013 Daniel Naber\n"<add>"This software is licensed under the GNU Lesser General Public License.\n"<add>"LanguageTool Homepage: http://www.languagetool.org\n\n"<del>gui/AboutDialog.java<del>return "LanguageTool " + JLanguageTool.VERSION + "\n"
te	False	Send factory reset notification broadcasts at foreground priority<add>internal/ThreadLocalRandom.java<add>// Get from a different thread to avoid blocking indefinitely on a machine without much entropy.<add>"Not enough entropy?", timeoutSeconds<del>internal/ThreadLocalRandom.java<del>// Get from a different thread to avoid blocking indefinitely on a machine without much entrophy.<del>"Not enough entrophy?", timeoutSeconds
te	False	fix quality flaw Enabled test<add>smssync/CursorToMessage.java<add>final int duration = msgMap.get(CallLog.Calls.DURATION) == null ? 0 :<add>Integer.parseInt(msgMap.get(CallLog.Calls.DURATION));<del>smssync/CursorToMessage.java<del>final int duration = Integer.parseInt(msgMap.get(CallLog.Calls.DURATION));
te	False	Encoded special characters<add>bukkit/Material.java<add>NETHER_WARTS(115),<del>bukkit/Material.java<del>NETHER_WATER(115),
te	False	make BottomScrollPanel horizonal scrollbar aware<add>util/LogUtil.java<add><add>public static final int DEBUG = 2;<add><add>public static final int ERROR = 5;<add><add>public static final int LEVEL = ERROR;<add><add>if (LEVEL >= DEBUG) {<add>Log.d(tagName, message);<add>}<add>if (LEVEL >= ERROR) {<add>Log.e(tagName, e.getMessage(), e);<add>}<add>}<del>util/LogUtil.java<del><del>Log.d(tagName, message);<del>e.printStackTrace();<del>}
te	False	update comment to reflect message layout<add>commands/ChunkCommands.java<add>@CommandPermissions({"worldedit.delchunks"})<del>commands/ChunkCommands.java<del>@CommandPermissions({"delchunks"})
te	False	Fix infinite loop in LzoTextLoader<add>media/MediaPlayer.java<add>* @see android.media.MediaPlayer.OnInfoListener<add>* @see android.media.MediaPlayer.OnInfoListener<add>* <add>* <del>media/MediaPlayer.java
te	False	Rename supervisor policy ALWAYS_ESCALATE ESCALATE<add>util/Util.java<add>"org.chromium.chrome",<del>util/Util.java
te	False	do not call IdeFocusManager on minor focus requests<add>git4idea/GitVcs.java<del>git4idea/GitVcs.java<del>@Nullable<del>public UpdateEnvironment getStatusEnvironment() {<del>return getUpdateEnvironment();<del>}<del><del>/**<del>* {@inheritDoc}<del>*/<del>@Override<del>@Override<del>public UpdateEnvironment getIntegrateEnvironment() {<del>return getUpdateEnvironment();<del>}<del><del>/**<del>* {@inheritDoc}<del>*/
te	False	stop smart step into on return<add>telecom/TelecomManager.java<add>private final ITelecomService mTelecomServiceOverride;<add><add>this(context, null);<add>}<add><add>/**<add>* @hide<add>*/<add>public TelecomManager(Context context, ITelecomService telecomServiceImpl) {<add>mTelecomServiceOverride = telecomServiceImpl;<add>if (mTelecomServiceOverride != null) {<add>return mTelecomServiceOverride;<add>}<del>telecom/TelecomManager.java
te	False	ignores and todo comments<add>conf/NeuralNetConfiguration.java<add>private transient ObjectMapper mapper = mapper();<del>conf/NeuralNetConfiguration.java<del>private ObjectMapper mapper = mapper();
te	False	Allowing negative keys in IntObjectHashMap<add>am/ActivityStack.java<add>} else if (!isOnHomeDisplay()) {<add>return false;<add>} else if (!isHomeStack()){<add>if (DEBUG_STATES) Slog.d(TAG,<add>return mStackSupervisor.resumeHomeStackTask(returnTaskType, prev);<del>am/ActivityStack.java<del>} else {<del>if (DEBUG_STATES && isOnHomeDisplay()) Slog.d(TAG,<del>// Only resume home if on home display<del>return isOnHomeDisplay() &&<del>mStackSupervisor.resumeHomeStackTask(returnTaskType, prev);
te	False	Add cancel button to sort<add>unit_tests/HeapTest.java<add>// TODO: flaky test<add>//@MediumTest<del>unit_tests/HeapTest.java<del>@MediumTest
te	True	Removing unnecessary boilerplate<add>web/WebInterfaceWorkerBlockInfoServlet.java<add>return getUiFileInfo(fileSystem, new AlluxioURI(mBlockWorker.getFileInfo(fileId).getPath()));<del>web/WebInterfaceWorkerBlockInfoServlet.java<del>import alluxio.client.file.FileSystemContext;<del>import alluxio.client.file.FileSystemMasterClient;<del>// TODO(calvin): Remove this dependency<del>FileSystemMasterClient masterClient = FileSystemContext.INSTANCE.acquireMasterClient();<del>try {<del>return getUiFileInfo(fileSystem, new AlluxioURI(mBlockWorker.getFileInfo(fileId).getPath()));<del>} finally {<del>FileSystemContext.INSTANCE.releaseMasterClient(masterClient);<del>}
te	True	Add initiator constant for Forced Browse requests<add>network/HttpSender.java<add>// ZAP: 2016/12/12 Add initiator constant for Forced Browse requests<add>public static final int FORCED_BROWSE_INITIATOR = 11;<del>network/HttpSender.java
te	True	Refines toolbar s typing area<add>toolbar/Toolbar.java<add>final JTextField result = new JTextField(50);<add><add>result.setEnabled(false);<del>toolbar/Toolbar.java<del>final JTextField result = new JTextField(50) {<del>@Override<del>public void setBorder(Border border) {<del>}<del>};
te	False	Allow I O when installing providers<add>disruptor/RingBuffer.java<add>if (batchSize > events.length)<del>disruptor/RingBuffer.java<del>if (batchSize >= events.length)
te	True	Fixed the displayed name of the screenshot size setting<add>videoSettings/ScreenshotSize.java<add><add>@Override<add>public String toString() {<add>return displayName;<add>}<del>videoSettings/ScreenshotSize.java<del>public String getDisplayName() {<del>return displayName;<del>}<del>
te	True	arg more compile errors fixed<add>index/ExtractGooglecodeAuthorization.java<add>System.out.println("--");<del>index/ExtractGooglecodeAuthorization.java<del>System.out.ptintln("--");
te	False	added context to outcommented method in sharedGroup<add>server/SopremoExecutionThread.java<add>"The job was not successfully executed: "<add>StringUtils.stringifyException(e));<del>server/SopremoExecutionThread.java<del>"The job was not successfully submitted to the nephele job manager: "
te	False	Updated the copyright notice to current year<add>standalone/CommandLineParameters.java<add><add>@Parameter(names = {"--useTransfersTxt"},<add>description = "use transfers.txt file for the gtfsBundle (GTFS)")<add>boolean useTransfersTxt;<del>standalone/CommandLineParameters.java
te	True	Removed unused method<add>exec/BuildActionParameters.java<del>exec/BuildActionParameters.java<del>import org.gradle.initialization.BuildClientMetaData;<del>BuildClientMetaData getClientMetaData();<del>
te	False	Expanded the filename filter for snapshot paths<add>concurrent/SimpleTimeLimiter.java<add>checkArgument(timeoutDuration > 0, "bad timeout: %s", timeoutDuration);<del>concurrent/SimpleTimeLimiter.java<del>checkArgument(timeoutDuration > 0, "bad timeout: " + timeoutDuration);
te	False	Relax ServerBootstrap type constraint to support UDT properly<add>service/AbstractClinicServiceTests.java<add>* AbstractClinicServiceTests#clinicService clinicService}<del>service/AbstractClinicServiceTests.java<del>* AbstractclinicServiceTests#clinicService clinicService}
te	False	Fixed bad case of lowercasing the URL which is wrong as URLs are case sensitive<add>coverage/SourceLineCounterUtil.java<add>return !counter.isInterface();<del>coverage/SourceLineCounterUtil.java<del>return true;
te	True	removed required flag<add>parameters/RefParameter.java<add>@Override<add>@JsonIgnore<add>public boolean getRequired() {<add>return required;<add>}<add><del>parameters/RefParameter.java
te	True	Fix possible NPE<add>netty/NettyAsyncHttpProvider.java<add>String c = response.getHeader(HttpHeaders.Names.CONNECTION);<add>final boolean validConnection = c == null ? false : c.equals(HttpHeaders.Values.UPGRADE);<del>netty/NettyAsyncHttpProvider.java<del>final boolean validConnection = response.getHeader(HttpHeaders.Names.CONNECTION).equals(HttpHeaders.Values.UPGRADE);
te	True	rename actions back to admin and add suffix s instead<add>flush/TransportShardFlushAction.java<add>public static final String NAME = FlushAction.NAME + "[s]";<del>flush/TransportShardFlushAction.java<del>public static final String NAME = "indices:data/write/flush";
te	True	Fix Wifi test<add>connectivitymanagertest/ConnectivityManagerTestActivity.java<add>if (!mWifiManager.isWifiEnabled()) {<add>log("Enabled wifi before remove configured networks");<add>mWifiManager.setWifiEnabled(true);<add>sleep(SHORT_TIMEOUT);<add>}<del>connectivitymanagertest/ConnectivityManagerTestActivity.java<del>mWifiManager.setWifiEnabled(true);<del>sleep(SHORT_TIMEOUT);
te	False	ensure button latchedness sync ed w outline visibility<add>ui/GroovyMain.java<add>"options:",<add>withArgName("name=value").<add><del>ui/GroovyMain.java<del>null, // header<del>withArgName("key=value").<del><del>private static ClassLoader getLoader(ClassLoader cl) {<del>if (cl!=null) return cl;<del>cl = Thread.currentThread().getContextClassLoader();<del>if (cl!=null) return cl;<del>cl = GroovyMain.class.getClassLoader();<del>if (cl!=null) return cl;<del>return null;<del>}<del>
te	False	Wooden Power pipe needs no logic<add>tightdb/SharedGroup.java<add>context = new Context();<del>tightdb/SharedGroup.java
te	False	fixed Gson TypeAdapters javadoc<add>javacv/IPCameraFrameGrabber.java<add>throw new Exception(e.getMessage(), e);<add>// Don't set the url to null, it may be needed to restart this object<del>javacv/IPCameraFrameGrabber.java<del>e.printStackTrace();<del>url = null;
te	True	Fixed potential renderer error<add>admin/AdminRunningInstancesPanel.java<add>String theValue = null;<add>try {<add>theValue = variableRendererManager.getStringRepresentation(variables.get(variable));<add>} catch(Exception e) {<add>theValue = "N/A";<add>}<del>admin/AdminRunningInstancesPanel.java<del>String theValue = variableRendererManager.getStringRepresentation(variables.get(variable));
te	True	Remove invalid overwrite in MixinWorldManager<add>world/MixinWorldManager.java<del>world/MixinWorldManager.java<del><del>/**<del>* @author blood - August 23rd, 2016<del>* @reason Gets the dimension id from provider instance to support mods.<del>*<del>* @return provider dimension id<del>*/<del>@Overwrite<del>public static int getDimensionId(WorldProvider provider) {<del>return provider.getDimension();<del>}
te	True	fixed size records<add>impl/PythonLanguageLevelPusher.java<add>private static final FileAttribute PERSISTENCE = new FileAttribute("python_language_level_persistence", 1, true);<del>impl/PythonLanguageLevelPusher.java<del>private static final FileAttribute PERSISTENCE = new FileAttribute("python_language_level_persistence", 1);
te	False	do not show invalid breakpoints when rendering gutter events<add>rules/Rule.java<add>Set<add>if (relevantIDs != null && relevantIDs.contains(getId())) {<add>return true;<add>} else {<add>return false;<del>rules/Rule.java<del>Language[] languages = Language.LANGUAGES;<del>for (int i = 0; i <del>Set<del>if (relevantIDs != null && relevantIDs.contains(getId()))<del>return true;<del>return false;
te	False	added mInviteOperationInProgress flag to saved instance state<add>commitlog/CommitLogSegment.java<add>Object cdcStateLock = new Object();<add>synchronized(cdcStateLock)<del>commitlog/CommitLogSegment.java<del>synchronized(this)
te	True	stop smart step into on return<add>engine/RequestHint.java<add>if (myMethodFilter != null && !mySteppedOut) {<del>engine/RequestHint.java<del>if (myMethodFilter != null) {
te	True	remove final decorators on method parameters<add>hadoop/HadoopUtils.java<add>private static void setConfigurationFromSystemProperties(Configuration configuration,<add>String[] propertyNames) {<add>private static void setConfigurationFromSystemProperty(Configuration configuration,<add>String propertyName) {<del>hadoop/HadoopUtils.java<del>private static void setConfigurationFromSystemProperties(final Configuration configuration,<del>final String[] propertyNames) {<del>private static void setConfigurationFromSystemProperty(final Configuration configuration,<del>final String propertyName) {
